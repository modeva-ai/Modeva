Search.setIndex({"alltitles": {"00:00.000 total execution time for 0 files from _sourceauto_galleriesval:": [[83, "total-execution-time-for-0-files-from-sourceauto-galleriesval"]], "00:03.468 total execution time for 2 files from _sourceauto_galleriesval4_resilience:": [[70, "total-execution-time-for-2-files-from-sourceauto-galleriesval4-resilience"]], "00:04.863 total execution time for 1 file from _sourceauto_galleriesval6_fairness:": [[77, "total-execution-time-for-1-file-from-sourceauto-galleriesval6-fairness"]], "00:06.072 total execution time for 5 files from _sourceauto_galleriesdev1_extmodels:": [[34, "total-execution-time-for-5-files-from-sourceauto-galleriesdev1-extmodels"]], "00:09.116 total execution time for 3 files from _sourceauto_galleriesutil:": [[48, "total-execution-time-for-3-files-from-sourceauto-galleriesutil"]], "00:11.054 total execution time for 2 files from _sourceauto_galleriesval7_explainability:": [[81, "total-execution-time-for-2-files-from-sourceauto-galleriesval7-explainability"]], "00:11.371 total execution time for 4 files from _sourceauto_galleriesval1_performance:": [[58, "total-execution-time-for-4-files-from-sourceauto-galleriesval1-performance"]], "00:14.368 total execution time for 2 files from _sourceauto_galleriesval5_robustness:": [[74, "total-execution-time-for-2-files-from-sourceauto-galleriesval5-robustness"]], "00:16.431 total execution time for 2 files from _sourceauto_galleriesval3_reliability:": [[66, "total-execution-time-for-2-files-from-sourceauto-galleriesval3-reliability"]], "00:16.962 total execution time for 2 files from _sourceauto_galleriesval2_overfitting:": [[62, "total-execution-time-for-2-files-from-sourceauto-galleriesval2-overfitting"]], "00:45.194 total execution time for 9 files from _sourceauto_galleriesdata:": [[11, "total-execution-time-for-9-files-from-sourceauto-galleriesdata"]], "00:47.946 total execution time for 4 files from _sourceauto_galleriesdev3_hpo:": [[40, "total-execution-time-for-4-files-from-sourceauto-galleriesdev3-hpo"]], "00:54.210 total execution time for 1 file from _sourceauto_galleriesdev:": [[43, "total-execution-time-for-1-file-from-sourceauto-galleriesdev"]], "01:10.869 total execution time for 2 files from _sourceauto_galleriesval0_residual:": [[52, "total-execution-time-for-2-files-from-sourceauto-galleriesval0-residual"]], "03:59.996 total execution time for 14 files from _sourceauto_galleriesdev0_models:": [[27, "total-execution-time-for-14-files-from-sourceauto-galleriesdev0-models"]], "1. Aggregation Stage": [[338, "aggregation-stage"]], "1. Data Sparsity:": [[348, "data-sparsity"]], "1. Gradient Sensitivity:": [[348, "gradient-sensitivity"]], "1. Prepare external data and model": [[358, "prepare-external-data-and-model"]], "1. Uniform Binning": [[353, "uniform-binning"]], "1. Univariate Partitioning:": [[348, "univariate-partitioning"]], "1D ALE": [[79, "d-ale"]], "1D Partial dependency plots": [[79, "d-partial-dependency-plots"]], "2. Complexity Measure:": [[348, "complexity-measure"]], "2. Local Curvature:": [[348, "local-curvature"]], "2. Multivariate Region Detection:": [[348, "multivariate-region-detection"]], "2. Purification Stage": [[338, "purification-stage"]], "2. Quantile Binning": [[353, "quantile-binning"]], "2. Wrapping data into Modeva": [[358, "wrapping-data-into-modeva"]], "2D ALE": [[79, "id2"]], "2D Partial dependency plots": [[79, "id1"]], "2D feature interaction analysis": [[60, "d-feature-interaction-analysis"], [61, "d-feature-interaction-analysis"]], "3. Automatic Binning Using a Depth-1 or 2 XGBoost Tree": [[353, "automatic-binning-using-a-depth-1-or-2-xgboost-tree"]], "3. Generalization Gap Connection:": [[348, "generalization-gap-connection"]], "3. Uncertainty Assessment:": [[348, "uncertainty-assessment"]], "3. Wrapping Sklearn model into Modeva": [[358, "wrapping-sklearn-model-into-modeva"]], "3D Scatter Plot": [[321, "d-scatter-plot"]], "4. Create TestSuite for model validation": [[358, "create-testsuite-for-model-validation"]], "ALE (Accumulated Local Effects)": [[326, "ale-accumulated-local-effects"], [328, null]], "API Reference": [[0, null]], "AUC Score": [[313, "auc-score"]], "Accuracy Comparison": [[313, "accuracy-comparison"], [315, "accuracy-comparison"]], "Accuracy Score": [[313, "accuracy-score"]], "Add advanced ML models": [[42, "add-advanced-ml-models"]], "Add traditional ML models": [[42, "add-traditional-ml-models"]], "Add wrapped scikit-learn model": [[42, "add-wrapped-scikit-learn-model"]], "Additional Utilities for Slicing": [[353, "additional-utilities-for-slicing"]], "Advanced Slicing": [[353, "advanced-slicing"]], "Advanced slicing analysis": [[56, "advanced-slicing-analysis"], [57, "advanced-slicing-analysis"]], "Advantages": [[339, "advantages"]], "Adverse Impact Ratio (AIR) for Disparate Impact": [[347, "adverse-impact-ratio-air-for-disparate-impact"]], "Algorithm Details": [[328, "algorithm-details"], [329, "algorithm-details"], [330, "algorithm-details"], [331, "algorithm-details"], [332, "algorithm-details"], [333, "algorithm-details"], [334, "algorithm-details"]], "Algorithms for specific models": [[334, "algorithms-for-specific-models"]], "Alternative Function-based Wrappers": [[310, "alternative-function-based-wrappers"]], "Analysis and Comparison": [[319, "analysis-and-comparison"]], "Analyzes residuals feature importance": [[50, "analyzes-residuals-feature-importance"], [51, "analyzes-residuals-feature-importance"]], "Applications of Residual Analysis": [[349, "applications-of-residual-analysis"]], "Apply subsampling by setting active samples": [[6, "apply-subsampling-by-setting-active-samples"]], "Arbitrary Model Wrapper": [[358, "arbitrary-model-wrapper"]], "Attributes": [[45, "attributes"]], "Bandwidth Comparison": [[313, "bandwidth-comparison"], [315, "bandwidth-comparison"]], "Base Model: GBLT Depth-1": [[342, "base-model-gblt-depth-1"]], "Baseline-(Kernel) SHAP (a group of baseline samples)": [[80, "baseline-kernel-shap-a-group-of-baseline-samples"]], "Baseline-(Kernel) SHAP (a single baseline sample)": [[80, "baseline-kernel-shap-a-single-baseline-sample"]], "Basic Data Operations": [[317, null]], "Basic Dataset Operations": [[2, null]], "Basic Decomposition": [[337, "basic-decomposition"], [342, "basic-decomposition"]], "Basic accuracy analysis": [[14, "basic-accuracy-analysis"], [15, "basic-accuracy-analysis"], [16, "basic-accuracy-analysis"], [17, "basic-accuracy-analysis"], [18, "basic-accuracy-analysis"], [19, "basic-accuracy-analysis"], [20, "basic-accuracy-analysis"], [21, "basic-accuracy-analysis"], [22, "basic-accuracy-analysis"], [25, "basic-accuracy-analysis"], [26, "basic-accuracy-analysis"], [54, "basic-accuracy-analysis"], [55, "basic-accuracy-analysis"]], "Basic data operations": [[2, "basic-data-operations"]], "Basic fairness analysis": [[76, "basic-fairness-analysis"]], "Basic reliability analysis": [[64, "basic-reliability-analysis"], [65, "basic-reliability-analysis"]], "Basic resilience analysis": [[68, "basic-resilience-analysis"], [69, "basic-resilience-analysis"]], "Basic robustness analysis": [[72, "basic-robustness-analysis"], [73, "basic-robustness-analysis"]], "Basic slice accuracy analysis": [[56, "basic-slice-accuracy-analysis"], [57, "basic-slice-accuracy-analysis"]], "Batch mode 1D slicing analysis": [[60, "batch-mode-1d-slicing-analysis"], [61, "batch-mode-1d-slicing-analysis"]], "Benefits": [[338, "benefits"]], "Bivariate (2D) Plots": [[321, "bivariate-2d-plots"]], "Boosted GLMTree model": [[23, "boosted-glmtree-model"], [24, "boosted-glmtree-model"]], "Build a model and save the prediction": [[33, "build-a-model-and-save-the-prediction"]], "Build a sklearn style model": [[31, "build-a-sklearn-style-model"]], "Built-in Dataset": [[317, "built-in-dataset"]], "Built-in Interpretable Models": [[12, null], [41, "built-in-interpretable-models"]], "CBLOF": [[323, "cblof"]], "Categorical Features": [[320, "categorical-features"]], "Categorical Variable Encoding": [[317, "categorical-variable-encoding"]], "Categorical Variables": [[317, "categorical-variables"], [337, "categorical-variables"]], "Challenges in Measuring Model Performance": [[349, "challenges-in-measuring-model-performance"]], "Change Feature Types": [[320, "change-feature-types"]], "Change Log": [[84, null]], "Characterization of Weak Regions": [[348, "characterization-of-weak-regions"]], "Class-based Wrappers": [[310, "class-based-wrappers"]], "Classification": [[304, "classification"]], "Classification Metrics": [[349, "classification-metrics"]], "Cluster-Based Local Outlier Factor (CBLOF)": [[319, "cluster-based-local-outlier-factor-cblof"]], "Coefficient interpretation": [[13, "coefficient-interpretation"], [14, "coefficient-interpretation"]], "Combined Application of Threshold Adjustment and Feature Binning": [[347, "combined-application-of-threshold-adjustment-and-feature-binning"]], "Compare the XGBoost model with LGBM model": [[54, "compare-the-xgboost-model-with-lgbm-model"], [55, "compare-the-xgboost-model-with-lgbm-model"]], "Comparison for Classification": [[313, null]], "Comparison for Regression": [[315, null]], "Comparison of Different Methods": [[319, "comparison-of-different-methods"]], "Computation times": [[11, null], [27, null], [34, null], [40, null], [43, null], [48, null], [52, null], [58, null], [62, null], [66, null], [70, null], [74, null], [77, null], [81, null], [83, null], [361, null]], "Conceptual Soundness": [[335, "conceptual-soundness"]], "Conditional Independence": [[322, "conditional-independence"]], "Conduct slicing analysis for overfit regions": [[60, "conduct-slicing-analysis-for-overfit-regions"], [61, "conduct-slicing-analysis-for-overfit-regions"]], "Configure MLflow settings": [[42, "configure-mlflow-settings"]], "Conformal Prediction": [[350, "conformal-prediction"]], "Continuous Formulation:": [[351, "continuous-formulation"], [351, "id1"], [351, "id2"]], "Convert the model into Modeva": [[33, "convert-the-model-into-modeva"]], "Correlation": [[3, "correlation"]], "Correlation Coefficient": [[322, "correlation-coefficient"]], "Correlation Heatmap": [[321, "correlation-heatmap"]], "Correlation based feature selection": [[4, "correlation-based-feature-selection"]], "Coverage Comparison": [[315, "coverage-comparison"]], "Create test suite for diagnostics": [[29, "create-test-suite-for-diagnostics"], [30, "create-test-suite-for-diagnostics"], [31, "create-test-suite-for-diagnostics"], [32, "create-test-suite-for-diagnostics"], [33, "create-test-suite-for-diagnostics"]], "Data Access and Properties": [[101, "data-access-and-properties"]], "Data Drift Test": [[7, null]], "Data Drift and Sampling": [[101, "data-drift-and-sampling"]], "Data Exploration": [[101, "data-exploration"]], "Data Loading": [[317, "data-loading"]], "Data Loading and Management": [[101, "data-loading-and-management"]], "Data Preparation": [[317, "data-preparation"]], "Data Preprocessing": [[317, "data-preprocessing"]], "Data Processing": [[316, null]], "Data Processing and Feature Engineering": [[5, null]], "Data Quality (Drift Test)": [[318, null]], "Data Quality (Outlier Detection)": [[319, null]], "Data Registration": [[317, "data-registration"]], "Data Summary": [[317, "data-summary"], [320, null]], "Data drift test between cluster \u201c1\u201d with the rest samples": [[21, "data-drift-test-between-cluster-1-with-the-rest-samples"], [22, "data-drift-test-between-cluster-1-with-the-rest-samples"]], "Data load and summary": [[5, "data-load-and-summary"]], "Data summary": [[3, "data-summary"]], "Data with Model Predictions": [[9, null]], "Data-Centric Approaches": [[350, "data-centric-approaches"], [351, "data-centric-approaches"], [352, "data-centric-approaches"]], "Data-Centric Solutions": [[348, "data-centric-solutions"]], "DataSet": [[101, null]], "Dataset": [[1, null]], "Dealing with Extra Data Sets": [[10, null]], "Decision Tree": [[344, null]], "Decision Tree Classification": [[15, null]], "Decision Tree Regression": [[16, null]], "Decision Tree in MoDeVa": [[344, "decision-tree-in-modeva"]], "Definitions of Group Fairness": [[347, "definitions-of-group-fairness"]], "Delete data split (if needed)": [[10, "delete-data-split-if-needed"]], "Diagnose the tuned model": [[36, "diagnose-the-tuned-model"], [37, "diagnose-the-tuned-model"], [38, "diagnose-the-tuned-model"], [39, "diagnose-the-tuned-model"]], "Diagnostic Suite": [[346, null]], "Diagnostics": [[308, "diagnostics"]], "Discrete Formulation (PSI):": [[351, "discrete-formulation-psi"]], "Discrete Formulation:": [[351, "discrete-formulation"], [351, "id3"]], "Display one subplot by its name": [[46, "display-one-subplot-by-its-name"]], "Distribution Drift": [[324, "distribution-drift"]], "EDA 1D": [[3, "eda-1d"]], "EDA 2D": [[3, "eda-2d"]], "EDA 3D": [[3, "eda-3d"]], "Effect Attribution": [[337, "effect-attribution"], [341, "effect-attribution"], [342, "effect-attribution"]], "Effect Computation": [[337, "effect-computation"], [342, "effect-computation"]], "Effect Importance": [[337, "effect-importance"], [341, "effect-importance"], [342, "effect-importance"]], "Effect importance analysis": [[25, "effect-importance-analysis"], [26, "effect-importance-analysis"]], "Effects interpretation": [[20, "effects-interpretation"]], "Empirical Cumulative Distribution-based Outlier Detection": [[319, "empirical-cumulative-distribution-based-outlier-detection"]], "Empirical Results": [[338, "empirical-results"]], "Empirical Risk Decomposition": [[348, "empirical-risk-decomposition"]], "Empirical Risk and Generalization Gap": [[348, "empirical-risk-and-generalization-gap"]], "Energy Distance": [[318, "energy-distance"]], "Error Slicing for Weakness Detection": [[353, "error-slicing-for-weakness-detection"]], "Estimation from Training and Test Errors": [[348, "estimation-from-training-and-test-errors"]], "Exact Solution": [[327, "exact-solution"], [334, "exact-solution"]], "Example": [[314, null], [318, null], [319, null], [320, null], [326, null], [327, null], [333, "example"], [347, null]], "Example 1:": [[355, null], [357, null], [358, null]], "Example 1: Bike Sharing": [[328, null], [329, null], [330, null], [331, null], [332, null], [333, null], [334, null], [337, null], [338, null], [339, null], [340, null], [341, null], [342, null], [343, null], [344, null], [348, null], [349, null], [350, null], [351, null], [352, null], [353, null]], "Example 1: BikeSharing": [[315, null]], "Example 1: Grid Search": [[356, null]], "Example 2:": [[358, null]], "Example 2: Randomized Search": [[356, null]], "Example 2: SimuCredit": [[328, null], [329, null], [330, null], [331, null], [332, null], [333, null], [334, null]], "Example 3:": [[358, null]], "Example 3: Particle Swarm Optimization Search": [[356, null]], "Example 4:": [[358, null]], "Example 5:": [[358, null]], "Example of TaiwanCredit Data Exploration": [[321, null]], "Example: Feature Selection": [[322, null]], "Example: Outlier Detection": [[323, null]], "Example: Subsampling": [[324, null]], "Examples": [[313, "examples"], [314, "examples"], [315, "examples"], [317, "examples"], [318, "examples"], [319, "examples"], [320, "examples"], [321, "examples"], [322, "examples"], [323, "examples"], [324, "examples"], [326, "examples"], [327, "examples"], [328, "examples"], [329, "examples"], [330, "examples"], [331, "examples"], [332, "examples"], [334, "examples"], [337, "examples"], [338, "examples"], [339, "examples"], [340, "examples"], [341, "examples"], [342, "examples"], [343, "examples"], [344, "examples"], [347, "examples"], [348, "examples"], [349, "examples"], [350, "examples"], [351, "examples"], [352, "examples"], [353, "examples"], [355, "examples"], [356, "examples"], [357, "examples"], [358, "examples"]], "Examples 1: Taiwan Credit": [[313, null]], "Examples 2: Taiwan Credit": [[337, null], [338, null], [339, null], [340, null], [341, null], [342, null], [343, null], [344, null], [348, null], [349, null], [350, null], [351, null], [352, null], [353, null]], "Example\uff1a Basic Data Operations": [[317, null]], "Execute the preprocessing steps defined above": [[5, "execute-the-preprocessing-steps-defined-above"], [14, "execute-the-preprocessing-steps-defined-above"]], "Expert Decomposition": [[341, "expert-decomposition"]], "Explainability": [[78, null], [82, "explainability"]], "Explanation": [[337, "explanation"]], "Exploratory Data Analysis": [[3, null], [321, null]], "External Dataset": [[317, "external-dataset"]], "External Models": [[28, null], [41, "external-models"]], "Extra and Protected Data Management": [[101, "extra-and-protected-data-management"]], "Extract the last hidden layer outputs": [[17, "extract-the-last-hidden-layer-outputs"], [18, "extract-the-last-hidden-layer-outputs"]], "F1 Score": [[313, "f1-score"]], "FBEDk Algorithm": [[322, "fbedk-algorithm"]], "Fairness": [[347, null]], "Fairness Analysis": [[75, null], [82, "fairness-analysis"]], "Fairness Comparison": [[314, null], [347, "fairness-comparison"]], "Fairness Evaluation in MoDeVa": [[347, "fairness-evaluation-in-modeva"]], "Fairness Metrics": [[314, "fairness-metrics"]], "Fairness Metrics in MoDeVa": [[347, "fairness-metrics-in-modeva"]], "Fairness Mitigation": [[347, "fairness-mitigation"]], "Fairness comparison": [[76, "fairness-comparison"]], "Feature Binning": [[347, "feature-binning"]], "Feature Engineering Solutions": [[348, "feature-engineering-solutions"]], "Feature Importance": [[322, "feature-importance"], [337, "feature-importance"], [341, "feature-importance"], [342, "feature-importance"]], "Feature Importance Plot": [[343, "feature-importance-plot"]], "Feature Manipulation": [[320, "feature-manipulation"]], "Feature Selection": [[4, null], [322, null]], "Feature Selection and Management": [[101, "feature-selection-and-management"]], "Feature importance": [[13, "feature-importance"], [14, "feature-importance"]], "Feature importance analysis": [[19, "feature-importance-analysis"], [20, "feature-importance-analysis"], [25, "feature-importance-analysis"], [26, "feature-importance-analysis"]], "Feature selection operations": [[4, "feature-selection-operations"]], "Frequently Asked Questions": [[85, null]], "Full Conformal Prediction": [[350, "full-conformal-prediction"]], "Functional ANOVA Decomposition Process for Tree Ensembles": [[338, "functional-anova-decomposition-process-for-tree-ensembles"]], "Functional ANOVA Representation": [[337, "functional-anova-representation"], [342, "functional-anova-representation"]], "GAMI-Net": [[337, null]], "GAMI-Net in MoDeVa": [[337, "gami-net-in-modeva"]], "GAMINet Classification": [[19, null]], "GAMINet Regression": [[20, null]], "GBDT in MoDeVa": [[338, "gbdt-in-modeva"]], "GBLT in MoDeVa": [[339, "gblt-in-modeva"]], "GLM in MoDeVa": [[340, "glm-in-modeva"]], "Gallery of Modeva Examples": [[86, null]], "Gating Decomposition": [[341, "gating-decomposition"]], "Generalization Gap": [[348, "generalization-gap"]], "Generalized Linear Models": [[340, null]], "Generate and save plots": [[46, "generate-and-save-plots"]], "Get data split by name": [[10, "get-data-split-by-name"]], "Global Effect Plot": [[337, "global-effect-plot"], [338, "global-effect-plot"], [341, "global-effect-plot"], [342, "global-effect-plot"]], "Global Explainability": [[79, null], [326, null]], "Global Interpretation": [[337, "global-interpretation"], [338, "global-interpretation"], [339, "global-interpretation"], [340, "global-interpretation"], [341, "global-interpretation"], [342, "global-interpretation"], [344, "global-interpretation"]], "Global effects interpretation": [[19, "global-effects-interpretation"]], "Global tree interpretation": [[15, "global-tree-interpretation"], [16, "global-tree-interpretation"]], "Gradient Boosted Decision Trees": [[338, null]], "Gradient Boosted Linear Tree (GBLT)": [[339, "gradient-boosted-linear-tree-gblt"]], "Grid Search": [[36, null]], "H-statistic": [[79, "h-statistic"]], "Handling Missing Values": [[317, "handling-missing-values"]], "Histogram-based outlier detection": [[319, "histogram-based-outlier-detection"]], "Hstats (Friedman\u2019s H-statistic)": [[326, "hstats-friedman-s-h-statistic"], [329, null]], "Hyperparameter Tuning": [[35, null], [41, "hyperparameter-tuning"], [303, null]], "ICE (Individual Conditional Expectation)": [[330, null]], "Identification of Reliability Issue and Impactful Variables": [[350, "identification-of-reliability-issue-and-impactful-variables"]], "Identification of Robustness Issue and Impactful Variables": [[352, "identification-of-robustness-issue-and-impactful-variables"]], "Identifying Problematic Regions": [[348, "identifying-problematic-regions"]], "Implementation Considerations": [[337, "implementation-considerations"], [342, "implementation-considerations"]], "Implementation Framework": [[348, "implementation-framework"]], "Individual Prediction Analysis": [[337, "individual-prediction-analysis"], [338, "individual-prediction-analysis"], [339, "individual-prediction-analysis"], [341, "individual-prediction-analysis"], [342, "individual-prediction-analysis"], [343, "individual-prediction-analysis"]], "Inherent Interpretation": [[308, "inherent-interpretation"]], "Initialize ModelZoo": [[42, "initialize-modelzoo"]], "Initialize the pipeline with steps": [[47, "initialize-the-pipeline-with-steps"]], "Input Perturbation for Robustness Test": [[352, "input-perturbation-for-robustness-test"]], "Installation": [[100, null], [100, "id1"]], "Interaction with ANOVA Decomposition": [[338, "interaction-with-anova-decomposition"]], "Interpret effect importance": [[21, "interpret-effect-importance"], [22, "interpret-effect-importance"]], "Interpret effects": [[21, "interpret-effects"], [22, "interpret-effects"]], "Interpret feature importance": [[21, "interpret-feature-importance"], [22, "interpret-feature-importance"]], "Interpret residual by a XGB depth-2 model": [[50, "interpret-residual-by-a-xgb-depth-2-model"], [51, "interpret-residual-by-a-xgb-depth-2-model"]], "Interpretability Enhancement": [[338, "interpretability-enhancement"]], "Interpretability Through Functional ANOVA": [[338, "interpretability-through-functional-anova"]], "Interpretable GBLT with Depth-1 Trees": [[339, "interpretable-gblt-with-depth-1-trees"]], "Interpretable Models": [[304, null], [336, null]], "Interpretation: Functional ANOVA Representation": [[341, "interpretation-functional-anova-representation"]], "Interpreting Residual Analysis Results": [[349, "interpreting-residual-analysis-results"]], "Introduction": [[335, null], [349, "introduction"], [353, "introduction"]], "Isolation Forest": [[319, "isolation-forest"], [323, "isolation-forest"]], "Jensen-Shannon Divergence": [[351, "jensen-shannon-divergence"]], "K-Nearest Neighbor": [[319, "k-nearest-neighbor"]], "KernelSHAP": [[327, "kernelshap"], [334, "kernelshap"]], "Key Approaches to Weakness Detection": [[353, "key-approaches-to-weakness-detection"]], "Key Modules": [[335, "key-modules"]], "KmeansTree": [[319, "kmeanstree"]], "Kolmogorov-Smirnov Statistic": [[351, "kolmogorov-smirnov-statistic"]], "LGBM Linear Tree model": [[23, "lgbm-linear-tree-model"], [24, "lgbm-linear-tree-model"]], "LIME": [[80, "lime"]], "LIME (Local Interpretable Model-Agnostic Explanation)": [[327, "lime-local-interpretable-model-agnostic-explanation"], [331, null]], "LLM Summary Table": [[343, "llm-summary-table"]], "LLM parallel coordinate plot": [[17, "llm-parallel-coordinate-plot"], [18, "llm-parallel-coordinate-plot"]], "LLM profile plot": [[343, "llm-profile-plot"]], "LLM profile plot against a feature": [[17, "llm-profile-plot-against-a-feature"], [18, "llm-profile-plot-against-a-feature"]], "LLM summary table": [[17, "llm-summary-table"], [18, "llm-summary-table"]], "Limit the number of bars in bar plots": [[46, "limit-the-number-of-bars-in-bar-plots"]], "Linear Regression (Regression)": [[14, null]], "Linear Tree": [[339, "linear-tree"]], "Linear Tree Classification": [[23, null]], "Linear Tree Regression": [[24, null]], "Linear Tree and Gradient Boosted Linear Trees": [[339, null]], "Linear Tree in MoDeVa": [[339, "linear-tree-in-modeva"]], "LinearSHAP and TreeSHAP": [[327, "linearshap-and-treeshap"]], "List the available sub-figure names": [[46, "list-the-available-sub-figure-names"]], "Load and Register Fitted Models": [[355, "load-and-register-fitted-models"]], "Load and prepare dataset": [[42, "load-and-prepare-dataset"]], "Load and verify registered models": [[42, "load-and-verify-registered-models"]], "Load data from MLFlow": [[2, "load-data-from-mlflow"]], "Load the built-in data": [[2, "load-the-built-in-data"]], "Load the first 5000 rows into Modeva": [[10, "load-the-first-5000-rows-into-modeva"]], "Load the samples indexed from 5000 to 8000 as \u201coot1\u201d data split": [[10, "load-the-samples-indexed-from-5000-to-8000-as-oot1-data-split"]], "Load the samples indexed from 8000 to 9000 as \u201coot2\u201d data split": [[10, "load-the-samples-indexed-from-8000-to-9000-as-oot2-data-split"]], "Load the samples indexed from 9000 to the last one as \u201coot3\u201d data split": [[10, "load-the-samples-indexed-from-9000-to-the-last-one-as-oot3-data-split"]], "Local Explainability": [[80, null], [327, null]], "Local Interpretation": [[337, "local-interpretation"], [338, "local-interpretation"], [339, "local-interpretation"], [340, "local-interpretation"], [341, "local-interpretation"], [342, "local-interpretation"], [343, "local-interpretation"], [344, "local-interpretation"]], "Local Linear Models (LLM)": [[343, "local-linear-models-llm"]], "Local MOE weights interpretation": [[21, "local-moe-weights-interpretation"], [22, "local-moe-weights-interpretation"]], "Local effect importance analysis": [[21, "local-effect-importance-analysis"], [22, "local-effect-importance-analysis"], [25, "local-effect-importance-analysis"], [26, "local-effect-importance-analysis"]], "Local feature importance analysis": [[13, "local-feature-importance-analysis"], [14, "local-feature-importance-analysis"], [17, "local-feature-importance-analysis"], [18, "local-feature-importance-analysis"], [19, "local-feature-importance-analysis"], [20, "local-feature-importance-analysis"], [21, "local-feature-importance-analysis"], [22, "local-feature-importance-analysis"], [25, "local-feature-importance-analysis"], [26, "local-feature-importance-analysis"]], "Local feature importance with linear coefficients": [[13, "local-feature-importance-with-linear-coefficients"], [14, "local-feature-importance-with-linear-coefficients"]], "Local tree interpretation": [[15, "local-tree-interpretation"], [16, "local-tree-interpretation"]], "Logistic Regression (Classification)": [[13, null]], "Loss Function with Monotonicity Constraint": [[342, "loss-function-with-monotonicity-constraint"]], "Loss Function with Monotonicity Constraint in GAMI-Net": [[337, "loss-function-with-monotonicity-constraint-in-gami-net"]], "Main Effects": [[338, "main-effects"]], "Main effect plot": [[13, "main-effect-plot"], [14, "main-effect-plot"], [25, "main-effect-plot"], [26, "main-effect-plot"]], "Manifestations": [[348, "manifestations"]], "Marginal Distribution Drift": [[318, "marginal-distribution-drift"]], "Marginal Distribution of Outliers": [[319, "marginal-distribution-of-outliers"]], "Mathematical Formulation": [[338, "mathematical-formulation"], [341, "mathematical-formulation"]], "Mean Absolute Error": [[315, "mean-absolute-error"]], "Mean Squared Error": [[315, "mean-squared-error"]], "Measuring Distribution Drift": [[351, "measuring-distribution-drift"]], "Methodology": [[319, "methodology"], [349, "methodology"]], "Metrics for Group Fairness": [[347, "metrics-for-group-fairness"]], "Mixture of Expert (MoE) Classification": [[21, null]], "Mixture of Expert (MoE) Regression": [[22, null]], "Mixture of Experts (MoE)": [[341, null]], "MoDeVa Documentation": [[359, null]], "MoE in MoDeVa": [[341, "moe-in-modeva"]], "MoReLUDNN Classification": [[17, null]], "MoReLUDNN Regression": [[18, null]], "Model Architecture": [[341, "model-architecture"]], "Model Comparison": [[308, "model-comparison"], [312, null]], "Model Development": [[41, null]], "Model Explainability": [[325, null]], "Model Fairness Analysis (Classification)": [[76, null]], "Model Interpretation": [[343, "model-interpretation"]], "Model Management": [[305, "model-management"], [357, "model-management"]], "Model Performance": [[53, null], [82, "model-performance"]], "Model Quality": [[338, "model-quality"]], "Model Registry": [[305, "model-registry"]], "Model Residual": [[49, null], [82, "model-residual"]], "Model Training": [[305, "model-training"], [354, null]], "Model Tuning": [[356, null]], "Model Validation": [[82, null]], "Model Wrappers": [[310, null], [358, null]], "Model Wrapping": [[345, null]], "Model Zoo": [[305, null]], "Model Zoo and Leaderboard": [[357, null]], "Model architecture": [[342, "model-architecture"], [343, "model-architecture"]], "Model comparison": [[56, "model-comparison"], [57, "model-comparison"], [60, "model-comparison"], [61, "model-comparison"]], "Model interpretation examples": [[42, "model-interpretation-examples"]], "Model registration and loading": [[42, "model-registration-and-loading"]], "Model reliability comparison": [[64, "model-reliability-comparison"], [65, "model-reliability-comparison"]], "Model robustness comparison": [[73, "model-robustness-comparison"]], "Model-Centric Approaches": [[348, "model-centric-approaches"], [351, "model-centric-approaches"], [352, "model-centric-approaches"]], "ModelTune Usage": [[356, "modeltune-usage"]], "ModelZoo": [[42, null]], "Monotonicity Constraint in GBDT": [[338, "monotonicity-constraint-in-gbdt"]], "Monotonicity Constraints in GAMI-Net": [[337, "monotonicity-constraints-in-gami-net"]], "Monotonicity Constraints in Neural Tree": [[342, "monotonicity-constraints-in-neural-tree"]], "Neural Tree": [[342, null]], "Neural Tree Transformation": [[342, "neural-tree-transformation"]], "Neural Tree in MoDeVa": [[342, "neural-tree-in-modeva"]], "Neural Tree model with Monotonicity Constraints": [[23, "neural-tree-model-with-monotonicity-constraints"], [24, "neural-tree-model-with-monotonicity-constraints"]], "Nonconformity Score:": [[350, "nonconformity-score"]], "Numerical Features": [[320, "numerical-features"]], "Numerical Variable Binning": [[317, "numerical-variable-binning"]], "Numerical Variable Scaling": [[317, "numerical-variable-scaling"]], "Numerical Variables": [[317, "numerical-variables"]], "One Class SVM": [[319, "one-class-svm"]], "One-way ALE": [[328, "one-way-ale"]], "One-way PDPs": [[332, "one-way-pdps"]], "Outcome Analysis": [[335, "outcome-analysis"]], "Outlier Detection": [[8, null], [101, "outlier-detection"], [323, null]], "Outlier Score distribution": [[319, "outlier-score-distribution"]], "Outlier detection by CBLOF": [[8, "outlier-detection-by-cblof"]], "Outlier detection by Isolation forest": [[8, "outlier-detection-by-isolation-forest"]], "Outlier detection by PCA": [[8, "outlier-detection-by-pca"]], "Overfit Comparison": [[313, "overfit-comparison"], [315, "overfit-comparison"], [348, "overfit-comparison"]], "Overfit Detection": [[59, null], [82, "overfit-detection"]], "Overfitting Analysis (Classification)": [[60, null]], "Overfitting Analysis (Regression)": [[61, null]], "Overfitting Characterization": [[348, "overfitting-characterization"]], "Overfitting Slicing in MoDeVa": [[348, "overfitting-slicing-in-modeva"]], "Overfitting and Model Robustness": [[348, "overfitting-and-model-robustness"]], "PCA": [[3, "pca"]], "PCA Plot": [[321, "pca-plot"]], "PCA-based Method": [[323, "pca-based-method"]], "PDP (Partial Dependence Plot)": [[326, "pdp-partial-dependence-plot"], [332, null]], "PFI (Permutation Feature Importance)": [[326, "pfi-permutation-feature-importance"], [333, null]], "Pairwise Interactions": [[338, "pairwise-interactions"]], "Parallel Coordinate Plot": [[343, "parallel-coordinate-plot"]], "Particle Swarm Optimization Search": [[38, null]], "Performance Comparison": [[349, "performance-comparison"]], "Performance Evaluation in MoDeVa": [[349, "performance-evaluation-in-modeva"]], "Performance Metrics (Classification)": [[54, null]], "Performance Metrics (Regression)": [[55, null]], "Performance and Residual Analysis": [[349, null]], "Permutation feature importance": [[79, "permutation-feature-importance"]], "Perturbation for Categorical Variable": [[352, "perturbation-for-categorical-variable"]], "Pipeline": [[47, null], [306, null]], "Post-hoc Explanation": [[308, "post-hoc-explanation"]], "Practical Applications": [[348, "practical-applications"]], "Practical Considerations": [[352, "practical-considerations"]], "Preprocessing": [[101, "preprocessing"]], "Prerequisite": [[100, "prerequisite"]], "Principal Component Analysis": [[319, "principal-component-analysis"]], "Properties": [[305, "properties"]], "Purification Constraints": [[337, "purification-constraints"], [342, "purification-constraints"]], "Purpose of Residual Analysis": [[349, "purpose-of-residual-analysis"]], "Quantile Perturbation with Uniform Noise": [[352, "quantile-perturbation-with-uniform-noise"]], "R-squared Score": [[315, "r-squared-score"]], "RCIT Test": [[322, "rcit-test"]], "RCIT based feature selection": [[4, "rcit-based-feature-selection"]], "Random Search": [[37, null]], "Random forest-based residual clustering analysis (absolute residual)": [[50, "random-forest-based-residual-clustering-analysis-absolute-residual"], [51, "random-forest-based-residual-clustering-analysis-absolute-residual"]], "Random forest-based residual clustering analysis (perturbed residual)": [[50, "random-forest-based-residual-clustering-analysis-perturbed-residual"], [51, "random-forest-based-residual-clustering-analysis-perturbed-residual"]], "Random forest-based residual clustering analysis (prediction interval width)": [[50, "random-forest-based-residual-clustering-analysis-prediction-interval-width"], [51, "random-forest-based-residual-clustering-analysis-prediction-interval-width"]], "Random subsampling": [[6, "random-subsampling"]], "ReLU DNN in MoDeVa": [[343, "relu-dnn-in-modeva"]], "ReLU Neural Network": [[343, null]], "References": [[319, null], [321, "references"], [321, null], [322, "references"], [322, null], [323, "references"], [323, null], [326, "references"], [326, null], [327, "references"], [327, null], [329, null], [330, null], [333, null], [334, null]], "Register H2O Models": [[355, null]], "Register data into MLFlow": [[2, "register-data-into-mlflow"]], "Regression": [[304, "regression"]], "Regression Metrics": [[349, "regression-metrics"]], "Reliability": [[350, null]], "Reliability Analysis": [[63, null], [82, "reliability-analysis"]], "Reliability Analysis (Classification)": [[64, null]], "Reliability Analysis (Regression)": [[65, null]], "Reliability Analysis in MoDeVa": [[350, "reliability-analysis-in-modeva"]], "Reliability Assessment:": [[350, "reliability-assessment"]], "Reliability Comparison": [[313, "reliability-comparison"], [315, "reliability-comparison"], [350, "reliability-comparison"]], "Reliability Diagnostics in MoDeVa": [[350, "reliability-diagnostics-in-modeva"]], "Reliability Diagram Comparison": [[313, "reliability-diagram-comparison"]], "Remediation Strategies for Model Weaknesses Identified by Gap Analysis": [[348, "remediation-strategies-for-model-weaknesses-identified-by-gap-analysis"]], "Remove Features": [[320, "remove-features"]], "Reset preprocessing": [[5, "reset-preprocessing"]], "Reset subsampling by ds.set_active_samples()": [[6, "reset-subsampling-by-ds-set-active-samples"]], "Residual Analysis": [[349, "residual-analysis"]], "Residual Analysis (Classification)": [[50, null]], "Residual Analysis (Regression)": [[51, null]], "Residual Analysis in MoDeVa": [[349, "residual-analysis-in-modeva"]], "Resilience": [[351, null]], "Resilience Analysis": [[67, null], [82, "resilience-analysis"]], "Resilience Analysis (Classification)": [[68, null]], "Resilience Analysis (Regression)": [[69, null]], "Resilience Analysis in MoDeVa": [[351, "resilience-analysis-in-modeva"]], "Resilience Comparison": [[313, "resilience-comparison"], [315, "resilience-comparison"], [351, "resilience-comparison"]], "Resilience Distance": [[313, "resilience-distance"], [315, "resilience-distance"]], "Resilience Performance": [[313, "resilience-performance"], [315, "resilience-performance"]], "Resilience Through Supervised Clustering Analysis": [[351, "resilience-through-supervised-clustering-analysis"]], "Resilience comparison": [[68, "resilience-comparison"], [69, "resilience-comparison"]], "Retrain model with best hyperparameter": [[36, "retrain-model-with-best-hyperparameter"], [37, "retrain-model-with-best-hyperparameter"], [38, "retrain-model-with-best-hyperparameter"], [39, "retrain-model-with-best-hyperparameter"]], "Robustness": [[352, null]], "Robustness Analysis": [[71, null], [82, "robustness-analysis"]], "Robustness Analysis (Classification)": [[72, null]], "Robustness Analysis (Regression)": [[73, null]], "Robustness Analysis in MoDeVa": [[352, "robustness-analysis-in-modeva"]], "Robustness Comparison": [[313, "robustness-comparison"], [315, "robustness-comparison"], [352, "robustness-comparison"]], "Robustness Performance": [[313, "robustness-performance"], [315, "robustness-performance"]], "Robustness Performance on Worst Samples": [[313, "robustness-performance-on-worst-samples"], [315, "robustness-performance-on-worst-samples"]], "Robustness comparison": [[72, "robustness-comparison"]], "Run Diagnostic Tests": [[355, "run-diagnostic-tests"]], "Run HPO": [[39, "run-hpo"]], "Run PSO search": [[38, "run-pso-search"]], "Run grid search": [[36, "run-grid-search"]], "Run random search": [[37, "run-random-search"]], "Run the pipeline": [[47, "run-the-pipeline"]], "SHAP (SHapley Additive exPlanations)": [[327, "shap-shapley-additive-explanations"], [334, null]], "SHAP Dependence Plot": [[334, "shap-dependence-plot"]], "SHAP Feature importance": [[334, "shap-feature-importance"]], "SHAP Summary plot": [[334, "shap-summary-plot"]], "Save Fitted Models": [[355, "save-fitted-models"]], "Save figures": [[46, "save-figures"]], "Save the pipeline results (optional)": [[47, "save-the-pipeline-results-optional"]], "Scored Model Wrapper": [[358, "scored-model-wrapper"]], "Scripts for building a H2O model": [[29, "scripts-for-building-a-h2o-model"]], "Scripts for building a pyspark model": [[30, "scripts-for-building-a-pyspark-model"]], "Scripts to build a model": [[32, "scripts-to-build-a-model"]], "Segmented": [[314, "segmented"]], "Set the data steps": [[5, "set-the-data-steps"]], "Show the available data splits": [[10, "show-the-available-data-splits"]], "Simple Perturbation with Normally Distributed Random Noise": [[352, "simple-perturbation-with-normally-distributed-random-noise"]], "Sklearn Model Wrapper": [[358, "sklearn-model-wrapper"]], "Sliced Performance (Classification)": [[56, null]], "Sliced Performance (Regression)": [[57, null]], "Slicing Generalization Gap": [[348, "slicing-generalization-gap"]], "Slicing fairness analysis": [[76, "slicing-fairness-analysis"]], "Slicing for Fairness Diagnostics": [[347, "slicing-for-fairness-diagnostics"]], "Slicing reliability": [[64, "slicing-reliability"], [65, "slicing-reliability"]], "Slicing robustness analysis": [[72, "slicing-robustness-analysis"], [73, "slicing-robustness-analysis"]], "Special Cases with Limited Depth": [[338, "special-cases-with-limited-depth"]], "Special Features": [[335, "special-features"]], "Split Conformal Prediction": [[350, "split-conformal-prediction"]], "Step-by-Step Process": [[341, "step-by-step-process"]], "Steps in Residual Analysis": [[349, "steps-in-residual-analysis"]], "Strategies for Addressing Model Weaknesses": [[350, "strategies-for-addressing-model-weaknesses"], [351, "strategies-for-addressing-model-weaknesses"], [352, "strategies-for-addressing-model-weaknesses"]], "Subsampling": [[6, null], [324, "subsampling"]], "Subsampling and Data Drift": [[324, null]], "Summary Statistics": [[320, "summary-statistics"]], "Supervised Learning for Residual Analysis": [[349, "supervised-learning-for-residual-analysis"]], "Supervised Machine Learning: Random Forest Clustering": [[350, "supervised-machine-learning-random-forest-clustering"], [352, "supervised-machine-learning-random-forest-clustering"]], "Techniques for Residual Analysis": [[349, "techniques-for-residual-analysis"]], "Test Error:": [[348, "test-error"]], "Test Suite": [[308, null]], "The Waterfall plot": [[334, "the-waterfall-plot"]], "Theoretical Framework": [[348, "theoretical-framework"]], "Threshold Adjustment": [[347, "threshold-adjustment"]], "Tradeoffs Between Performance and Fairness": [[347, "tradeoffs-between-performance-and-fairness"]], "Train all models and show leaderboard": [[42, "train-all-models-and-show-leaderboard"]], "Train and Register Models": [[355, "train-and-register-models"]], "Train model": [[13, "train-model"], [14, "train-model"], [15, "train-model"], [16, "train-model"], [17, "train-model"], [18, "train-model"], [19, "train-model"], [20, "train-model"], [25, "train-model"], [26, "train-model"]], "Train models": [[21, "train-models"], [22, "train-models"]], "Train-Test Split Management": [[101, "train-test-split-management"]], "Training Error:": [[348, "training-error"]], "Training and Leaderboard": [[357, "training-and-leaderboard"]], "Tree Ensemble Models (Classification)": [[25, null]], "Tree Ensemble Models (Regression)": [[26, null]], "Trouble Shooting": [[100, "trouble-shooting"]], "Tuning with optuna (Experimental)": [[39, null]], "Two-way ALE": [[328, "two-way-ale"]], "Two-way PDPs": [[332, "two-way-pdps"]], "Umap": [[3, "umap"]], "Underfitting and Overfitting": [[348, null]], "Unfairness mitigation": [[76, "unfairness-mitigation"]], "Univariate (1D) Plots": [[321, "univariate-1d-plots"]], "Unused API Entries": [[360, null]], "Usage": [[328, "usage"], [329, "usage"], [330, "usage"], [331, "usage"], [332, "usage"], [333, "usage"], [334, "usage"]], "Using Modeva": [[311, null]], "Utilities": [[44, null], [308, "utilities"], [309, null]], "Validation Result": [[307, null]], "ValidationResult - Attributes": [[45, null]], "ValidationResult - Visualization": [[46, null]], "View and use outlier detection results": [[8, "view-and-use-outlier-detection-results"]], "Visualize the residual against model prediction": [[51, "visualize-the-residual-against-model-prediction"]], "Visualize the residual against model prediction (predict proba)": [[50, "visualize-the-residual-against-model-prediction-predict-proba"]], "Visualize the residual against predictor": [[50, "visualize-the-residual-against-predictor"], [51, "visualize-the-residual-against-predictor"]], "Visualize the residual against response variable": [[50, "visualize-the-residual-against-response-variable"], [51, "visualize-the-residual-against-response-variable"]], "Wasserstein Distance": [[351, "wasserstein-distance"]], "Weakness Comparison": [[353, "weakness-comparison"]], "Weakness Detection": [[353, null]], "Weakness Detection Methods": [[348, "weakness-detection-methods"]], "Weakness Detection in MoDeVa": [[353, "weakness-detection-in-modeva"]], "Weakspot Comparison": [[313, "weakspot-comparison"], [315, "weakspot-comparison"]], "Why Weakness Detection is Important": [[353, "why-weakness-detection-is-important"]], "Wrap the PySpark model into Modeva": [[30, "wrap-the-pyspark-model-into-modeva"]], "Wrap the data": [[30, "wrap-the-data"]], "Wrap the data into Modeva": [[29, "wrap-the-data-into-modeva"], [31, "wrap-the-data-into-modeva"], [32, "wrap-the-data-into-modeva"], [33, "wrap-the-data-into-modeva"]], "Wrap the model into Modeva": [[29, "wrap-the-model-into-modeva"], [31, "wrap-the-model-into-modeva"], [32, "wrap-the-model-into-modeva"]], "Wrapping Arbitrary Classifier or Regressor": [[32, null]], "Wrapping H2O Models": [[29, null]], "Wrapping PySpark Models": [[30, null]], "Wrapping Scored Classifier or Regressor": [[33, null]], "Wrapping sklearn-style Classifier and Regressor": [[31, null]], "XGB-PFI based feature selection": [[4, "xgb-pfi-based-feature-selection"]], "XI Correlation": [[3, "xi-correlation"]], "modeva.DataSet.all_feature_names": [[102, null]], "modeva.DataSet.all_feature_types": [[103, null]], "modeva.DataSet.bin_numerical": [[104, null]], "modeva.DataSet.data": [[105, null]], "modeva.DataSet.data_drift_test": [[106, null]], "modeva.DataSet.delete_extra_data": [[107, null]], "modeva.DataSet.delete_registered_data": [[108, null]], "modeva.DataSet.detect_outlier_cblof": [[109, null]], "modeva.DataSet.detect_outlier_isolation_forest": [[110, null]], "modeva.DataSet.detect_outlier_pca": [[111, null]], "modeva.DataSet.eda_1d": [[112, null]], "modeva.DataSet.eda_2d": [[113, null]], "modeva.DataSet.eda_3d": [[114, null]], "modeva.DataSet.eda_correlation": [[115, null]], "modeva.DataSet.eda_pca": [[116, null]], "modeva.DataSet.eda_umap": [[117, null]], "modeva.DataSet.encode_categorical": [[118, null]], "modeva.DataSet.feature_names": [[119, null]], "modeva.DataSet.feature_names_categorical": [[120, null]], "modeva.DataSet.feature_names_mixed": [[121, null]], "modeva.DataSet.feature_names_numerical": [[122, null]], "modeva.DataSet.feature_select_corr": [[123, null]], "modeva.DataSet.feature_select_rcit": [[124, null]], "modeva.DataSet.feature_select_xgbpfi": [[125, null]], "modeva.DataSet.feature_types": [[126, null]], "modeva.DataSet.get_X_y_data": [[127, null]], "modeva.DataSet.get_data": [[128, null]], "modeva.DataSet.get_data_list": [[129, null]], "modeva.DataSet.get_extra_data_list": [[130, null]], "modeva.DataSet.get_prediction_data": [[131, null]], "modeva.DataSet.get_prediction_proba_data": [[132, null]], "modeva.DataSet.get_preprocessor": [[133, null]], "modeva.DataSet.get_protected_data": [[134, null]], "modeva.DataSet.get_raw_data": [[135, null]], "modeva.DataSet.impute_missing": [[136, null]], "modeva.DataSet.inverse_transform": [[137, null]], "modeva.DataSet.is_splitted": [[138, null]], "modeva.DataSet.list_registered_data": [[139, null]], "modeva.DataSet.load": [[140, null]], "modeva.DataSet.load_csv": [[141, null]], "modeva.DataSet.load_dataframe": [[142, null]], "modeva.DataSet.load_dataframe_train_test": [[143, null]], "modeva.DataSet.load_preprocessing": [[144, null]], "modeva.DataSet.load_registered_data": [[145, null]], "modeva.DataSet.load_spark": [[146, null]], "modeva.DataSet.n_features": [[147, null]], "modeva.DataSet.name": [[148, null]], "modeva.DataSet.prediction": [[149, null]], "modeva.DataSet.preprocess": [[150, null]], "modeva.DataSet.raw_data": [[151, null]], "modeva.DataSet.register": [[152, null]], "modeva.DataSet.reset_preprocess": [[153, null]], "modeva.DataSet.sample_weight": [[154, null]], "modeva.DataSet.save_preprocessing": [[155, null]], "modeva.DataSet.scale_numerical": [[156, null]], "modeva.DataSet.set_active_features": [[157, null]], "modeva.DataSet.set_feature_type": [[158, null]], "modeva.DataSet.set_inactive_features": [[159, null]], "modeva.DataSet.set_prediction": [[160, null]], "modeva.DataSet.set_prediction_proba": [[161, null]], "modeva.DataSet.set_protected_data": [[162, null]], "modeva.DataSet.set_protected_extra_data": [[163, null]], "modeva.DataSet.set_random_split": [[164, null]], "modeva.DataSet.set_raw_extra_data": [[165, null]], "modeva.DataSet.set_sample_weight": [[166, null]], "modeva.DataSet.set_target": [[167, null]], "modeva.DataSet.set_task_type": [[168, null]], "modeva.DataSet.set_test_idx": [[169, null]], "modeva.DataSet.set_train_idx": [[170, null]], "modeva.DataSet.shape": [[171, null]], "modeva.DataSet.subsample_random": [[172, null]], "modeva.DataSet.summary": [[173, null]], "modeva.DataSet.task_type": [[174, null]], "modeva.DataSet.test_prediction": [[175, null]], "modeva.DataSet.test_sample_weight": [[176, null]], "modeva.DataSet.test_x": [[177, null]], "modeva.DataSet.test_y": [[178, null]], "modeva.DataSet.to_df": [[179, null]], "modeva.DataSet.train_prediction": [[180, null]], "modeva.DataSet.train_sample_weight": [[181, null]], "modeva.DataSet.train_x": [[182, null]], "modeva.DataSet.train_y": [[183, null]], "modeva.DataSet.transform": [[184, null]], "modeva.DataSet.x": [[185, null]], "modeva.DataSet.y": [[186, null]], "modeva.ModelZoo.add_model": [[187, null]], "modeva.ModelZoo.dataset": [[188, null]], "modeva.ModelZoo.delete_registered_model": [[189, null]], "modeva.ModelZoo.get_model": [[190, null]], "modeva.ModelZoo.leaderboard": [[191, null]], "modeva.ModelZoo.list_model_names": [[192, null]], "modeva.ModelZoo.list_registered_models": [[193, null]], "modeva.ModelZoo.load_registered_model": [[194, null]], "modeva.ModelZoo.models": [[195, null]], "modeva.ModelZoo.register": [[196, null]], "modeva.ModelZoo.train": [[197, null]], "modeva.ModelZoo.train_all": [[198, null]], "modeva.TestSuite.compare_accuracy_table": [[199, null]], "modeva.TestSuite.compare_fairness": [[200, null]], "modeva.TestSuite.compare_reliability": [[201, null]], "modeva.TestSuite.compare_resilience": [[202, null]], "modeva.TestSuite.compare_robustness": [[203, null]], "modeva.TestSuite.compare_slicing_accuracy": [[204, null]], "modeva.TestSuite.compare_slicing_fairness": [[205, null]], "modeva.TestSuite.compare_slicing_overfit": [[206, null]], "modeva.TestSuite.compare_slicing_reliability": [[207, null]], "modeva.TestSuite.compare_slicing_robustness": [[208, null]], "modeva.TestSuite.delete_registed_test": [[209, null]], "modeva.TestSuite.diagnose_accuracy_table": [[210, null]], "modeva.TestSuite.diagnose_fairness": [[211, null]], "modeva.TestSuite.diagnose_mitigate_unfair_binning": [[212, null]], "modeva.TestSuite.diagnose_mitigate_unfair_thresholding": [[213, null]], "modeva.TestSuite.diagnose_reliability": [[214, null]], "modeva.TestSuite.diagnose_residual_analysis": [[215, null]], "modeva.TestSuite.diagnose_residual_cluster": [[216, null]], "modeva.TestSuite.diagnose_residual_interpret": [[217, null]], "modeva.TestSuite.diagnose_resilience": [[218, null]], "modeva.TestSuite.diagnose_robustness": [[219, null]], "modeva.TestSuite.diagnose_slicing_accuracy": [[220, null]], "modeva.TestSuite.diagnose_slicing_fairness": [[221, null]], "modeva.TestSuite.diagnose_slicing_overfit": [[222, null]], "modeva.TestSuite.diagnose_slicing_reliability": [[223, null]], "modeva.TestSuite.diagnose_slicing_robustness": [[224, null]], "modeva.TestSuite.display_test_results": [[225, null]], "modeva.TestSuite.explain_ale": [[226, null]], "modeva.TestSuite.explain_hstatistic": [[227, null]], "modeva.TestSuite.explain_lime": [[228, null]], "modeva.TestSuite.explain_pdp": [[229, null]], "modeva.TestSuite.explain_pfi": [[230, null]], "modeva.TestSuite.explain_shap": [[231, null]], "modeva.TestSuite.export_report": [[232, null]], "modeva.TestSuite.get_dataset": [[233, null]], "modeva.TestSuite.get_interactions": [[234, null]], "modeva.TestSuite.get_main_effects": [[235, null]], "modeva.TestSuite.get_model": [[236, null]], "modeva.TestSuite.interpret_coef": [[237, null]], "modeva.TestSuite.interpret_effects": [[238, null]], "modeva.TestSuite.interpret_effects_moe_average": [[239, null]], "modeva.TestSuite.interpret_fi": [[240, null]], "modeva.TestSuite.interpret_global_tree": [[241, null]], "modeva.TestSuite.interpret_llm_pc": [[242, null]], "modeva.TestSuite.interpret_llm_profile": [[243, null]], "modeva.TestSuite.interpret_llm_summary": [[244, null]], "modeva.TestSuite.interpret_llm_violin": [[245, null]], "modeva.TestSuite.interpret_local_fi": [[246, null]], "modeva.TestSuite.interpret_local_linear_fi": [[247, null]], "modeva.TestSuite.interpret_local_moe_weights": [[248, null]], "modeva.TestSuite.interpret_local_tree": [[249, null]], "modeva.TestSuite.interpret_moe_cluster_analysis": [[250, null]], "modeva.TestSuite.list": [[251, null]], "modeva.TestSuite.list_registered_tests": [[252, null]], "modeva.TestSuite.load_registered_test": [[253, null]], "modeva.TestSuite.register": [[254, null]], "modeva.TestSuite.set_dataset": [[255, null]], "modeva.TestSuite.set_model": [[256, null]], "modeva.automation.pipeline.Pipeline": [[257, null]], "modeva.models.MoCatBoostClassifier": [[258, null]], "modeva.models.MoCatBoostRegressor": [[259, null]], "modeva.models.MoClassifier": [[260, null]], "modeva.models.MoDecisionTreeClassifier": [[261, null]], "modeva.models.MoDecisionTreeRegressor": [[262, null]], "modeva.models.MoElasticNet": [[263, null]], "modeva.models.MoGAMINetClassifier": [[264, null]], "modeva.models.MoGAMINetRegressor": [[265, null]], "modeva.models.MoGLMTreeBoostClassifier": [[266, null]], "modeva.models.MoGLMTreeBoostRegressor": [[267, null]], "modeva.models.MoGLMTreeClassifier": [[268, null]], "modeva.models.MoGLMTreeRegressor": [[269, null]], "modeva.models.MoGradientBoostingClassifier": [[270, null]], "modeva.models.MoGradientBoostingRegressor": [[271, null]], "modeva.models.MoLGBMClassifier": [[272, null]], "modeva.models.MoLGBMRegressor": [[273, null]], "modeva.models.MoLogisticRegression": [[274, null]], "modeva.models.MoMoEClassifier": [[275, null]], "modeva.models.MoMoERegressor": [[276, null]], "modeva.models.MoNeuralTreeClassifier": [[277, null]], "modeva.models.MoNeuralTreeRegressor": [[278, null]], "modeva.models.MoRandomForestClassifier": [[279, null]], "modeva.models.MoRandomForestRegressor": [[280, null]], "modeva.models.MoReLUDNNClassifier": [[281, null]], "modeva.models.MoReLUDNNRegressor": [[282, null]], "modeva.models.MoRegressor": [[283, null]], "modeva.models.MoSKLearnClassifier": [[284, null]], "modeva.models.MoSKLearnRegressor": [[285, null]], "modeva.models.MoScoredClassifier": [[286, null]], "modeva.models.MoScoredRegressor": [[287, null]], "modeva.models.MoXGBClassifier": [[288, null]], "modeva.models.MoXGBRegressor": [[289, null]], "modeva.models.ModelTuneGridSearch": [[290, null]], "modeva.models.ModelTuneOptuna": [[291, null]], "modeva.models.ModelTunePSO": [[292, null]], "modeva.models.ModelTuneRandomSearch": [[293, null]], "modeva.models.modeva_arbitrary_classifier": [[294, null]], "modeva.models.modeva_arbitrary_regressor": [[295, null]], "modeva.models.modeva_sklearn_classifier": [[296, null]], "modeva.models.modeva_sklearn_regressor": [[297, null]], "modeva.testsuite.utils.slicing_utils.get_data_info": [[298, null]], "modeva.utils.mlflow.clear_mlflow_home": [[299, null]], "modeva.utils.mlflow.get_mlflow_home": [[300, null]], "modeva.utils.mlflow.set_mlflow_home": [[301, null]], "modeva.utils.results.ValidationResult": [[302, null]], "sphinx_gallery.backreferences": [[87, null]], "sphinx_gallery.block_parser": [[88, null]], "sphinx_gallery.directives": [[89, null]], "sphinx_gallery.docs_resolv": [[90, null]], "sphinx_gallery.downloads": [[91, null]], "sphinx_gallery.gen_gallery": [[92, null]], "sphinx_gallery.gen_rst": [[93, null]], "sphinx_gallery.interactive_example": [[94, null]], "sphinx_gallery.notebook": [[95, null]], "sphinx_gallery.py_source_parser": [[96, null]], "sphinx_gallery.scrapers": [[97, null]], "sphinx_gallery.sorting": [[98, null]], "sphinx_gallery.utils.optipng": [[99, null]]}, "docnames": ["_source/api_ref", "_source/auto_galleries/data/index", "_source/auto_galleries/data/plot_0_data_operations", "_source/auto_galleries/data/plot_1_eda", "_source/auto_galleries/data/plot_2_feature_selection", "_source/auto_galleries/data/plot_3_feature_engineering", "_source/auto_galleries/data/plot_4_subsampling", "_source/auto_galleries/data/plot_5_drift_test", "_source/auto_galleries/data/plot_6_outlier_detection", "_source/auto_galleries/data/plot_7_data_with_prediction", "_source/auto_galleries/data/plot_8_extra_data", "_source/auto_galleries/data/sg_execution_times", "_source/auto_galleries/dev/0_models/index", "_source/auto_galleries/dev/0_models/plot_0_glm_cls", "_source/auto_galleries/dev/0_models/plot_0_glm_reg", "_source/auto_galleries/dev/0_models/plot_1_dt_cls", "_source/auto_galleries/dev/0_models/plot_1_dt_reg", "_source/auto_galleries/dev/0_models/plot_2_reludnn_cls", "_source/auto_galleries/dev/0_models/plot_2_reludnn_reg", "_source/auto_galleries/dev/0_models/plot_3_gaminet_cls", "_source/auto_galleries/dev/0_models/plot_3_gaminet_reg", "_source/auto_galleries/dev/0_models/plot_4_moe_cls", "_source/auto_galleries/dev/0_models/plot_4_moe_reg", "_source/auto_galleries/dev/0_models/plot_5_lineartree_cls", "_source/auto_galleries/dev/0_models/plot_5_lineartree_reg", "_source/auto_galleries/dev/0_models/plot_6_const_tree_cls", "_source/auto_galleries/dev/0_models/plot_6_const_tree_reg", "_source/auto_galleries/dev/0_models/sg_execution_times", "_source/auto_galleries/dev/1_extmodels/index", "_source/auto_galleries/dev/1_extmodels/noplot_3_h2o", "_source/auto_galleries/dev/1_extmodels/noplot_4_spark", "_source/auto_galleries/dev/1_extmodels/plot_0_sklearn", "_source/auto_galleries/dev/1_extmodels/plot_1_arbitrary", "_source/auto_galleries/dev/1_extmodels/plot_2_scored", "_source/auto_galleries/dev/1_extmodels/sg_execution_times", "_source/auto_galleries/dev/3_hpo/index", "_source/auto_galleries/dev/3_hpo/plot_0_grid", "_source/auto_galleries/dev/3_hpo/plot_1_random", "_source/auto_galleries/dev/3_hpo/plot_2_pso", "_source/auto_galleries/dev/3_hpo/plot_3_optuna", "_source/auto_galleries/dev/3_hpo/sg_execution_times", "_source/auto_galleries/dev/index", "_source/auto_galleries/dev/plot_0_modelzoo", "_source/auto_galleries/dev/sg_execution_times", "_source/auto_galleries/util/index", "_source/auto_galleries/util/plot_0_valres_attributes", "_source/auto_galleries/util/plot_1_valres_save", "_source/auto_galleries/util/plot_2_pipeline", "_source/auto_galleries/util/sg_execution_times", "_source/auto_galleries/val/0_residual/index", "_source/auto_galleries/val/0_residual/plot_1_residual_cls", "_source/auto_galleries/val/0_residual/plot_1_residual_reg", "_source/auto_galleries/val/0_residual/sg_execution_times", "_source/auto_galleries/val/1_performance/index", "_source/auto_galleries/val/1_performance/plot_0_accuracy_table_cls", "_source/auto_galleries/val/1_performance/plot_0_accuracy_table_reg", "_source/auto_galleries/val/1_performance/plot_1_slice_accuracy_cls", "_source/auto_galleries/val/1_performance/plot_1_slice_accuracy_reg", "_source/auto_galleries/val/1_performance/sg_execution_times", "_source/auto_galleries/val/2_overfitting/index", "_source/auto_galleries/val/2_overfitting/plot_0_slice_overfit_cls", "_source/auto_galleries/val/2_overfitting/plot_1_slice_overfit_reg", "_source/auto_galleries/val/2_overfitting/sg_execution_times", "_source/auto_galleries/val/3_reliability/index", "_source/auto_galleries/val/3_reliability/plot_0_reliability_cls", "_source/auto_galleries/val/3_reliability/plot_1_reliability_reg", "_source/auto_galleries/val/3_reliability/sg_execution_times", "_source/auto_galleries/val/4_resilience/index", "_source/auto_galleries/val/4_resilience/plot_0_resilience_cls", "_source/auto_galleries/val/4_resilience/plot_1_resilience_reg", "_source/auto_galleries/val/4_resilience/sg_execution_times", "_source/auto_galleries/val/5_robustness/index", "_source/auto_galleries/val/5_robustness/plot_0_robustness_cls", "_source/auto_galleries/val/5_robustness/plot_1_robustness_reg", "_source/auto_galleries/val/5_robustness/sg_execution_times", "_source/auto_galleries/val/6_fairness/index", "_source/auto_galleries/val/6_fairness/plot_0_fairness_cls", "_source/auto_galleries/val/6_fairness/sg_execution_times", "_source/auto_galleries/val/7_explainability/index", "_source/auto_galleries/val/7_explainability/plot_0_global_explain", "_source/auto_galleries/val/7_explainability/plot_1_local_explain", "_source/auto_galleries/val/7_explainability/sg_execution_times", "_source/auto_galleries/val/index", "_source/auto_galleries/val/sg_execution_times", "_source/changes", "_source/faq", "_source/galleries", "_source/gen_modules/sphinx_gallery.backreferences", "_source/gen_modules/sphinx_gallery.block_parser", "_source/gen_modules/sphinx_gallery.directives", "_source/gen_modules/sphinx_gallery.docs_resolv", "_source/gen_modules/sphinx_gallery.downloads", "_source/gen_modules/sphinx_gallery.gen_gallery", "_source/gen_modules/sphinx_gallery.gen_rst", "_source/gen_modules/sphinx_gallery.interactive_example", "_source/gen_modules/sphinx_gallery.notebook", "_source/gen_modules/sphinx_gallery.py_source_parser", "_source/gen_modules/sphinx_gallery.scrapers", "_source/gen_modules/sphinx_gallery.sorting", "_source/gen_modules/sphinx_gallery.utils.optipng", "_source/install", "_source/modules/data", "_source/modules/generated/modeva.DataSet.all_feature_names", "_source/modules/generated/modeva.DataSet.all_feature_types", "_source/modules/generated/modeva.DataSet.bin_numerical", "_source/modules/generated/modeva.DataSet.data", "_source/modules/generated/modeva.DataSet.data_drift_test", "_source/modules/generated/modeva.DataSet.delete_extra_data", "_source/modules/generated/modeva.DataSet.delete_registered_data", "_source/modules/generated/modeva.DataSet.detect_outlier_cblof", "_source/modules/generated/modeva.DataSet.detect_outlier_isolation_forest", "_source/modules/generated/modeva.DataSet.detect_outlier_pca", "_source/modules/generated/modeva.DataSet.eda_1d", "_source/modules/generated/modeva.DataSet.eda_2d", "_source/modules/generated/modeva.DataSet.eda_3d", "_source/modules/generated/modeva.DataSet.eda_correlation", "_source/modules/generated/modeva.DataSet.eda_pca", "_source/modules/generated/modeva.DataSet.eda_umap", "_source/modules/generated/modeva.DataSet.encode_categorical", "_source/modules/generated/modeva.DataSet.feature_names", "_source/modules/generated/modeva.DataSet.feature_names_categorical", "_source/modules/generated/modeva.DataSet.feature_names_mixed", "_source/modules/generated/modeva.DataSet.feature_names_numerical", "_source/modules/generated/modeva.DataSet.feature_select_corr", "_source/modules/generated/modeva.DataSet.feature_select_rcit", "_source/modules/generated/modeva.DataSet.feature_select_xgbpfi", "_source/modules/generated/modeva.DataSet.feature_types", "_source/modules/generated/modeva.DataSet.get_X_y_data", "_source/modules/generated/modeva.DataSet.get_data", "_source/modules/generated/modeva.DataSet.get_data_list", "_source/modules/generated/modeva.DataSet.get_extra_data_list", "_source/modules/generated/modeva.DataSet.get_prediction_data", "_source/modules/generated/modeva.DataSet.get_prediction_proba_data", "_source/modules/generated/modeva.DataSet.get_preprocessor", "_source/modules/generated/modeva.DataSet.get_protected_data", "_source/modules/generated/modeva.DataSet.get_raw_data", "_source/modules/generated/modeva.DataSet.impute_missing", "_source/modules/generated/modeva.DataSet.inverse_transform", "_source/modules/generated/modeva.DataSet.is_splitted", "_source/modules/generated/modeva.DataSet.list_registered_data", "_source/modules/generated/modeva.DataSet.load", "_source/modules/generated/modeva.DataSet.load_csv", "_source/modules/generated/modeva.DataSet.load_dataframe", "_source/modules/generated/modeva.DataSet.load_dataframe_train_test", "_source/modules/generated/modeva.DataSet.load_preprocessing", "_source/modules/generated/modeva.DataSet.load_registered_data", "_source/modules/generated/modeva.DataSet.load_spark", "_source/modules/generated/modeva.DataSet.n_features", "_source/modules/generated/modeva.DataSet.name", "_source/modules/generated/modeva.DataSet.prediction", "_source/modules/generated/modeva.DataSet.preprocess", "_source/modules/generated/modeva.DataSet.raw_data", "_source/modules/generated/modeva.DataSet.register", "_source/modules/generated/modeva.DataSet.reset_preprocess", "_source/modules/generated/modeva.DataSet.sample_weight", "_source/modules/generated/modeva.DataSet.save_preprocessing", "_source/modules/generated/modeva.DataSet.scale_numerical", "_source/modules/generated/modeva.DataSet.set_active_features", "_source/modules/generated/modeva.DataSet.set_feature_type", "_source/modules/generated/modeva.DataSet.set_inactive_features", "_source/modules/generated/modeva.DataSet.set_prediction", "_source/modules/generated/modeva.DataSet.set_prediction_proba", "_source/modules/generated/modeva.DataSet.set_protected_data", "_source/modules/generated/modeva.DataSet.set_protected_extra_data", "_source/modules/generated/modeva.DataSet.set_random_split", "_source/modules/generated/modeva.DataSet.set_raw_extra_data", "_source/modules/generated/modeva.DataSet.set_sample_weight", "_source/modules/generated/modeva.DataSet.set_target", "_source/modules/generated/modeva.DataSet.set_task_type", "_source/modules/generated/modeva.DataSet.set_test_idx", "_source/modules/generated/modeva.DataSet.set_train_idx", "_source/modules/generated/modeva.DataSet.shape", "_source/modules/generated/modeva.DataSet.subsample_random", "_source/modules/generated/modeva.DataSet.summary", "_source/modules/generated/modeva.DataSet.task_type", "_source/modules/generated/modeva.DataSet.test_prediction", "_source/modules/generated/modeva.DataSet.test_sample_weight", "_source/modules/generated/modeva.DataSet.test_x", "_source/modules/generated/modeva.DataSet.test_y", "_source/modules/generated/modeva.DataSet.to_df", "_source/modules/generated/modeva.DataSet.train_prediction", "_source/modules/generated/modeva.DataSet.train_sample_weight", "_source/modules/generated/modeva.DataSet.train_x", "_source/modules/generated/modeva.DataSet.train_y", "_source/modules/generated/modeva.DataSet.transform", "_source/modules/generated/modeva.DataSet.x", "_source/modules/generated/modeva.DataSet.y", "_source/modules/generated/modeva.ModelZoo.add_model", "_source/modules/generated/modeva.ModelZoo.dataset", "_source/modules/generated/modeva.ModelZoo.delete_registered_model", "_source/modules/generated/modeva.ModelZoo.get_model", "_source/modules/generated/modeva.ModelZoo.leaderboard", "_source/modules/generated/modeva.ModelZoo.list_model_names", "_source/modules/generated/modeva.ModelZoo.list_registered_models", "_source/modules/generated/modeva.ModelZoo.load_registered_model", "_source/modules/generated/modeva.ModelZoo.models", "_source/modules/generated/modeva.ModelZoo.register", "_source/modules/generated/modeva.ModelZoo.train", "_source/modules/generated/modeva.ModelZoo.train_all", "_source/modules/generated/modeva.TestSuite.compare_accuracy_table", "_source/modules/generated/modeva.TestSuite.compare_fairness", "_source/modules/generated/modeva.TestSuite.compare_reliability", "_source/modules/generated/modeva.TestSuite.compare_resilience", "_source/modules/generated/modeva.TestSuite.compare_robustness", "_source/modules/generated/modeva.TestSuite.compare_slicing_accuracy", "_source/modules/generated/modeva.TestSuite.compare_slicing_fairness", "_source/modules/generated/modeva.TestSuite.compare_slicing_overfit", "_source/modules/generated/modeva.TestSuite.compare_slicing_reliability", "_source/modules/generated/modeva.TestSuite.compare_slicing_robustness", "_source/modules/generated/modeva.TestSuite.delete_registed_test", "_source/modules/generated/modeva.TestSuite.diagnose_accuracy_table", "_source/modules/generated/modeva.TestSuite.diagnose_fairness", "_source/modules/generated/modeva.TestSuite.diagnose_mitigate_unfair_binning", "_source/modules/generated/modeva.TestSuite.diagnose_mitigate_unfair_thresholding", "_source/modules/generated/modeva.TestSuite.diagnose_reliability", "_source/modules/generated/modeva.TestSuite.diagnose_residual_analysis", "_source/modules/generated/modeva.TestSuite.diagnose_residual_cluster", "_source/modules/generated/modeva.TestSuite.diagnose_residual_interpret", "_source/modules/generated/modeva.TestSuite.diagnose_resilience", "_source/modules/generated/modeva.TestSuite.diagnose_robustness", "_source/modules/generated/modeva.TestSuite.diagnose_slicing_accuracy", "_source/modules/generated/modeva.TestSuite.diagnose_slicing_fairness", "_source/modules/generated/modeva.TestSuite.diagnose_slicing_overfit", "_source/modules/generated/modeva.TestSuite.diagnose_slicing_reliability", "_source/modules/generated/modeva.TestSuite.diagnose_slicing_robustness", "_source/modules/generated/modeva.TestSuite.display_test_results", "_source/modules/generated/modeva.TestSuite.explain_ale", "_source/modules/generated/modeva.TestSuite.explain_hstatistic", "_source/modules/generated/modeva.TestSuite.explain_lime", "_source/modules/generated/modeva.TestSuite.explain_pdp", "_source/modules/generated/modeva.TestSuite.explain_pfi", "_source/modules/generated/modeva.TestSuite.explain_shap", "_source/modules/generated/modeva.TestSuite.export_report", "_source/modules/generated/modeva.TestSuite.get_dataset", "_source/modules/generated/modeva.TestSuite.get_interactions", "_source/modules/generated/modeva.TestSuite.get_main_effects", "_source/modules/generated/modeva.TestSuite.get_model", "_source/modules/generated/modeva.TestSuite.interpret_coef", "_source/modules/generated/modeva.TestSuite.interpret_effects", "_source/modules/generated/modeva.TestSuite.interpret_effects_moe_average", "_source/modules/generated/modeva.TestSuite.interpret_fi", "_source/modules/generated/modeva.TestSuite.interpret_global_tree", "_source/modules/generated/modeva.TestSuite.interpret_llm_pc", "_source/modules/generated/modeva.TestSuite.interpret_llm_profile", "_source/modules/generated/modeva.TestSuite.interpret_llm_summary", "_source/modules/generated/modeva.TestSuite.interpret_llm_violin", "_source/modules/generated/modeva.TestSuite.interpret_local_fi", "_source/modules/generated/modeva.TestSuite.interpret_local_linear_fi", "_source/modules/generated/modeva.TestSuite.interpret_local_moe_weights", "_source/modules/generated/modeva.TestSuite.interpret_local_tree", "_source/modules/generated/modeva.TestSuite.interpret_moe_cluster_analysis", "_source/modules/generated/modeva.TestSuite.list", "_source/modules/generated/modeva.TestSuite.list_registered_tests", "_source/modules/generated/modeva.TestSuite.load_registered_test", "_source/modules/generated/modeva.TestSuite.register", "_source/modules/generated/modeva.TestSuite.set_dataset", "_source/modules/generated/modeva.TestSuite.set_model", "_source/modules/generated/modeva.automation.pipeline.Pipeline", "_source/modules/generated/modeva.models.MoCatBoostClassifier", "_source/modules/generated/modeva.models.MoCatBoostRegressor", "_source/modules/generated/modeva.models.MoClassifier", "_source/modules/generated/modeva.models.MoDecisionTreeClassifier", "_source/modules/generated/modeva.models.MoDecisionTreeRegressor", "_source/modules/generated/modeva.models.MoElasticNet", "_source/modules/generated/modeva.models.MoGAMINetClassifier", "_source/modules/generated/modeva.models.MoGAMINetRegressor", "_source/modules/generated/modeva.models.MoGLMTreeBoostClassifier", "_source/modules/generated/modeva.models.MoGLMTreeBoostRegressor", "_source/modules/generated/modeva.models.MoGLMTreeClassifier", "_source/modules/generated/modeva.models.MoGLMTreeRegressor", "_source/modules/generated/modeva.models.MoGradientBoostingClassifier", "_source/modules/generated/modeva.models.MoGradientBoostingRegressor", "_source/modules/generated/modeva.models.MoLGBMClassifier", "_source/modules/generated/modeva.models.MoLGBMRegressor", "_source/modules/generated/modeva.models.MoLogisticRegression", "_source/modules/generated/modeva.models.MoMoEClassifier", "_source/modules/generated/modeva.models.MoMoERegressor", "_source/modules/generated/modeva.models.MoNeuralTreeClassifier", "_source/modules/generated/modeva.models.MoNeuralTreeRegressor", "_source/modules/generated/modeva.models.MoRandomForestClassifier", "_source/modules/generated/modeva.models.MoRandomForestRegressor", "_source/modules/generated/modeva.models.MoReLUDNNClassifier", "_source/modules/generated/modeva.models.MoReLUDNNRegressor", "_source/modules/generated/modeva.models.MoRegressor", "_source/modules/generated/modeva.models.MoSKLearnClassifier", "_source/modules/generated/modeva.models.MoSKLearnRegressor", "_source/modules/generated/modeva.models.MoScoredClassifier", "_source/modules/generated/modeva.models.MoScoredRegressor", "_source/modules/generated/modeva.models.MoXGBClassifier", "_source/modules/generated/modeva.models.MoXGBRegressor", "_source/modules/generated/modeva.models.ModelTuneGridSearch", "_source/modules/generated/modeva.models.ModelTuneOptuna", "_source/modules/generated/modeva.models.ModelTunePSO", "_source/modules/generated/modeva.models.ModelTuneRandomSearch", "_source/modules/generated/modeva.models.modeva_arbitrary_classifier", "_source/modules/generated/modeva.models.modeva_arbitrary_regressor", "_source/modules/generated/modeva.models.modeva_sklearn_classifier", "_source/modules/generated/modeva.models.modeva_sklearn_regressor", "_source/modules/generated/modeva.testsuite.utils.slicing_utils.get_data_info", "_source/modules/generated/modeva.utils.mlflow.clear_mlflow_home", "_source/modules/generated/modeva.utils.mlflow.get_mlflow_home", "_source/modules/generated/modeva.utils.mlflow.set_mlflow_home", "_source/modules/generated/modeva.utils.results.ValidationResult", "_source/modules/hpo", "_source/modules/models", "_source/modules/modelzoo", "_source/modules/pipeline", "_source/modules/results", "_source/modules/testsuite", "_source/modules/utilities", "_source/modules/wrappers", "_source/usage", "_source/user_guide/compare", "_source/user_guide/compare/compare_classification", "_source/user_guide/compare/compare_fairness", "_source/user_guide/compare/compare_regression", "_source/user_guide/data", "_source/user_guide/data/data_basic_operations", "_source/user_guide/data/data_quality_drift", "_source/user_guide/data/data_quality_outlier", "_source/user_guide/data/data_summary", "_source/user_guide/data/eda", "_source/user_guide/data/feature_select", "_source/user_guide/data/outlier_detect", "_source/user_guide/data/subsample", "_source/user_guide/explain", "_source/user_guide/explain/Global", "_source/user_guide/explain/Local", "_source/user_guide/explain/ale", "_source/user_guide/explain/hstats", "_source/user_guide/explain/ice", "_source/user_guide/explain/lime", "_source/user_guide/explain/pdp", "_source/user_guide/explain/pfi", "_source/user_guide/explain/shap", "_source/user_guide/introduction", "_source/user_guide/models", "_source/user_guide/models/gaminet", "_source/user_guide/models/gbdt", "_source/user_guide/models/gblt", "_source/user_guide/models/glm", "_source/user_guide/models/moe", "_source/user_guide/models/neuraltree", "_source/user_guide/models/reludnn", "_source/user_guide/models/tree", "_source/user_guide/modelwrapping", "_source/user_guide/testing", "_source/user_guide/testing/fairness", "_source/user_guide/testing/overfit", "_source/user_guide/testing/performance", "_source/user_guide/testing/reliability", "_source/user_guide/testing/resilience", "_source/user_guide/testing/robustness", "_source/user_guide/testing/weakspot", "_source/user_guide/train", "_source/user_guide/wrapping/h2o", "_source/user_guide/wrapping/hpo", "_source/user_guide/wrapping/modelzoo", "_source/user_guide/wrapping/wrappers", "index", "sg_api_usage", "sg_execution_times"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["_source/api_ref.rst", "_source/auto_galleries/data/index.rst", "_source/auto_galleries/data/plot_0_data_operations.rst", "_source/auto_galleries/data/plot_1_eda.rst", "_source/auto_galleries/data/plot_2_feature_selection.rst", "_source/auto_galleries/data/plot_3_feature_engineering.rst", "_source/auto_galleries/data/plot_4_subsampling.rst", "_source/auto_galleries/data/plot_5_drift_test.rst", "_source/auto_galleries/data/plot_6_outlier_detection.rst", "_source/auto_galleries/data/plot_7_data_with_prediction.rst", "_source/auto_galleries/data/plot_8_extra_data.rst", "_source/auto_galleries/data/sg_execution_times.rst", "_source/auto_galleries/dev/0_models/index.rst", "_source/auto_galleries/dev/0_models/plot_0_glm_cls.rst", "_source/auto_galleries/dev/0_models/plot_0_glm_reg.rst", "_source/auto_galleries/dev/0_models/plot_1_dt_cls.rst", "_source/auto_galleries/dev/0_models/plot_1_dt_reg.rst", "_source/auto_galleries/dev/0_models/plot_2_reludnn_cls.rst", "_source/auto_galleries/dev/0_models/plot_2_reludnn_reg.rst", "_source/auto_galleries/dev/0_models/plot_3_gaminet_cls.rst", "_source/auto_galleries/dev/0_models/plot_3_gaminet_reg.rst", "_source/auto_galleries/dev/0_models/plot_4_moe_cls.rst", "_source/auto_galleries/dev/0_models/plot_4_moe_reg.rst", "_source/auto_galleries/dev/0_models/plot_5_lineartree_cls.rst", "_source/auto_galleries/dev/0_models/plot_5_lineartree_reg.rst", "_source/auto_galleries/dev/0_models/plot_6_const_tree_cls.rst", "_source/auto_galleries/dev/0_models/plot_6_const_tree_reg.rst", "_source/auto_galleries/dev/0_models/sg_execution_times.rst", "_source/auto_galleries/dev/1_extmodels/index.rst", "_source/auto_galleries/dev/1_extmodels/noplot_3_h2o.rst", "_source/auto_galleries/dev/1_extmodels/noplot_4_spark.rst", "_source/auto_galleries/dev/1_extmodels/plot_0_sklearn.rst", "_source/auto_galleries/dev/1_extmodels/plot_1_arbitrary.rst", "_source/auto_galleries/dev/1_extmodels/plot_2_scored.rst", "_source/auto_galleries/dev/1_extmodels/sg_execution_times.rst", "_source/auto_galleries/dev/3_hpo/index.rst", "_source/auto_galleries/dev/3_hpo/plot_0_grid.rst", "_source/auto_galleries/dev/3_hpo/plot_1_random.rst", "_source/auto_galleries/dev/3_hpo/plot_2_pso.rst", "_source/auto_galleries/dev/3_hpo/plot_3_optuna.rst", "_source/auto_galleries/dev/3_hpo/sg_execution_times.rst", "_source/auto_galleries/dev/index.rst", "_source/auto_galleries/dev/plot_0_modelzoo.rst", "_source/auto_galleries/dev/sg_execution_times.rst", "_source/auto_galleries/util/index.rst", "_source/auto_galleries/util/plot_0_valres_attributes.rst", "_source/auto_galleries/util/plot_1_valres_save.rst", "_source/auto_galleries/util/plot_2_pipeline.rst", "_source/auto_galleries/util/sg_execution_times.rst", "_source/auto_galleries/val/0_residual/index.rst", "_source/auto_galleries/val/0_residual/plot_1_residual_cls.rst", "_source/auto_galleries/val/0_residual/plot_1_residual_reg.rst", "_source/auto_galleries/val/0_residual/sg_execution_times.rst", "_source/auto_galleries/val/1_performance/index.rst", "_source/auto_galleries/val/1_performance/plot_0_accuracy_table_cls.rst", "_source/auto_galleries/val/1_performance/plot_0_accuracy_table_reg.rst", "_source/auto_galleries/val/1_performance/plot_1_slice_accuracy_cls.rst", "_source/auto_galleries/val/1_performance/plot_1_slice_accuracy_reg.rst", "_source/auto_galleries/val/1_performance/sg_execution_times.rst", "_source/auto_galleries/val/2_overfitting/index.rst", "_source/auto_galleries/val/2_overfitting/plot_0_slice_overfit_cls.rst", "_source/auto_galleries/val/2_overfitting/plot_1_slice_overfit_reg.rst", "_source/auto_galleries/val/2_overfitting/sg_execution_times.rst", "_source/auto_galleries/val/3_reliability/index.rst", "_source/auto_galleries/val/3_reliability/plot_0_reliability_cls.rst", "_source/auto_galleries/val/3_reliability/plot_1_reliability_reg.rst", "_source/auto_galleries/val/3_reliability/sg_execution_times.rst", "_source/auto_galleries/val/4_resilience/index.rst", "_source/auto_galleries/val/4_resilience/plot_0_resilience_cls.rst", "_source/auto_galleries/val/4_resilience/plot_1_resilience_reg.rst", "_source/auto_galleries/val/4_resilience/sg_execution_times.rst", "_source/auto_galleries/val/5_robustness/index.rst", "_source/auto_galleries/val/5_robustness/plot_0_robustness_cls.rst", "_source/auto_galleries/val/5_robustness/plot_1_robustness_reg.rst", "_source/auto_galleries/val/5_robustness/sg_execution_times.rst", "_source/auto_galleries/val/6_fairness/index.rst", "_source/auto_galleries/val/6_fairness/plot_0_fairness_cls.rst", "_source/auto_galleries/val/6_fairness/sg_execution_times.rst", "_source/auto_galleries/val/7_explainability/index.rst", "_source/auto_galleries/val/7_explainability/plot_0_global_explain.rst", "_source/auto_galleries/val/7_explainability/plot_1_local_explain.rst", "_source/auto_galleries/val/7_explainability/sg_execution_times.rst", "_source/auto_galleries/val/index.rst", "_source/auto_galleries/val/sg_execution_times.rst", "_source/changes.rst", "_source/faq.rst", "_source/galleries.rst", "_source/gen_modules/sphinx_gallery.backreferences.rst", "_source/gen_modules/sphinx_gallery.block_parser.rst", "_source/gen_modules/sphinx_gallery.directives.rst", "_source/gen_modules/sphinx_gallery.docs_resolv.rst", "_source/gen_modules/sphinx_gallery.downloads.rst", "_source/gen_modules/sphinx_gallery.gen_gallery.rst", "_source/gen_modules/sphinx_gallery.gen_rst.rst", "_source/gen_modules/sphinx_gallery.interactive_example.rst", "_source/gen_modules/sphinx_gallery.notebook.rst", "_source/gen_modules/sphinx_gallery.py_source_parser.rst", "_source/gen_modules/sphinx_gallery.scrapers.rst", "_source/gen_modules/sphinx_gallery.sorting.rst", "_source/gen_modules/sphinx_gallery.utils.optipng.rst", "_source/install.rst", "_source/modules/data.rst", "_source/modules/generated/modeva.DataSet.all_feature_names.rst", "_source/modules/generated/modeva.DataSet.all_feature_types.rst", "_source/modules/generated/modeva.DataSet.bin_numerical.rst", "_source/modules/generated/modeva.DataSet.data.rst", "_source/modules/generated/modeva.DataSet.data_drift_test.rst", "_source/modules/generated/modeva.DataSet.delete_extra_data.rst", "_source/modules/generated/modeva.DataSet.delete_registered_data.rst", "_source/modules/generated/modeva.DataSet.detect_outlier_cblof.rst", "_source/modules/generated/modeva.DataSet.detect_outlier_isolation_forest.rst", "_source/modules/generated/modeva.DataSet.detect_outlier_pca.rst", "_source/modules/generated/modeva.DataSet.eda_1d.rst", "_source/modules/generated/modeva.DataSet.eda_2d.rst", "_source/modules/generated/modeva.DataSet.eda_3d.rst", "_source/modules/generated/modeva.DataSet.eda_correlation.rst", "_source/modules/generated/modeva.DataSet.eda_pca.rst", "_source/modules/generated/modeva.DataSet.eda_umap.rst", "_source/modules/generated/modeva.DataSet.encode_categorical.rst", "_source/modules/generated/modeva.DataSet.feature_names.rst", "_source/modules/generated/modeva.DataSet.feature_names_categorical.rst", "_source/modules/generated/modeva.DataSet.feature_names_mixed.rst", "_source/modules/generated/modeva.DataSet.feature_names_numerical.rst", "_source/modules/generated/modeva.DataSet.feature_select_corr.rst", "_source/modules/generated/modeva.DataSet.feature_select_rcit.rst", "_source/modules/generated/modeva.DataSet.feature_select_xgbpfi.rst", "_source/modules/generated/modeva.DataSet.feature_types.rst", "_source/modules/generated/modeva.DataSet.get_X_y_data.rst", "_source/modules/generated/modeva.DataSet.get_data.rst", "_source/modules/generated/modeva.DataSet.get_data_list.rst", "_source/modules/generated/modeva.DataSet.get_extra_data_list.rst", "_source/modules/generated/modeva.DataSet.get_prediction_data.rst", "_source/modules/generated/modeva.DataSet.get_prediction_proba_data.rst", "_source/modules/generated/modeva.DataSet.get_preprocessor.rst", "_source/modules/generated/modeva.DataSet.get_protected_data.rst", "_source/modules/generated/modeva.DataSet.get_raw_data.rst", "_source/modules/generated/modeva.DataSet.impute_missing.rst", "_source/modules/generated/modeva.DataSet.inverse_transform.rst", "_source/modules/generated/modeva.DataSet.is_splitted.rst", "_source/modules/generated/modeva.DataSet.list_registered_data.rst", "_source/modules/generated/modeva.DataSet.load.rst", "_source/modules/generated/modeva.DataSet.load_csv.rst", "_source/modules/generated/modeva.DataSet.load_dataframe.rst", "_source/modules/generated/modeva.DataSet.load_dataframe_train_test.rst", "_source/modules/generated/modeva.DataSet.load_preprocessing.rst", "_source/modules/generated/modeva.DataSet.load_registered_data.rst", "_source/modules/generated/modeva.DataSet.load_spark.rst", "_source/modules/generated/modeva.DataSet.n_features.rst", "_source/modules/generated/modeva.DataSet.name.rst", "_source/modules/generated/modeva.DataSet.prediction.rst", "_source/modules/generated/modeva.DataSet.preprocess.rst", "_source/modules/generated/modeva.DataSet.raw_data.rst", "_source/modules/generated/modeva.DataSet.register.rst", "_source/modules/generated/modeva.DataSet.reset_preprocess.rst", "_source/modules/generated/modeva.DataSet.sample_weight.rst", "_source/modules/generated/modeva.DataSet.save_preprocessing.rst", "_source/modules/generated/modeva.DataSet.scale_numerical.rst", "_source/modules/generated/modeva.DataSet.set_active_features.rst", "_source/modules/generated/modeva.DataSet.set_feature_type.rst", "_source/modules/generated/modeva.DataSet.set_inactive_features.rst", "_source/modules/generated/modeva.DataSet.set_prediction.rst", "_source/modules/generated/modeva.DataSet.set_prediction_proba.rst", "_source/modules/generated/modeva.DataSet.set_protected_data.rst", "_source/modules/generated/modeva.DataSet.set_protected_extra_data.rst", "_source/modules/generated/modeva.DataSet.set_random_split.rst", "_source/modules/generated/modeva.DataSet.set_raw_extra_data.rst", "_source/modules/generated/modeva.DataSet.set_sample_weight.rst", "_source/modules/generated/modeva.DataSet.set_target.rst", "_source/modules/generated/modeva.DataSet.set_task_type.rst", "_source/modules/generated/modeva.DataSet.set_test_idx.rst", "_source/modules/generated/modeva.DataSet.set_train_idx.rst", "_source/modules/generated/modeva.DataSet.shape.rst", "_source/modules/generated/modeva.DataSet.subsample_random.rst", "_source/modules/generated/modeva.DataSet.summary.rst", "_source/modules/generated/modeva.DataSet.task_type.rst", "_source/modules/generated/modeva.DataSet.test_prediction.rst", "_source/modules/generated/modeva.DataSet.test_sample_weight.rst", "_source/modules/generated/modeva.DataSet.test_x.rst", "_source/modules/generated/modeva.DataSet.test_y.rst", "_source/modules/generated/modeva.DataSet.to_df.rst", "_source/modules/generated/modeva.DataSet.train_prediction.rst", "_source/modules/generated/modeva.DataSet.train_sample_weight.rst", "_source/modules/generated/modeva.DataSet.train_x.rst", "_source/modules/generated/modeva.DataSet.train_y.rst", "_source/modules/generated/modeva.DataSet.transform.rst", "_source/modules/generated/modeva.DataSet.x.rst", "_source/modules/generated/modeva.DataSet.y.rst", "_source/modules/generated/modeva.ModelZoo.add_model.rst", "_source/modules/generated/modeva.ModelZoo.dataset.rst", "_source/modules/generated/modeva.ModelZoo.delete_registered_model.rst", "_source/modules/generated/modeva.ModelZoo.get_model.rst", "_source/modules/generated/modeva.ModelZoo.leaderboard.rst", "_source/modules/generated/modeva.ModelZoo.list_model_names.rst", "_source/modules/generated/modeva.ModelZoo.list_registered_models.rst", "_source/modules/generated/modeva.ModelZoo.load_registered_model.rst", "_source/modules/generated/modeva.ModelZoo.models.rst", "_source/modules/generated/modeva.ModelZoo.register.rst", "_source/modules/generated/modeva.ModelZoo.train.rst", "_source/modules/generated/modeva.ModelZoo.train_all.rst", "_source/modules/generated/modeva.TestSuite.compare_accuracy_table.rst", "_source/modules/generated/modeva.TestSuite.compare_fairness.rst", "_source/modules/generated/modeva.TestSuite.compare_reliability.rst", "_source/modules/generated/modeva.TestSuite.compare_resilience.rst", "_source/modules/generated/modeva.TestSuite.compare_robustness.rst", "_source/modules/generated/modeva.TestSuite.compare_slicing_accuracy.rst", "_source/modules/generated/modeva.TestSuite.compare_slicing_fairness.rst", "_source/modules/generated/modeva.TestSuite.compare_slicing_overfit.rst", "_source/modules/generated/modeva.TestSuite.compare_slicing_reliability.rst", "_source/modules/generated/modeva.TestSuite.compare_slicing_robustness.rst", "_source/modules/generated/modeva.TestSuite.delete_registed_test.rst", "_source/modules/generated/modeva.TestSuite.diagnose_accuracy_table.rst", "_source/modules/generated/modeva.TestSuite.diagnose_fairness.rst", "_source/modules/generated/modeva.TestSuite.diagnose_mitigate_unfair_binning.rst", "_source/modules/generated/modeva.TestSuite.diagnose_mitigate_unfair_thresholding.rst", "_source/modules/generated/modeva.TestSuite.diagnose_reliability.rst", "_source/modules/generated/modeva.TestSuite.diagnose_residual_analysis.rst", "_source/modules/generated/modeva.TestSuite.diagnose_residual_cluster.rst", "_source/modules/generated/modeva.TestSuite.diagnose_residual_interpret.rst", "_source/modules/generated/modeva.TestSuite.diagnose_resilience.rst", "_source/modules/generated/modeva.TestSuite.diagnose_robustness.rst", "_source/modules/generated/modeva.TestSuite.diagnose_slicing_accuracy.rst", "_source/modules/generated/modeva.TestSuite.diagnose_slicing_fairness.rst", "_source/modules/generated/modeva.TestSuite.diagnose_slicing_overfit.rst", "_source/modules/generated/modeva.TestSuite.diagnose_slicing_reliability.rst", "_source/modules/generated/modeva.TestSuite.diagnose_slicing_robustness.rst", "_source/modules/generated/modeva.TestSuite.display_test_results.rst", "_source/modules/generated/modeva.TestSuite.explain_ale.rst", "_source/modules/generated/modeva.TestSuite.explain_hstatistic.rst", "_source/modules/generated/modeva.TestSuite.explain_lime.rst", "_source/modules/generated/modeva.TestSuite.explain_pdp.rst", "_source/modules/generated/modeva.TestSuite.explain_pfi.rst", "_source/modules/generated/modeva.TestSuite.explain_shap.rst", "_source/modules/generated/modeva.TestSuite.export_report.rst", "_source/modules/generated/modeva.TestSuite.get_dataset.rst", "_source/modules/generated/modeva.TestSuite.get_interactions.rst", "_source/modules/generated/modeva.TestSuite.get_main_effects.rst", "_source/modules/generated/modeva.TestSuite.get_model.rst", "_source/modules/generated/modeva.TestSuite.interpret_coef.rst", "_source/modules/generated/modeva.TestSuite.interpret_effects.rst", "_source/modules/generated/modeva.TestSuite.interpret_effects_moe_average.rst", "_source/modules/generated/modeva.TestSuite.interpret_fi.rst", "_source/modules/generated/modeva.TestSuite.interpret_global_tree.rst", "_source/modules/generated/modeva.TestSuite.interpret_llm_pc.rst", "_source/modules/generated/modeva.TestSuite.interpret_llm_profile.rst", "_source/modules/generated/modeva.TestSuite.interpret_llm_summary.rst", "_source/modules/generated/modeva.TestSuite.interpret_llm_violin.rst", "_source/modules/generated/modeva.TestSuite.interpret_local_fi.rst", "_source/modules/generated/modeva.TestSuite.interpret_local_linear_fi.rst", "_source/modules/generated/modeva.TestSuite.interpret_local_moe_weights.rst", "_source/modules/generated/modeva.TestSuite.interpret_local_tree.rst", "_source/modules/generated/modeva.TestSuite.interpret_moe_cluster_analysis.rst", "_source/modules/generated/modeva.TestSuite.list.rst", "_source/modules/generated/modeva.TestSuite.list_registered_tests.rst", "_source/modules/generated/modeva.TestSuite.load_registered_test.rst", "_source/modules/generated/modeva.TestSuite.register.rst", "_source/modules/generated/modeva.TestSuite.set_dataset.rst", "_source/modules/generated/modeva.TestSuite.set_model.rst", "_source/modules/generated/modeva.automation.pipeline.Pipeline.rst", "_source/modules/generated/modeva.models.MoCatBoostClassifier.rst", "_source/modules/generated/modeva.models.MoCatBoostRegressor.rst", "_source/modules/generated/modeva.models.MoClassifier.rst", "_source/modules/generated/modeva.models.MoDecisionTreeClassifier.rst", "_source/modules/generated/modeva.models.MoDecisionTreeRegressor.rst", "_source/modules/generated/modeva.models.MoElasticNet.rst", "_source/modules/generated/modeva.models.MoGAMINetClassifier.rst", "_source/modules/generated/modeva.models.MoGAMINetRegressor.rst", "_source/modules/generated/modeva.models.MoGLMTreeBoostClassifier.rst", "_source/modules/generated/modeva.models.MoGLMTreeBoostRegressor.rst", "_source/modules/generated/modeva.models.MoGLMTreeClassifier.rst", "_source/modules/generated/modeva.models.MoGLMTreeRegressor.rst", "_source/modules/generated/modeva.models.MoGradientBoostingClassifier.rst", "_source/modules/generated/modeva.models.MoGradientBoostingRegressor.rst", "_source/modules/generated/modeva.models.MoLGBMClassifier.rst", "_source/modules/generated/modeva.models.MoLGBMRegressor.rst", "_source/modules/generated/modeva.models.MoLogisticRegression.rst", "_source/modules/generated/modeva.models.MoMoEClassifier.rst", "_source/modules/generated/modeva.models.MoMoERegressor.rst", "_source/modules/generated/modeva.models.MoNeuralTreeClassifier.rst", "_source/modules/generated/modeva.models.MoNeuralTreeRegressor.rst", "_source/modules/generated/modeva.models.MoRandomForestClassifier.rst", "_source/modules/generated/modeva.models.MoRandomForestRegressor.rst", "_source/modules/generated/modeva.models.MoReLUDNNClassifier.rst", "_source/modules/generated/modeva.models.MoReLUDNNRegressor.rst", "_source/modules/generated/modeva.models.MoRegressor.rst", "_source/modules/generated/modeva.models.MoSKLearnClassifier.rst", "_source/modules/generated/modeva.models.MoSKLearnRegressor.rst", "_source/modules/generated/modeva.models.MoScoredClassifier.rst", "_source/modules/generated/modeva.models.MoScoredRegressor.rst", "_source/modules/generated/modeva.models.MoXGBClassifier.rst", "_source/modules/generated/modeva.models.MoXGBRegressor.rst", "_source/modules/generated/modeva.models.ModelTuneGridSearch.rst", "_source/modules/generated/modeva.models.ModelTuneOptuna.rst", "_source/modules/generated/modeva.models.ModelTunePSO.rst", "_source/modules/generated/modeva.models.ModelTuneRandomSearch.rst", "_source/modules/generated/modeva.models.modeva_arbitrary_classifier.rst", "_source/modules/generated/modeva.models.modeva_arbitrary_regressor.rst", "_source/modules/generated/modeva.models.modeva_sklearn_classifier.rst", "_source/modules/generated/modeva.models.modeva_sklearn_regressor.rst", "_source/modules/generated/modeva.testsuite.utils.slicing_utils.get_data_info.rst", "_source/modules/generated/modeva.utils.mlflow.clear_mlflow_home.rst", "_source/modules/generated/modeva.utils.mlflow.get_mlflow_home.rst", "_source/modules/generated/modeva.utils.mlflow.set_mlflow_home.rst", "_source/modules/generated/modeva.utils.results.ValidationResult.rst", "_source/modules/hpo.rst", "_source/modules/models.rst", "_source/modules/modelzoo.rst", "_source/modules/pipeline.rst", "_source/modules/results.rst", "_source/modules/testsuite.rst", "_source/modules/utilities.rst", "_source/modules/wrappers.rst", "_source/usage.rst", "_source/user_guide/compare.rst", "_source/user_guide/compare/compare_classification.rst", "_source/user_guide/compare/compare_fairness.rst", "_source/user_guide/compare/compare_regression.rst", "_source/user_guide/data.rst", "_source/user_guide/data/data_basic_operations.rst", "_source/user_guide/data/data_quality_drift.rst", "_source/user_guide/data/data_quality_outlier.rst", "_source/user_guide/data/data_summary.rst", "_source/user_guide/data/eda.rst", "_source/user_guide/data/feature_select.rst", "_source/user_guide/data/outlier_detect.rst", "_source/user_guide/data/subsample.rst", "_source/user_guide/explain.rst", "_source/user_guide/explain/Global.rst", "_source/user_guide/explain/Local.rst", "_source/user_guide/explain/ale.rst", "_source/user_guide/explain/hstats.rst", "_source/user_guide/explain/ice.rst", "_source/user_guide/explain/lime.rst", "_source/user_guide/explain/pdp.rst", "_source/user_guide/explain/pfi.rst", "_source/user_guide/explain/shap.rst", "_source/user_guide/introduction.rst", "_source/user_guide/models.rst", "_source/user_guide/models/gaminet.rst", "_source/user_guide/models/gbdt.rst", "_source/user_guide/models/gblt.rst", "_source/user_guide/models/glm.rst", "_source/user_guide/models/moe.rst", "_source/user_guide/models/neuraltree.rst", "_source/user_guide/models/reludnn.rst", "_source/user_guide/models/tree.rst", "_source/user_guide/modelwrapping.rst", "_source/user_guide/testing.rst", "_source/user_guide/testing/fairness.rst", "_source/user_guide/testing/overfit.rst", "_source/user_guide/testing/performance.rst", "_source/user_guide/testing/reliability.rst", "_source/user_guide/testing/resilience.rst", "_source/user_guide/testing/robustness.rst", "_source/user_guide/testing/weakspot.rst", "_source/user_guide/train.rst", "_source/user_guide/wrapping/h2o.rst", "_source/user_guide/wrapping/hpo.rst", "_source/user_guide/wrapping/modelzoo.rst", "_source/user_guide/wrapping/wrappers.rst", "index.rst", "sg_api_usage.rst", "sg_execution_times.rst"], "indexentries": {"active_interaction_index_ (modeva.models.mogaminetclassifier attribute)": [[264, "modeva.models.MoGAMINetClassifier.active_interaction_index_", false]], "active_interaction_index_ (modeva.models.mogaminetregressor attribute)": [[265, "modeva.models.MoGAMINetRegressor.active_interaction_index_", false]], "active_main_effect_index_ (modeva.models.mogaminetclassifier attribute)": [[264, "modeva.models.MoGAMINetClassifier.active_main_effect_index_", false]], "active_main_effect_index_ (modeva.models.mogaminetregressor attribute)": [[265, "modeva.models.MoGAMINetRegressor.active_main_effect_index_", false]], "estimators_ (modeva.models.moglmtreeboostclassifier attribute)": [[266, "modeva.models.MoGLMTreeBoostClassifier.estimators_", false]], "estimators_ (modeva.models.moglmtreeboostregressor attribute)": [[267, "modeva.models.MoGLMTreeBoostRegressor.estimators_", false]], "fit() (modeva.models.mocatboostclassifier method)": [[258, "modeva.models.MoCatBoostClassifier.fit", false]], "fit() (modeva.models.mocatboostregressor method)": [[259, "modeva.models.MoCatBoostRegressor.fit", false]], "fit() (modeva.models.moclassifier method)": [[260, "modeva.models.MoClassifier.fit", false]], "fit() (modeva.models.modecisiontreeclassifier method)": [[261, "modeva.models.MoDecisionTreeClassifier.fit", false]], "fit() (modeva.models.modecisiontreeregressor method)": [[262, "modeva.models.MoDecisionTreeRegressor.fit", false]], "fit() (modeva.models.moelasticnet method)": [[263, "modeva.models.MoElasticNet.fit", false]], "fit() (modeva.models.mogaminetclassifier method)": [[264, "modeva.models.MoGAMINetClassifier.fit", false]], "fit() (modeva.models.mogaminetregressor method)": [[265, "modeva.models.MoGAMINetRegressor.fit", false]], "fit() (modeva.models.moglmtreeboostclassifier method)": [[266, "modeva.models.MoGLMTreeBoostClassifier.fit", false]], "fit() (modeva.models.moglmtreeboostregressor method)": [[267, "modeva.models.MoGLMTreeBoostRegressor.fit", false]], "fit() (modeva.models.mogradientboostingclassifier method)": [[270, "modeva.models.MoGradientBoostingClassifier.fit", false]], "fit() (modeva.models.mogradientboostingregressor method)": [[271, "modeva.models.MoGradientBoostingRegressor.fit", false]], "fit() (modeva.models.molgbmclassifier method)": [[272, "modeva.models.MoLGBMClassifier.fit", false]], "fit() (modeva.models.molgbmregressor method)": [[273, "modeva.models.MoLGBMRegressor.fit", false]], "fit() (modeva.models.mologisticregression method)": [[274, "modeva.models.MoLogisticRegression.fit", false]], "fit() (modeva.models.momoeclassifier method)": [[275, "modeva.models.MoMoEClassifier.fit", false]], "fit() (modeva.models.momoeregressor method)": [[276, "modeva.models.MoMoERegressor.fit", false]], "fit() (modeva.models.morandomforestclassifier method)": [[279, "modeva.models.MoRandomForestClassifier.fit", false]], "fit() (modeva.models.morandomforestregressor method)": [[280, "modeva.models.MoRandomForestRegressor.fit", false]], "fit() (modeva.models.moregressor method)": [[283, "modeva.models.MoRegressor.fit", false]], "fit() (modeva.models.moreludnnclassifier method)": [[281, "modeva.models.MoReLUDNNClassifier.fit", false]], "fit() (modeva.models.moreludnnregressor method)": [[282, "modeva.models.MoReLUDNNRegressor.fit", false]], "fit() (modeva.models.mosklearnclassifier method)": [[284, "modeva.models.MoSKLearnClassifier.fit", false]], "fit() (modeva.models.mosklearnregressor method)": [[285, "modeva.models.MoSKLearnRegressor.fit", false]], "fit() (modeva.models.moxgbclassifier method)": [[288, "modeva.models.MoXGBClassifier.fit", false]], "fit() (modeva.models.moxgbregressor method)": [[289, "modeva.models.MoXGBRegressor.fit", false]], "get_params() (modeva.models.mocatboostclassifier method)": [[258, "modeva.models.MoCatBoostClassifier.get_params", false]], "get_params() (modeva.models.mocatboostregressor method)": [[259, "modeva.models.MoCatBoostRegressor.get_params", false]], "get_params() (modeva.models.moclassifier method)": [[260, "modeva.models.MoClassifier.get_params", false]], "get_params() (modeva.models.modecisiontreeclassifier method)": [[261, "modeva.models.MoDecisionTreeClassifier.get_params", false]], "get_params() (modeva.models.modecisiontreeregressor method)": [[262, "modeva.models.MoDecisionTreeRegressor.get_params", false]], "get_params() (modeva.models.moelasticnet method)": [[263, "modeva.models.MoElasticNet.get_params", false]], "get_params() (modeva.models.mogaminetclassifier method)": [[264, "modeva.models.MoGAMINetClassifier.get_params", false]], "get_params() (modeva.models.mogaminetregressor method)": [[265, "modeva.models.MoGAMINetRegressor.get_params", false]], "get_params() (modeva.models.moglmtreeboostclassifier method)": [[266, "modeva.models.MoGLMTreeBoostClassifier.get_params", false]], "get_params() (modeva.models.moglmtreeboostregressor method)": [[267, "modeva.models.MoGLMTreeBoostRegressor.get_params", false]], "get_params() (modeva.models.moglmtreeclassifier method)": [[268, "modeva.models.MoGLMTreeClassifier.get_params", false]], "get_params() (modeva.models.moglmtreeregressor method)": [[269, "modeva.models.MoGLMTreeRegressor.get_params", false]], "get_params() (modeva.models.mogradientboostingclassifier method)": [[270, "modeva.models.MoGradientBoostingClassifier.get_params", false]], "get_params() (modeva.models.mogradientboostingregressor method)": [[271, "modeva.models.MoGradientBoostingRegressor.get_params", false]], "get_params() (modeva.models.molgbmclassifier method)": [[272, "modeva.models.MoLGBMClassifier.get_params", false]], "get_params() (modeva.models.molgbmregressor method)": [[273, "modeva.models.MoLGBMRegressor.get_params", false]], "get_params() (modeva.models.mologisticregression method)": [[274, "modeva.models.MoLogisticRegression.get_params", false]], "get_params() (modeva.models.momoeclassifier method)": [[275, "modeva.models.MoMoEClassifier.get_params", false]], "get_params() (modeva.models.momoeregressor method)": [[276, "modeva.models.MoMoERegressor.get_params", false]], "get_params() (modeva.models.moneuraltreeclassifier method)": [[277, "modeva.models.MoNeuralTreeClassifier.get_params", false]], "get_params() (modeva.models.moneuraltreeregressor method)": [[278, "modeva.models.MoNeuralTreeRegressor.get_params", false]], "get_params() (modeva.models.morandomforestclassifier method)": [[279, "modeva.models.MoRandomForestClassifier.get_params", false]], "get_params() (modeva.models.morandomforestregressor method)": [[280, "modeva.models.MoRandomForestRegressor.get_params", false]], "get_params() (modeva.models.moregressor method)": [[283, "modeva.models.MoRegressor.get_params", false]], "get_params() (modeva.models.moreludnnclassifier method)": [[281, "modeva.models.MoReLUDNNClassifier.get_params", false]], "get_params() (modeva.models.moreludnnregressor method)": [[282, "modeva.models.MoReLUDNNRegressor.get_params", false]], "get_params() (modeva.models.moscoredclassifier method)": [[286, "modeva.models.MoScoredClassifier.get_params", false]], "get_params() (modeva.models.moscoredregressor method)": [[287, "modeva.models.MoScoredRegressor.get_params", false]], "get_params() (modeva.models.mosklearnclassifier method)": [[284, "modeva.models.MoSKLearnClassifier.get_params", false]], "get_params() (modeva.models.mosklearnregressor method)": [[285, "modeva.models.MoSKLearnRegressor.get_params", false]], "get_params() (modeva.models.moxgbclassifier method)": [[288, "modeva.models.MoXGBClassifier.get_params", false]], "get_params() (modeva.models.moxgbregressor method)": [[289, "modeva.models.MoXGBRegressor.get_params", false]], "interaction_list_ (modeva.models.mogaminetclassifier attribute)": [[264, "modeva.models.MoGAMINetClassifier.interaction_list_", false]], "interaction_list_ (modeva.models.mogaminetregressor attribute)": [[265, "modeva.models.MoGAMINetRegressor.interaction_list_", false]], "interaction_val_loss_ (modeva.models.mogaminetclassifier attribute)": [[264, "modeva.models.MoGAMINetClassifier.interaction_val_loss_", false]], "interaction_val_loss_ (modeva.models.mogaminetregressor attribute)": [[265, "modeva.models.MoGAMINetRegressor.interaction_val_loss_", false]], "leaf_estimators_ (modeva.models.moglmtreeclassifier attribute)": [[268, "modeva.models.MoGLMTreeClassifier.leaf_estimators_", false]], "load() (modeva.models.mocatboostclassifier method)": [[258, "modeva.models.MoCatBoostClassifier.load", false]], "load() (modeva.models.mocatboostregressor method)": [[259, "modeva.models.MoCatBoostRegressor.load", false]], "load() (modeva.models.moclassifier method)": [[260, "modeva.models.MoClassifier.load", false]], "load() (modeva.models.modecisiontreeclassifier method)": [[261, "modeva.models.MoDecisionTreeClassifier.load", false]], "load() (modeva.models.modecisiontreeregressor method)": [[262, "modeva.models.MoDecisionTreeRegressor.load", false]], "load() (modeva.models.moelasticnet method)": [[263, "modeva.models.MoElasticNet.load", false]], "load() (modeva.models.mogaminetclassifier method)": [[264, "modeva.models.MoGAMINetClassifier.load", false]], "load() (modeva.models.mogaminetregressor method)": [[265, "modeva.models.MoGAMINetRegressor.load", false]], "load() (modeva.models.moglmtreeboostclassifier method)": [[266, "modeva.models.MoGLMTreeBoostClassifier.load", false]], "load() (modeva.models.moglmtreeboostregressor method)": [[267, "modeva.models.MoGLMTreeBoostRegressor.load", false]], "load() (modeva.models.moglmtreeclassifier method)": [[268, "modeva.models.MoGLMTreeClassifier.load", false]], "load() (modeva.models.moglmtreeregressor method)": [[269, "modeva.models.MoGLMTreeRegressor.load", false]], "load() (modeva.models.mogradientboostingclassifier method)": [[270, "modeva.models.MoGradientBoostingClassifier.load", false]], "load() (modeva.models.mogradientboostingregressor method)": [[271, "modeva.models.MoGradientBoostingRegressor.load", false]], "load() (modeva.models.molgbmclassifier method)": [[272, "modeva.models.MoLGBMClassifier.load", false]], "load() (modeva.models.molgbmregressor method)": [[273, "modeva.models.MoLGBMRegressor.load", false]], "load() (modeva.models.mologisticregression method)": [[274, "modeva.models.MoLogisticRegression.load", false]], "load() (modeva.models.momoeclassifier method)": [[275, "modeva.models.MoMoEClassifier.load", false]], "load() (modeva.models.momoeregressor method)": [[276, "modeva.models.MoMoERegressor.load", false]], "load() (modeva.models.moneuraltreeclassifier method)": [[277, "modeva.models.MoNeuralTreeClassifier.load", false]], "load() (modeva.models.moneuraltreeregressor method)": [[278, "modeva.models.MoNeuralTreeRegressor.load", false]], "load() (modeva.models.morandomforestclassifier method)": [[279, "modeva.models.MoRandomForestClassifier.load", false]], "load() (modeva.models.morandomforestregressor method)": [[280, "modeva.models.MoRandomForestRegressor.load", false]], "load() (modeva.models.moregressor method)": [[283, "modeva.models.MoRegressor.load", false]], "load() (modeva.models.moreludnnclassifier method)": [[281, "modeva.models.MoReLUDNNClassifier.load", false]], "load() (modeva.models.moreludnnregressor method)": [[282, "modeva.models.MoReLUDNNRegressor.load", false]], "load() (modeva.models.moscoredclassifier method)": [[286, "modeva.models.MoScoredClassifier.load", false]], "load() (modeva.models.moscoredregressor method)": [[287, "modeva.models.MoScoredRegressor.load", false]], "load() (modeva.models.mosklearnclassifier method)": [[284, "modeva.models.MoSKLearnClassifier.load", false]], "load() (modeva.models.mosklearnregressor method)": [[285, "modeva.models.MoSKLearnRegressor.load", false]], "load() (modeva.models.moxgbclassifier method)": [[288, "modeva.models.MoXGBClassifier.load", false]], "load() (modeva.models.moxgbregressor method)": [[289, "modeva.models.MoXGBRegressor.load", false]], "main_effect_val_loss_ (modeva.models.mogaminetclassifier attribute)": [[264, "modeva.models.MoGAMINetClassifier.main_effect_val_loss_", false]], "main_effect_val_loss_ (modeva.models.mogaminetregressor attribute)": [[265, "modeva.models.MoGAMINetRegressor.main_effect_val_loss_", false]], "mocatboostclassifier (class in modeva.models)": [[258, "modeva.models.MoCatBoostClassifier", false]], "mocatboostregressor (class in modeva.models)": [[259, "modeva.models.MoCatBoostRegressor", false]], "moclassifier (class in modeva.models)": [[260, "modeva.models.MoClassifier", false]], "modecisiontreeclassifier (class in modeva.models)": [[261, "modeva.models.MoDecisionTreeClassifier", false]], "modecisiontreeregressor (class in modeva.models)": [[262, "modeva.models.MoDecisionTreeRegressor", false]], "moelasticnet (class in modeva.models)": [[263, "modeva.models.MoElasticNet", false]], "mogaminetclassifier (class in modeva.models)": [[264, "modeva.models.MoGAMINetClassifier", false]], "mogaminetregressor (class in modeva.models)": [[265, "modeva.models.MoGAMINetRegressor", false]], "moglmtreeboostclassifier (class in modeva.models)": [[266, "modeva.models.MoGLMTreeBoostClassifier", false]], "moglmtreeboostregressor (class in modeva.models)": [[267, "modeva.models.MoGLMTreeBoostRegressor", false]], "moglmtreeclassifier (class in modeva.models)": [[268, "modeva.models.MoGLMTreeClassifier", false]], "moglmtreeregressor (class in modeva.models)": [[269, "modeva.models.MoGLMTreeRegressor", false]], "mogradientboostingclassifier (class in modeva.models)": [[270, "modeva.models.MoGradientBoostingClassifier", false]], "mogradientboostingregressor (class in modeva.models)": [[271, "modeva.models.MoGradientBoostingRegressor", false]], "molgbmclassifier (class in modeva.models)": [[272, "modeva.models.MoLGBMClassifier", false]], "molgbmregressor (class in modeva.models)": [[273, "modeva.models.MoLGBMRegressor", false]], "mologisticregression (class in modeva.models)": [[274, "modeva.models.MoLogisticRegression", false]], "momoeclassifier (class in modeva.models)": [[275, "modeva.models.MoMoEClassifier", false]], "momoeregressor (class in modeva.models)": [[276, "modeva.models.MoMoERegressor", false]], "moneuraltreeclassifier (class in modeva.models)": [[277, "modeva.models.MoNeuralTreeClassifier", false]], "moneuraltreeregressor (class in modeva.models)": [[278, "modeva.models.MoNeuralTreeRegressor", false]], "morandomforestclassifier (class in modeva.models)": [[279, "modeva.models.MoRandomForestClassifier", false]], "morandomforestregressor (class in modeva.models)": [[280, "modeva.models.MoRandomForestRegressor", false]], "moregressor (class in modeva.models)": [[283, "modeva.models.MoRegressor", false]], "moreludnnclassifier (class in modeva.models)": [[281, "modeva.models.MoReLUDNNClassifier", false]], "moreludnnregressor (class in modeva.models)": [[282, "modeva.models.MoReLUDNNRegressor", false]], "moscoredclassifier (class in modeva.models)": [[286, "modeva.models.MoScoredClassifier", false]], "moscoredregressor (class in modeva.models)": [[287, "modeva.models.MoScoredRegressor", false]], "mosklearnclassifier (class in modeva.models)": [[284, "modeva.models.MoSKLearnClassifier", false]], "mosklearnregressor (class in modeva.models)": [[285, "modeva.models.MoSKLearnRegressor", false]], "moxgbclassifier (class in modeva.models)": [[288, "modeva.models.MoXGBClassifier", false]], "moxgbregressor (class in modeva.models)": [[289, "modeva.models.MoXGBRegressor", false]], "n_features_in_ (modeva.models.moglmtreeboostclassifier attribute)": [[266, "modeva.models.MoGLMTreeBoostClassifier.n_features_in_", false]], "n_features_in_ (modeva.models.moglmtreeboostregressor attribute)": [[267, "modeva.models.MoGLMTreeBoostRegressor.n_features_in_", false]], "n_interactions_ (modeva.models.mogaminetclassifier attribute)": [[264, "modeva.models.MoGAMINetClassifier.n_interactions_", false]], "n_interactions_ (modeva.models.mogaminetregressor attribute)": [[265, "modeva.models.MoGAMINetRegressor.n_interactions_", false]], "net_ (modeva.models.mogaminetclassifier attribute)": [[264, "modeva.models.MoGAMINetClassifier.net_", false]], "net_ (modeva.models.mogaminetregressor attribute)": [[265, "modeva.models.MoGAMINetRegressor.net_", false]], "net_ (modeva.models.moneuraltreeclassifier attribute)": [[277, "modeva.models.MoNeuralTreeClassifier.net_", false]], "net_ (modeva.models.moneuraltreeregressor attribute)": [[278, "modeva.models.MoNeuralTreeRegressor.net_", false]], "net_ (modeva.models.moreludnnclassifier attribute)": [[281, "modeva.models.MoReLUDNNClassifier.net_", false]], "net_ (modeva.models.moreludnnregressor attribute)": [[282, "modeva.models.MoReLUDNNRegressor.net_", false]], "predict() (modeva.models.mocatboostclassifier method)": [[258, "modeva.models.MoCatBoostClassifier.predict", false]], "predict() (modeva.models.mocatboostregressor method)": [[259, "modeva.models.MoCatBoostRegressor.predict", false]], "predict() (modeva.models.moclassifier method)": [[260, "modeva.models.MoClassifier.predict", false]], "predict() (modeva.models.modecisiontreeclassifier method)": [[261, "modeva.models.MoDecisionTreeClassifier.predict", false]], "predict() (modeva.models.modecisiontreeregressor method)": [[262, "modeva.models.MoDecisionTreeRegressor.predict", false]], "predict() (modeva.models.moelasticnet method)": [[263, "modeva.models.MoElasticNet.predict", false]], "predict() (modeva.models.mogaminetclassifier method)": [[264, "modeva.models.MoGAMINetClassifier.predict", false]], "predict() (modeva.models.mogaminetregressor method)": [[265, "modeva.models.MoGAMINetRegressor.predict", false]], "predict() (modeva.models.moglmtreeboostclassifier method)": [[266, "modeva.models.MoGLMTreeBoostClassifier.predict", false]], "predict() (modeva.models.moglmtreeboostregressor method)": [[267, "modeva.models.MoGLMTreeBoostRegressor.predict", false]], "predict() (modeva.models.moglmtreeclassifier method)": [[268, "modeva.models.MoGLMTreeClassifier.predict", false]], "predict() (modeva.models.moglmtreeregressor method)": [[269, "modeva.models.MoGLMTreeRegressor.predict", false]], "predict() (modeva.models.mogradientboostingclassifier method)": [[270, "modeva.models.MoGradientBoostingClassifier.predict", false]], "predict() (modeva.models.mogradientboostingregressor method)": [[271, "modeva.models.MoGradientBoostingRegressor.predict", false]], "predict() (modeva.models.molgbmclassifier method)": [[272, "modeva.models.MoLGBMClassifier.predict", false]], "predict() (modeva.models.molgbmregressor method)": [[273, "modeva.models.MoLGBMRegressor.predict", false]], "predict() (modeva.models.mologisticregression method)": [[274, "modeva.models.MoLogisticRegression.predict", false]], "predict() (modeva.models.momoeclassifier method)": [[275, "modeva.models.MoMoEClassifier.predict", false]], "predict() (modeva.models.momoeregressor method)": [[276, "modeva.models.MoMoERegressor.predict", false]], "predict() (modeva.models.moneuraltreeclassifier method)": [[277, "modeva.models.MoNeuralTreeClassifier.predict", false]], "predict() (modeva.models.moneuraltreeregressor method)": [[278, "modeva.models.MoNeuralTreeRegressor.predict", false]], "predict() (modeva.models.morandomforestclassifier method)": [[279, "modeva.models.MoRandomForestClassifier.predict", false]], "predict() (modeva.models.morandomforestregressor method)": [[280, "modeva.models.MoRandomForestRegressor.predict", false]], "predict() (modeva.models.moregressor method)": [[283, "modeva.models.MoRegressor.predict", false]], "predict() (modeva.models.moreludnnclassifier method)": [[281, "modeva.models.MoReLUDNNClassifier.predict", false]], "predict() (modeva.models.moreludnnregressor method)": [[282, "modeva.models.MoReLUDNNRegressor.predict", false]], "predict() (modeva.models.moscoredclassifier method)": [[286, "modeva.models.MoScoredClassifier.predict", false]], "predict() (modeva.models.moscoredregressor method)": [[287, "modeva.models.MoScoredRegressor.predict", false]], "predict() (modeva.models.mosklearnclassifier method)": [[284, "modeva.models.MoSKLearnClassifier.predict", false]], "predict() (modeva.models.mosklearnregressor method)": [[285, "modeva.models.MoSKLearnRegressor.predict", false]], "predict() (modeva.models.moxgbclassifier method)": [[288, "modeva.models.MoXGBClassifier.predict", false]], "predict() (modeva.models.moxgbregressor method)": [[289, "modeva.models.MoXGBRegressor.predict", false]], "predict_proba() (modeva.models.mocatboostclassifier method)": [[258, "modeva.models.MoCatBoostClassifier.predict_proba", false]], "predict_proba() (modeva.models.moclassifier method)": [[260, "modeva.models.MoClassifier.predict_proba", false]], "predict_proba() (modeva.models.modecisiontreeclassifier method)": [[261, "modeva.models.MoDecisionTreeClassifier.predict_proba", false]], "predict_proba() (modeva.models.mogaminetclassifier method)": [[264, "modeva.models.MoGAMINetClassifier.predict_proba", false]], "predict_proba() (modeva.models.moglmtreeboostclassifier method)": [[266, "modeva.models.MoGLMTreeBoostClassifier.predict_proba", false]], "predict_proba() (modeva.models.moglmtreeclassifier method)": [[268, "modeva.models.MoGLMTreeClassifier.predict_proba", false]], "predict_proba() (modeva.models.mogradientboostingclassifier method)": [[270, "modeva.models.MoGradientBoostingClassifier.predict_proba", false]], "predict_proba() (modeva.models.molgbmclassifier method)": [[272, "modeva.models.MoLGBMClassifier.predict_proba", false]], "predict_proba() (modeva.models.mologisticregression method)": [[274, "modeva.models.MoLogisticRegression.predict_proba", false]], "predict_proba() (modeva.models.momoeclassifier method)": [[275, "modeva.models.MoMoEClassifier.predict_proba", false]], "predict_proba() (modeva.models.moneuraltreeclassifier method)": [[277, "modeva.models.MoNeuralTreeClassifier.predict_proba", false]], "predict_proba() (modeva.models.morandomforestclassifier method)": [[279, "modeva.models.MoRandomForestClassifier.predict_proba", false]], "predict_proba() (modeva.models.moreludnnclassifier method)": [[281, "modeva.models.MoReLUDNNClassifier.predict_proba", false]], "predict_proba() (modeva.models.moscoredclassifier method)": [[286, "modeva.models.MoScoredClassifier.predict_proba", false]], "predict_proba() (modeva.models.mosklearnclassifier method)": [[284, "modeva.models.MoSKLearnClassifier.predict_proba", false]], "predict_proba() (modeva.models.moxgbclassifier method)": [[288, "modeva.models.MoXGBClassifier.predict_proba", false]], "save() (modeva.models.mocatboostclassifier method)": [[258, "modeva.models.MoCatBoostClassifier.save", false]], "save() (modeva.models.mocatboostregressor method)": [[259, "modeva.models.MoCatBoostRegressor.save", false]], "save() (modeva.models.moclassifier method)": [[260, "modeva.models.MoClassifier.save", false]], "save() (modeva.models.modecisiontreeclassifier method)": [[261, "modeva.models.MoDecisionTreeClassifier.save", false]], "save() (modeva.models.modecisiontreeregressor method)": [[262, "modeva.models.MoDecisionTreeRegressor.save", false]], "save() (modeva.models.moelasticnet method)": [[263, "modeva.models.MoElasticNet.save", false]], "save() (modeva.models.mogaminetclassifier method)": [[264, "modeva.models.MoGAMINetClassifier.save", false]], "save() (modeva.models.mogaminetregressor method)": [[265, "modeva.models.MoGAMINetRegressor.save", false]], "save() (modeva.models.moglmtreeboostclassifier method)": [[266, "modeva.models.MoGLMTreeBoostClassifier.save", false]], "save() (modeva.models.moglmtreeboostregressor method)": [[267, "modeva.models.MoGLMTreeBoostRegressor.save", false]], "save() (modeva.models.moglmtreeclassifier method)": [[268, "modeva.models.MoGLMTreeClassifier.save", false]], "save() (modeva.models.moglmtreeregressor method)": [[269, "modeva.models.MoGLMTreeRegressor.save", false]], "save() (modeva.models.mogradientboostingclassifier method)": [[270, "modeva.models.MoGradientBoostingClassifier.save", false]], "save() (modeva.models.mogradientboostingregressor method)": [[271, "modeva.models.MoGradientBoostingRegressor.save", false]], "save() (modeva.models.molgbmclassifier method)": [[272, "modeva.models.MoLGBMClassifier.save", false]], "save() (modeva.models.molgbmregressor method)": [[273, "modeva.models.MoLGBMRegressor.save", false]], "save() (modeva.models.mologisticregression method)": [[274, "modeva.models.MoLogisticRegression.save", false]], "save() (modeva.models.momoeclassifier method)": [[275, "modeva.models.MoMoEClassifier.save", false]], "save() (modeva.models.momoeregressor method)": [[276, "modeva.models.MoMoERegressor.save", false]], "save() (modeva.models.moneuraltreeclassifier method)": [[277, "modeva.models.MoNeuralTreeClassifier.save", false]], "save() (modeva.models.moneuraltreeregressor method)": [[278, "modeva.models.MoNeuralTreeRegressor.save", false]], "save() (modeva.models.morandomforestclassifier method)": [[279, "modeva.models.MoRandomForestClassifier.save", false]], "save() (modeva.models.morandomforestregressor method)": [[280, "modeva.models.MoRandomForestRegressor.save", false]], "save() (modeva.models.moregressor method)": [[283, "modeva.models.MoRegressor.save", false]], "save() (modeva.models.moreludnnclassifier method)": [[281, "modeva.models.MoReLUDNNClassifier.save", false]], "save() (modeva.models.moreludnnregressor method)": [[282, "modeva.models.MoReLUDNNRegressor.save", false]], "save() (modeva.models.moscoredclassifier method)": [[286, "modeva.models.MoScoredClassifier.save", false]], "save() (modeva.models.moscoredregressor method)": [[287, "modeva.models.MoScoredRegressor.save", false]], "save() (modeva.models.mosklearnclassifier method)": [[284, "modeva.models.MoSKLearnClassifier.save", false]], "save() (modeva.models.mosklearnregressor method)": [[285, "modeva.models.MoSKLearnRegressor.save", false]], "save() (modeva.models.moxgbclassifier method)": [[288, "modeva.models.MoXGBClassifier.save", false]], "save() (modeva.models.moxgbregressor method)": [[289, "modeva.models.MoXGBRegressor.save", false]], "set_params() (modeva.models.mocatboostclassifier method)": [[258, "modeva.models.MoCatBoostClassifier.set_params", false]], "set_params() (modeva.models.mocatboostregressor method)": [[259, "modeva.models.MoCatBoostRegressor.set_params", false]], "set_params() (modeva.models.moclassifier method)": [[260, "modeva.models.MoClassifier.set_params", false]], "set_params() (modeva.models.modecisiontreeclassifier method)": [[261, "modeva.models.MoDecisionTreeClassifier.set_params", false]], "set_params() (modeva.models.modecisiontreeregressor method)": [[262, "modeva.models.MoDecisionTreeRegressor.set_params", false]], "set_params() (modeva.models.moelasticnet method)": [[263, "modeva.models.MoElasticNet.set_params", false]], "set_params() (modeva.models.mogaminetclassifier method)": [[264, "modeva.models.MoGAMINetClassifier.set_params", false]], "set_params() (modeva.models.mogaminetregressor method)": [[265, "modeva.models.MoGAMINetRegressor.set_params", false]], "set_params() (modeva.models.moglmtreeboostclassifier method)": [[266, "modeva.models.MoGLMTreeBoostClassifier.set_params", false]], "set_params() (modeva.models.moglmtreeboostregressor method)": [[267, "modeva.models.MoGLMTreeBoostRegressor.set_params", false]], "set_params() (modeva.models.moglmtreeclassifier method)": [[268, "modeva.models.MoGLMTreeClassifier.set_params", false]], "set_params() (modeva.models.moglmtreeregressor method)": [[269, "modeva.models.MoGLMTreeRegressor.set_params", false]], "set_params() (modeva.models.mogradientboostingclassifier method)": [[270, "modeva.models.MoGradientBoostingClassifier.set_params", false]], "set_params() (modeva.models.mogradientboostingregressor method)": [[271, "modeva.models.MoGradientBoostingRegressor.set_params", false]], "set_params() (modeva.models.molgbmclassifier method)": [[272, "modeva.models.MoLGBMClassifier.set_params", false]], "set_params() (modeva.models.molgbmregressor method)": [[273, "modeva.models.MoLGBMRegressor.set_params", false]], "set_params() (modeva.models.mologisticregression method)": [[274, "modeva.models.MoLogisticRegression.set_params", false]], "set_params() (modeva.models.momoeclassifier method)": [[275, "modeva.models.MoMoEClassifier.set_params", false]], "set_params() (modeva.models.momoeregressor method)": [[276, "modeva.models.MoMoERegressor.set_params", false]], "set_params() (modeva.models.moneuraltreeclassifier method)": [[277, "modeva.models.MoNeuralTreeClassifier.set_params", false]], "set_params() (modeva.models.moneuraltreeregressor method)": [[278, "modeva.models.MoNeuralTreeRegressor.set_params", false]], "set_params() (modeva.models.morandomforestclassifier method)": [[279, "modeva.models.MoRandomForestClassifier.set_params", false]], "set_params() (modeva.models.morandomforestregressor method)": [[280, "modeva.models.MoRandomForestRegressor.set_params", false]], "set_params() (modeva.models.moregressor method)": [[283, "modeva.models.MoRegressor.set_params", false]], "set_params() (modeva.models.moreludnnclassifier method)": [[281, "modeva.models.MoReLUDNNClassifier.set_params", false]], "set_params() (modeva.models.moreludnnregressor method)": [[282, "modeva.models.MoReLUDNNRegressor.set_params", false]], "set_params() (modeva.models.moscoredclassifier method)": [[286, "modeva.models.MoScoredClassifier.set_params", false]], "set_params() (modeva.models.moscoredregressor method)": [[287, "modeva.models.MoScoredRegressor.set_params", false]], "set_params() (modeva.models.mosklearnclassifier method)": [[284, "modeva.models.MoSKLearnClassifier.set_params", false]], "set_params() (modeva.models.mosklearnregressor method)": [[285, "modeva.models.MoSKLearnRegressor.set_params", false]], "set_params() (modeva.models.moxgbclassifier method)": [[288, "modeva.models.MoXGBClassifier.set_params", false]], "set_params() (modeva.models.moxgbregressor method)": [[289, "modeva.models.MoXGBRegressor.set_params", false]], "time_cost_ (modeva.models.mogaminetclassifier attribute)": [[264, "modeva.models.MoGAMINetClassifier.time_cost_", false]], "time_cost_ (modeva.models.mogaminetregressor attribute)": [[265, "modeva.models.MoGAMINetRegressor.time_cost_", false]], "train_epoch_loss_ (modeva.models.moreludnnclassifier attribute)": [[281, "modeva.models.MoReLUDNNClassifier.train_epoch_loss_", false]], "train_epoch_loss_ (modeva.models.moreludnnregressor attribute)": [[282, "modeva.models.MoReLUDNNRegressor.train_epoch_loss_", false]], "tree_ (modeva.models.moglmtreeclassifier attribute)": [[268, "modeva.models.MoGLMTreeClassifier.tree_", false]], "tree_ (modeva.models.moglmtreeregressor attribute)": [[269, "modeva.models.MoGLMTreeRegressor.tree_", false]], "validation_epoch_loss_ (modeva.models.moreludnnclassifier attribute)": [[281, "modeva.models.MoReLUDNNClassifier.validation_epoch_loss_", false]], "validation_epoch_loss_ (modeva.models.moreludnnregressor attribute)": [[282, "modeva.models.MoReLUDNNRegressor.validation_epoch_loss_", false]]}, "objects": {"": [[95, 5, 0, "-", "notebook"]], "modeva.DataSet": [[102, 0, 1, "", "all_feature_names"], [103, 0, 1, "", "all_feature_types"], [104, 1, 1, "", "bin_numerical"], [105, 0, 1, "", "data"], [106, 1, 1, "", "data_drift_test"], [107, 1, 1, "", "delete_extra_data"], [108, 1, 1, "", "delete_registered_data"], [109, 1, 1, "", "detect_outlier_cblof"], [110, 1, 1, "", "detect_outlier_isolation_forest"], [111, 1, 1, "", "detect_outlier_pca"], [112, 1, 1, "", "eda_1d"], [113, 1, 1, "", "eda_2d"], [114, 1, 1, "", "eda_3d"], [115, 1, 1, "", "eda_correlation"], [116, 1, 1, "", "eda_pca"], [117, 1, 1, "", "eda_umap"], [118, 1, 1, "", "encode_categorical"], [119, 0, 1, "", "feature_names"], [120, 0, 1, "", "feature_names_categorical"], [121, 0, 1, "", "feature_names_mixed"], [122, 0, 1, "", "feature_names_numerical"], [123, 1, 1, "", "feature_select_corr"], [124, 1, 1, "", "feature_select_rcit"], [125, 1, 1, "", "feature_select_xgbpfi"], [126, 0, 1, "", "feature_types"], [127, 1, 1, "", "get_X_y_data"], [128, 1, 1, "", "get_data"], [129, 1, 1, "", "get_data_list"], [130, 1, 1, "", "get_extra_data_list"], [131, 1, 1, "", "get_prediction_data"], [132, 1, 1, "", "get_prediction_proba_data"], [133, 1, 1, "", "get_preprocessor"], [134, 1, 1, "", "get_protected_data"], [135, 1, 1, "", "get_raw_data"], [136, 1, 1, "", "impute_missing"], [137, 1, 1, "", "inverse_transform"], [138, 1, 1, "", "is_splitted"], [139, 1, 1, "", "list_registered_data"], [140, 1, 1, "", "load"], [141, 1, 1, "", "load_csv"], [142, 1, 1, "", "load_dataframe"], [143, 1, 1, "", "load_dataframe_train_test"], [144, 1, 1, "", "load_preprocessing"], [145, 1, 1, "", "load_registered_data"], [146, 1, 1, "", "load_spark"], [147, 0, 1, "", "n_features"], [148, 0, 1, "", "name"], [149, 0, 1, "", "prediction"], [150, 1, 1, "", "preprocess"], [151, 0, 1, "", "raw_data"], [152, 1, 1, "", "register"], [153, 1, 1, "", "reset_preprocess"], [154, 0, 1, "", "sample_weight"], [155, 1, 1, "", "save_preprocessing"], [156, 1, 1, "", "scale_numerical"], [157, 1, 1, "", "set_active_features"], [158, 1, 1, "", "set_feature_type"], [159, 1, 1, "", "set_inactive_features"], [160, 1, 1, "", "set_prediction"], [161, 1, 1, "", "set_prediction_proba"], [162, 1, 1, "", "set_protected_data"], [163, 1, 1, "", "set_protected_extra_data"], [164, 1, 1, "", "set_random_split"], [165, 1, 1, "", "set_raw_extra_data"], [166, 1, 1, "", "set_sample_weight"], [167, 1, 1, "", "set_target"], [168, 1, 1, "", "set_task_type"], [169, 1, 1, "", "set_test_idx"], [170, 1, 1, "", "set_train_idx"], [171, 0, 1, "", "shape"], [172, 1, 1, "", "subsample_random"], [173, 1, 1, "", "summary"], [174, 0, 1, "", "task_type"], [175, 0, 1, "", "test_prediction"], [176, 0, 1, "", "test_sample_weight"], [177, 0, 1, "", "test_x"], [178, 0, 1, "", "test_y"], [179, 1, 1, "", "to_df"], [180, 0, 1, "", "train_prediction"], [181, 0, 1, "", "train_sample_weight"], [182, 0, 1, "", "train_x"], [183, 0, 1, "", "train_y"], [184, 1, 1, "", "transform"], [185, 0, 1, "", "x"], [186, 0, 1, "", "y"]], "modeva.ModelZoo": [[187, 1, 1, "", "add_model"], [188, 0, 1, "", "dataset"], [189, 1, 1, "", "delete_registered_model"], [190, 1, 1, "", "get_model"], [191, 1, 1, "", "leaderboard"], [192, 1, 1, "", "list_model_names"], [193, 1, 1, "", "list_registered_models"], [194, 1, 1, "", "load_registered_model"], [195, 0, 1, "", "models"], [196, 1, 1, "", "register"], [197, 1, 1, "", "train"], [198, 1, 1, "", "train_all"]], "modeva.TestSuite": [[199, 1, 1, "", "compare_accuracy_table"], [200, 1, 1, "", "compare_fairness"], [201, 1, 1, "", "compare_reliability"], [202, 1, 1, "", "compare_resilience"], [203, 1, 1, "", "compare_robustness"], [204, 1, 1, "", "compare_slicing_accuracy"], [205, 1, 1, "", "compare_slicing_fairness"], [206, 1, 1, "", "compare_slicing_overfit"], [207, 1, 1, "", "compare_slicing_reliability"], [208, 1, 1, "", "compare_slicing_robustness"], [209, 1, 1, "", "delete_registed_test"], [210, 1, 1, "", "diagnose_accuracy_table"], [211, 1, 1, "", "diagnose_fairness"], [212, 1, 1, "", "diagnose_mitigate_unfair_binning"], [213, 1, 1, "", "diagnose_mitigate_unfair_thresholding"], [214, 1, 1, "", "diagnose_reliability"], [215, 1, 1, "", "diagnose_residual_analysis"], [216, 1, 1, "", "diagnose_residual_cluster"], [217, 1, 1, "", "diagnose_residual_interpret"], [218, 1, 1, "", "diagnose_resilience"], [219, 1, 1, "", "diagnose_robustness"], [220, 1, 1, "", "diagnose_slicing_accuracy"], [221, 1, 1, "", "diagnose_slicing_fairness"], [222, 1, 1, "", "diagnose_slicing_overfit"], [223, 1, 1, "", "diagnose_slicing_reliability"], [224, 1, 1, "", "diagnose_slicing_robustness"], [225, 1, 1, "", "display_test_results"], [226, 1, 1, "", "explain_ale"], [227, 1, 1, "", "explain_hstatistic"], [228, 1, 1, "", "explain_lime"], [229, 1, 1, "", "explain_pdp"], [230, 1, 1, "", "explain_pfi"], [231, 1, 1, "", "explain_shap"], [232, 1, 1, "", "export_report"], [233, 1, 1, "", "get_dataset"], [234, 1, 1, "", "get_interactions"], [235, 1, 1, "", "get_main_effects"], [236, 1, 1, "", "get_model"], [237, 1, 1, "", "interpret_coef"], [238, 1, 1, "", "interpret_effects"], [239, 1, 1, "", "interpret_effects_moe_average"], [240, 1, 1, "", "interpret_fi"], [241, 1, 1, "", "interpret_global_tree"], [242, 1, 1, "", "interpret_llm_pc"], [243, 1, 1, "", "interpret_llm_profile"], [244, 1, 1, "", "interpret_llm_summary"], [245, 1, 1, "", "interpret_llm_violin"], [246, 1, 1, "", "interpret_local_fi"], [247, 1, 1, "", "interpret_local_linear_fi"], [248, 1, 1, "", "interpret_local_moe_weights"], [249, 1, 1, "", "interpret_local_tree"], [250, 1, 1, "", "interpret_moe_cluster_analysis"], [251, 1, 1, "", "list"], [252, 1, 1, "", "list_registered_tests"], [253, 1, 1, "", "load_registered_test"], [254, 1, 1, "", "register"], [255, 1, 1, "", "set_dataset"], [256, 1, 1, "", "set_model"]], "modeva.automation.pipeline": [[257, 2, 1, "", "Pipeline"]], "modeva.automation.pipeline.Pipeline": [[257, 1, 1, "", "add_step"], [257, 1, 1, "", "run"]], "modeva.models": [[258, 2, 1, "", "MoCatBoostClassifier"], [259, 2, 1, "", "MoCatBoostRegressor"], [260, 2, 1, "", "MoClassifier"], [261, 2, 1, "", "MoDecisionTreeClassifier"], [262, 2, 1, "", "MoDecisionTreeRegressor"], [263, 2, 1, "", "MoElasticNet"], [264, 2, 1, "", "MoGAMINetClassifier"], [265, 2, 1, "", "MoGAMINetRegressor"], [266, 2, 1, "", "MoGLMTreeBoostClassifier"], [267, 2, 1, "", "MoGLMTreeBoostRegressor"], [268, 2, 1, "", "MoGLMTreeClassifier"], [269, 2, 1, "", "MoGLMTreeRegressor"], [270, 2, 1, "", "MoGradientBoostingClassifier"], [271, 2, 1, "", "MoGradientBoostingRegressor"], [272, 2, 1, "", "MoLGBMClassifier"], [273, 2, 1, "", "MoLGBMRegressor"], [274, 2, 1, "", "MoLogisticRegression"], [275, 2, 1, "", "MoMoEClassifier"], [276, 2, 1, "", "MoMoERegressor"], [277, 2, 1, "", "MoNeuralTreeClassifier"], [278, 2, 1, "", "MoNeuralTreeRegressor"], [279, 2, 1, "", "MoRandomForestClassifier"], [280, 2, 1, "", "MoRandomForestRegressor"], [281, 2, 1, "", "MoReLUDNNClassifier"], [282, 2, 1, "", "MoReLUDNNRegressor"], [283, 2, 1, "", "MoRegressor"], [284, 2, 1, "", "MoSKLearnClassifier"], [285, 2, 1, "", "MoSKLearnRegressor"], [286, 2, 1, "", "MoScoredClassifier"], [287, 2, 1, "", "MoScoredRegressor"], [288, 2, 1, "", "MoXGBClassifier"], [289, 2, 1, "", "MoXGBRegressor"], [290, 2, 1, "", "ModelTuneGridSearch"], [291, 2, 1, "", "ModelTuneOptuna"], [292, 2, 1, "", "ModelTunePSO"], [293, 2, 1, "", "ModelTuneRandomSearch"], [294, 4, 1, "", "modeva_arbitrary_classifier"], [295, 4, 1, "", "modeva_arbitrary_regressor"], [296, 4, 1, "", "modeva_sklearn_classifier"], [297, 4, 1, "", "modeva_sklearn_regressor"]], "modeva.models.MoCatBoostClassifier": [[258, 1, 1, "", "fit"], [258, 1, 1, "", "get_params"], [258, 1, 1, "", "load"], [258, 1, 1, "", "predict"], [258, 1, 1, "", "predict_proba"], [258, 1, 1, "", "save"], [258, 1, 1, "", "set_params"]], "modeva.models.MoCatBoostRegressor": [[259, 1, 1, "", "fit"], [259, 1, 1, "", "get_params"], [259, 1, 1, "", "load"], [259, 1, 1, "", "predict"], [259, 1, 1, "", "save"], [259, 1, 1, "", "set_params"]], "modeva.models.MoClassifier": [[260, 1, 1, "", "fit"], [260, 1, 1, "", "get_params"], [260, 1, 1, "", "load"], [260, 1, 1, "", "predict"], [260, 1, 1, "", "predict_proba"], [260, 1, 1, "", "save"], [260, 1, 1, "", "set_params"]], "modeva.models.MoDecisionTreeClassifier": [[261, 1, 1, "", "fit"], [261, 1, 1, "", "get_params"], [261, 1, 1, "", "load"], [261, 1, 1, "", "predict"], [261, 1, 1, "", "predict_proba"], [261, 1, 1, "", "save"], [261, 1, 1, "", "set_params"]], "modeva.models.MoDecisionTreeRegressor": [[262, 1, 1, "", "fit"], [262, 1, 1, "", "get_params"], [262, 1, 1, "", "load"], [262, 1, 1, "", "predict"], [262, 1, 1, "", "save"], [262, 1, 1, "", "set_params"]], "modeva.models.MoElasticNet": [[263, 1, 1, "", "fit"], [263, 1, 1, "", "get_params"], [263, 1, 1, "", "load"], [263, 1, 1, "", "predict"], [263, 1, 1, "", "save"], [263, 1, 1, "", "set_params"]], "modeva.models.MoGAMINetClassifier": [[264, 3, 1, "", "active_interaction_index_"], [264, 3, 1, "", "active_main_effect_index_"], [264, 1, 1, "", "fit"], [264, 1, 1, "", "get_params"], [264, 3, 1, "", "interaction_list_"], [264, 3, 1, "", "interaction_val_loss_"], [264, 1, 1, "", "load"], [264, 3, 1, "", "main_effect_val_loss_"], [264, 3, 1, "", "n_interactions_"], [264, 3, 1, "", "net_"], [264, 1, 1, "", "predict"], [264, 1, 1, "", "predict_proba"], [264, 1, 1, "", "save"], [264, 1, 1, "", "set_params"], [264, 3, 1, "", "time_cost_"]], "modeva.models.MoGAMINetRegressor": [[265, 3, 1, "", "active_interaction_index_"], [265, 3, 1, "", "active_main_effect_index_"], [265, 1, 1, "", "fit"], [265, 1, 1, "", "get_params"], [265, 3, 1, "", "interaction_list_"], [265, 3, 1, "", "interaction_val_loss_"], [265, 1, 1, "", "load"], [265, 3, 1, "", "main_effect_val_loss_"], [265, 3, 1, "", "n_interactions_"], [265, 3, 1, "", "net_"], [265, 1, 1, "", "predict"], [265, 1, 1, "", "save"], [265, 1, 1, "", "set_params"], [265, 3, 1, "", "time_cost_"]], "modeva.models.MoGLMTreeBoostClassifier": [[266, 3, 1, "", "estimators_"], [266, 1, 1, "", "fit"], [266, 1, 1, "", "get_params"], [266, 1, 1, "", "load"], [266, 3, 1, "", "n_features_in_"], [266, 1, 1, "", "predict"], [266, 1, 1, "", "predict_proba"], [266, 1, 1, "", "save"], [266, 1, 1, "", "set_params"]], "modeva.models.MoGLMTreeBoostRegressor": [[267, 3, 1, "", "estimators_"], [267, 1, 1, "", "fit"], [267, 1, 1, "", "get_params"], [267, 1, 1, "", "load"], [267, 3, 1, "", "n_features_in_"], [267, 1, 1, "", "predict"], [267, 1, 1, "", "save"], [267, 1, 1, "", "set_params"]], "modeva.models.MoGLMTreeClassifier": [[268, 1, 1, "", "get_params"], [268, 3, 1, "", "leaf_estimators_"], [268, 1, 1, "", "load"], [268, 1, 1, "", "predict"], [268, 1, 1, "", "predict_proba"], [268, 1, 1, "", "save"], [268, 1, 1, "", "set_params"], [268, 3, 1, "", "tree_"]], "modeva.models.MoGLMTreeRegressor": [[269, 1, 1, "", "get_params"], [269, 1, 1, "", "load"], [269, 1, 1, "", "predict"], [269, 1, 1, "", "save"], [269, 1, 1, "", "set_params"], [269, 3, 1, "", "tree_"]], "modeva.models.MoGradientBoostingClassifier": [[270, 1, 1, "", "fit"], [270, 1, 1, "", "get_params"], [270, 1, 1, "", "load"], [270, 1, 1, "", "predict"], [270, 1, 1, "", "predict_proba"], [270, 1, 1, "", "save"], [270, 1, 1, "", "set_params"]], "modeva.models.MoGradientBoostingRegressor": [[271, 1, 1, "", "fit"], [271, 1, 1, "", "get_params"], [271, 1, 1, "", "load"], [271, 1, 1, "", "predict"], [271, 1, 1, "", "save"], [271, 1, 1, "", "set_params"]], "modeva.models.MoLGBMClassifier": [[272, 1, 1, "", "fit"], [272, 1, 1, "", "get_params"], [272, 1, 1, "", "load"], [272, 1, 1, "", "predict"], [272, 1, 1, "", "predict_proba"], [272, 1, 1, "", "save"], [272, 1, 1, "", "set_params"]], "modeva.models.MoLGBMRegressor": [[273, 1, 1, "", "fit"], [273, 1, 1, "", "get_params"], [273, 1, 1, "", "load"], [273, 1, 1, "", "predict"], [273, 1, 1, "", "save"], [273, 1, 1, "", "set_params"]], "modeva.models.MoLogisticRegression": [[274, 1, 1, "", "fit"], [274, 1, 1, "", "get_params"], [274, 1, 1, "", "load"], [274, 1, 1, "", "predict"], [274, 1, 1, "", "predict_proba"], [274, 1, 1, "", "save"], [274, 1, 1, "", "set_params"]], "modeva.models.MoMoEClassifier": [[275, 1, 1, "", "fit"], [275, 1, 1, "", "get_params"], [275, 1, 1, "", "load"], [275, 1, 1, "", "predict"], [275, 1, 1, "", "predict_proba"], [275, 1, 1, "", "save"], [275, 1, 1, "", "set_params"]], "modeva.models.MoMoERegressor": [[276, 1, 1, "", "fit"], [276, 1, 1, "", "get_params"], [276, 1, 1, "", "load"], [276, 1, 1, "", "predict"], [276, 1, 1, "", "save"], [276, 1, 1, "", "set_params"]], "modeva.models.MoNeuralTreeClassifier": [[277, 1, 1, "", "get_params"], [277, 1, 1, "", "load"], [277, 3, 1, "", "net_"], [277, 1, 1, "", "predict"], [277, 1, 1, "", "predict_proba"], [277, 1, 1, "", "save"], [277, 1, 1, "", "set_params"]], "modeva.models.MoNeuralTreeRegressor": [[278, 1, 1, "", "get_params"], [278, 1, 1, "", "load"], [278, 3, 1, "", "net_"], [278, 1, 1, "", "predict"], [278, 1, 1, "", "save"], [278, 1, 1, "", "set_params"]], "modeva.models.MoRandomForestClassifier": [[279, 1, 1, "", "fit"], [279, 1, 1, "", "get_params"], [279, 1, 1, "", "load"], [279, 1, 1, "", "predict"], [279, 1, 1, "", "predict_proba"], [279, 1, 1, "", "save"], [279, 1, 1, "", "set_params"]], "modeva.models.MoRandomForestRegressor": [[280, 1, 1, "", "fit"], [280, 1, 1, "", "get_params"], [280, 1, 1, "", "load"], [280, 1, 1, "", "predict"], [280, 1, 1, "", "save"], [280, 1, 1, "", "set_params"]], "modeva.models.MoReLUDNNClassifier": [[281, 1, 1, "", "fit"], [281, 1, 1, "", "get_params"], [281, 1, 1, "", "load"], [281, 3, 1, "", "net_"], [281, 1, 1, "", "predict"], [281, 1, 1, "", "predict_proba"], [281, 1, 1, "", "save"], [281, 1, 1, "", "set_params"], [281, 3, 1, "", "train_epoch_loss_"], [281, 3, 1, "", "validation_epoch_loss_"]], "modeva.models.MoReLUDNNRegressor": [[282, 1, 1, "", "fit"], [282, 1, 1, "", "get_params"], [282, 1, 1, "", "load"], [282, 3, 1, "", "net_"], [282, 1, 1, "", "predict"], [282, 1, 1, "", "save"], [282, 1, 1, "", "set_params"], [282, 3, 1, "", "train_epoch_loss_"], [282, 3, 1, "", "validation_epoch_loss_"]], "modeva.models.MoRegressor": [[283, 1, 1, "", "fit"], [283, 1, 1, "", "get_params"], [283, 1, 1, "", "load"], [283, 1, 1, "", "predict"], [283, 1, 1, "", "save"], [283, 1, 1, "", "set_params"]], "modeva.models.MoSKLearnClassifier": [[284, 1, 1, "", "fit"], [284, 1, 1, "", "get_params"], [284, 1, 1, "", "load"], [284, 1, 1, "", "predict"], [284, 1, 1, "", "predict_proba"], [284, 1, 1, "", "save"], [284, 1, 1, "", "set_params"]], "modeva.models.MoSKLearnRegressor": [[285, 1, 1, "", "fit"], [285, 1, 1, "", "get_params"], [285, 1, 1, "", "load"], [285, 1, 1, "", "predict"], [285, 1, 1, "", "save"], [285, 1, 1, "", "set_params"]], "modeva.models.MoScoredClassifier": [[286, 1, 1, "", "get_params"], [286, 1, 1, "", "load"], [286, 1, 1, "", "predict"], [286, 1, 1, "", "predict_proba"], [286, 1, 1, "", "save"], [286, 1, 1, "", "set_params"]], "modeva.models.MoScoredRegressor": [[287, 1, 1, "", "get_params"], [287, 1, 1, "", "load"], [287, 1, 1, "", "predict"], [287, 1, 1, "", "save"], [287, 1, 1, "", "set_params"]], "modeva.models.MoXGBClassifier": [[288, 1, 1, "", "fit"], [288, 1, 1, "", "get_params"], [288, 1, 1, "", "load"], [288, 1, 1, "", "predict"], [288, 1, 1, "", "predict_proba"], [288, 1, 1, "", "save"], [288, 1, 1, "", "set_params"]], "modeva.models.MoXGBRegressor": [[289, 1, 1, "", "fit"], [289, 1, 1, "", "get_params"], [289, 1, 1, "", "load"], [289, 1, 1, "", "predict"], [289, 1, 1, "", "save"], [289, 1, 1, "", "set_params"]], "modeva.models.ModelTuneGridSearch": [[290, 1, 1, "", "run"]], "modeva.models.ModelTuneOptuna": [[291, 1, 1, "", "run"]], "modeva.models.ModelTunePSO": [[292, 1, 1, "", "run"]], "modeva.models.ModelTuneRandomSearch": [[293, 1, 1, "", "run"]], "modeva.testsuite.utils.slicing_utils": [[298, 4, 1, "", "get_data_info"]], "modeva.utils.mlflow": [[299, 4, 1, "", "clear_mlflow_home"], [300, 4, 1, "", "get_mlflow_home"], [301, 4, 1, "", "set_mlflow_home"]], "modeva.utils.results": [[302, 2, 1, "", "ValidationResult"]], "modeva.utils.results.ValidationResult": [[302, 3, 1, "", "data"], [302, 3, 1, "", "func"], [302, 1, 1, "", "get_figure_names"], [302, 3, 1, "", "inputs"], [302, 3, 1, "", "key"], [302, 3, 1, "", "model"], [302, 3, 1, "", "options"], [302, 1, 1, "", "plot"], [302, 1, 1, "", "plot_save"], [302, 3, 1, "", "table"], [302, 3, 1, "", "value"]], "sphinx_gallery.utils": [[99, 4, 1, "", "optipng"]]}, "objnames": {"0": ["py", "property", "Python property"], "1": ["py", "method", "Python method"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "module", "Python module"]}, "objtypes": {"0": "py:property", "1": "py:method", "2": "py:class", "3": "py:attribute", "4": "py:function", "5": "py:module"}, "terms": {"": [5, 42, 104, 115, 123, 127, 128, 131, 132, 134, 135, 199, 204, 205, 206, 207, 208, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 237, 238, 240, 241, 247, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 302, 313, 317, 318, 319, 321, 322, 323, 324, 325, 327, 328, 330, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 356], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 100, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 124, 125, 136, 156, 164, 172, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 239, 246, 247, 248, 249, 264, 265, 266, 267, 268, 269, 275, 277, 278, 281, 282, 291, 292, 293, 298, 313, 314, 315, 318, 319, 321, 322, 327, 328, 329, 331, 332, 334, 337, 338, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 361], "00": [2, 8, 9, 10, 21, 22, 25, 27, 33, 42, 52, 56, 57, 60, 61, 64, 65, 72, 73, 76, 361], "000": [27, 34, 65, 313, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 361], "0000": [8, 9, 10, 17, 23, 24, 38, 45, 60, 64, 72, 76], "000000": [2, 3, 5], "00000000e": [], "00000002e": 25, "000028": 5, "000043": [2, 5], "0001": [14, 23, 24, 37, 264, 265, 277, 278], "0002": [20, 23, 24, 45, 60, 343], "00021112504082323335": 45, "000213": 13, "0003": [24, 50, 61, 79], "0004": [23, 36], "000434": [2, 3, 5], "0004342": 2, "000488": 318, "0005": 79, "0006": 39, "00065090e": 25, "0007": [23, 24, 45], "0007069232358482019": 45, "0008": 23, "000806": 15, "0008e": 23, "0009": [20, 37], "000e": 10, "001": [23, 24, 25, 26, 36, 38, 39, 42, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 264, 265, 277, 278, 281, 282, 343, 356], "0010": [23, 24, 79], "0012": 23, "0013": [19, 37], "001398e": 329, "0017": 36, "00178131": 25, "0018": 39, "0019": [23, 36], "0020": [45, 61], "002041522022738862": 45, "0021": 61, "00214606": 25, "0022": [23, 33, 39], "0023": 25, "0024": 24, "0025": 24, "0025790630388779416": 45, "00259": 24, "0026": [20, 23, 24, 45], "00260": 24, "00262": 24, "00263": 24, "00267": 24, "00268": 24, "0027": 20, "00272": 24, "00278": 24, "00286": 24, "00287": 24, "00289": 24, "0029": [20, 79], "00291": 24, "00292": 24, "00293": 24, "00295": 24, "00297": 24, "0030": [23, 26], "00302": 24, "00307": 24, "0031": 79, "003126e": 329, "00315": 24, "0033984293947358856": 45, "0034": [23, 45], "00340": 24, "003448": 15, "00347": 24, "00354": 24, "00354041": 25, "0036": [24, 79], "00369": 24, "00371": 24, "003728": 15, "0038": 24, "00380": 24, "00382": 319, "00387936": 25, "00388": 24, "0039": [19, 24, 25], "0040": 24, "004039": 13, "0041": 18, "0042": [18, 23, 24, 36], "00420": 24, "0043": [18, 24], "0044": [18, 24], "00441816": 25, "00444": 24, "0045": [18, 24], "0046": [18, 39], "0047": [18, 24], "00471474": 25, "0048": [18, 24], "0049": [18, 24], "00490": 24, "0050": [18, 24], "0051": [18, 24, 60], "0052": [18, 24, 79], "0053": [18, 24], "0054": 18, "0055": [18, 24], "005583": 13, "0056": 18, "00568": 24, "0057": [18, 26], "00578035e": 21, "0058": 18, "0059": 18, "0060": 18, "006083": 15, "0061": [18, 33, 39], "0062": [18, 33], "0063": 18, "0065": [18, 348], "0066": 18, "0067": [24, 33], "00676261": 25, "0069": 18, "0070": 18, "0071": 23, "0072": 18, "0073": 36, "0075": 18, "0076": 18, "007705": 14, "007752": 13, "0079": [18, 23], "0080": [18, 73], "0081": 18, "00813082": 25, "00817011": 25, "0082": [23, 61], "008289": 15, "0083": 79, "00835": 24, "0084": [26, 60], "0085": [18, 23, 25], "0086": 23, "00866784": 8, "0087": 23, "00876838": 8, "0088": 18, "00881300e": 25, "00889805": 25, "0090": [18, 19], "0091": 19, "0091e": 18, "0093": 25, "00935902": 25, "0094": 18, "0095": [18, 19, 25], "009701": 9, "009832": 14, "0099": 18, "00996485": 25, "01": [4, 10, 11, 14, 21, 22, 23, 25, 27, 34, 36, 38, 39, 42, 76, 264, 265, 292, 340, 352, 361], "0100": 18, "0101": 23, "0105": 18, "01055193": 25, "0107": 22, "01075141": 25, "0110": 18, "011016": 13, "01136341": 25, "0115": [18, 37], "01159481": 8, "0116": 79, "01185624": 25, "0120": 18, "01217": 24, "0124": [18, 60], "0125": 18, "0126": 23, "012624": 14, "01265278": 25, "0128": 18, "01286074": 25, "0129": 18, "01298327": 8, "0130": 61, "0134": 18, "0135": 18, "01355191": 25, "01358633": 25, "0137": 18, "01371426": 25, "01398571": 25, "0140": 18, "0142": 18, "0143": 18, "0145": 18, "0146": 18, "0148": 18, "0149": 23, "0150": 18, "0151": 18, "0152": 18, "0154": 18, "0155": 18, "0156": 18, "0157": 18, "0158": 18, "0160": 18, "0161": 18, "0162": 18, "0163": 18, "0164": [18, 23, 61], "01641528": 25, "0165": 18, "01658904": 25, "0166": [18, 37], "0168": 18, "0169": [18, 61], "0170": 18, "01700743": 25, "017097": 14, "0171": 18, "0172": 18, "0173": [18, 24], "0174": 61, "0175": 18, "017541e": 329, "0176": 60, "0177": [18, 61], "01777708": 8, "0178": 61, "0180": 18, "0181": [18, 60], "01815329": 25, "0182": 18, "0183": 18, "0184": 18, "0185": 18, "0188": [37, 60], "01883298": 25, "0189": 18, "01901355": 25, "0191": [18, 61], "0194": 18, "0197": [18, 37, 61], "0198": 73, "0198504": 25, "02": [2, 10, 11, 18, 36, 42, 48, 56, 58, 61, 65, 70, 76, 81, 329, 352], "0200e": 18, "0201": 18, "0202": 61, "0204": 61, "020537e": 329, "0206": [18, 61], "02073921": 25, "0208": 39, "0211": [18, 22], "021241": 16, "021339": 16, "0218": 18, "02180920e": 25, "02204623": 25, "0221": 18, "02214641": 25, "0222": [38, 61], "0224": 22, "022405e": 329, "0225": 18, "0227": 39, "02270906": 25, "02299061": 25, "0232": 37, "0233": 18, "0235": [21, 55], "02353739": 8, "023606": 3, "0237": 61, "0238": 18, "02418091": 25, "0242": 21, "0244": [18, 61], "0247": 18, "02474484": 25, "0248": [18, 61], "0250": 23, "0251": 60, "0252": 18, "0254": [33, 38], "02541088": 25, "0255": [18, 61], "0257": 73, "0258": 18, "0261": 18, "0262": 61, "0263": 18, "0264": 73, "02643381": 25, "0265": 18, "0268": [18, 61], "026928": 14, "0271": [18, 60], "0274": 39, "0278": [18, 39], "0283": 37, "0284": [18, 39], "0287": 60, "0287415": 25, "028757": 5, "02922558": 25, "029384": [2, 5], "02953576": 25, "0296": 23, "03": [2, 11, 18, 24, 34, 36, 40, 42, 56, 58, 72, 329, 361], "0300": 18, "03026423": 25, "0303": 8, "0307": 37, "03081845": 25, "0311": 33, "03114211": 25, "0312": [18, 76], "03135314e": 22, "0316": 37, "0317": 60, "0318": [23, 39], "0319": 60, "032": [19, 27, 361], "0324": 61, "0325": 60, "03263528": 17, "03267184": 25, "03286639": 25, "0334": 24, "0336": [60, 61], "0337": 60, "03414900e": 25, "0343": 18, "034555e": 329, "0345931": 25, "0349187": 25, "035233": 3, "0353": 64, "0355": 31, "03566952": 25, "03576016": 25, "0358": 24, "0367": [20, 37], "0368": 24, "036867": 3, "0369": 61, "0371": 33, "0372": 18, "0376": [20, 61], "0377": [23, 36], "0381": 61, "0384": 36, "0387": [23, 61], "03888": [327, 334], "039": [6, 11], "03964159": 25, "0397": 61, "0398": [61, 64], "04": [2, 8, 18, 21, 36, 42, 58, 65, 74, 329, 334], "04027566": 25, "04028322": 25, "04034364": 25, "0408": 61, "0411": 61, "0414": 18, "0415": 36, "0417": [39, 50, 61], "041787": [2, 5], "04199568": 25, "0421": 33, "0423": [51, 55], "0423956": 25, "0425": 37, "04257239": 25, "04270729": 25, "0429": 37, "0430": 61, "04318783": 25, "04341139": 25, "04367255e": 25, "0439": 33, "044": [10, 11], "04415915e": 25, "0442": 39, "0443": 61, "0444": 24, "044482": 42, "0445": 39, "0447": 36, "0448": [39, 79], "04500528": 25, "0451": 24, "0452": 61, "0454": 61, "0455": 18, "045e": 10, "0466": 61, "0467": 73, "04677684": 25, "04687064": 25, "0471": [18, 31], "0474": [39, 61], "047750": 16, "0478": 17, "04787676": 25, "0479": 55, "0484": 37, "0488": 51, "04900599": 25, "04949369": 25, "04975605": 25, "0498": 61, "05": [11, 18, 23, 24, 36, 42, 48, 56, 66, 281, 282], "0505": 61, "05087281": 25, "0516": 60, "05168332976549405": 45, "0517": 45, "0519": 61, "0520": 61, "05253822": 25, "052885": 9, "0530": 18, "0532": 23, "0534514": 25, "05348493": 8, "0536": 61, "0537": 64, "0538": 73, "0540": 45, "05400321268524999": 45, "05408157": 25, "05424298": 25, "0543": 76, "0546": 24, "0547": 24, "0548": 37, "0549": 61, "05490845": 25, "055148": 9, "05536766": 25, "0555": 36, "0559": 36, "05596207": 8, "0560": 36, "05606344": 8, "0563": 33, "056328": 3, "05644409": 25, "057": [], "0573": 37, "05781800e": 22, "0578455": 25, "05801912": 25, "05822533": 25, "0586": 31, "0588013": 25, "0590748": 25, "0591": [23, 61], "0599": [55, 61], "06": [18, 27, 56, 62, 124, 329, 361], "0601": 23, "0602": 61, "06129566246677624": 45, "0613": [45, 73], "061519": 3, "06170845": 8, "0619": 61, "0623": 61, "0626": 60, "06263672": 8, "062784e": 329, "0633": 18, "0636": 18, "0639": 61, "0644": 73, "0646": 36, "0647": 33, "06531028": 25, "0655": [], "06555223": 25, "0656": 61, "0659": 73, "0660": 61, "0661": 61, "0667": 73, "0669": 61, "067656": 9, "06786967": 25, "0681": 39, "0682": 61, "0684": 54, "069200": 3, "06939929": 8, "0695": 61, "0697": [33, 61], "07": [2, 40, 42, 56, 329, 334], "0702": [], "07045835": 25, "07084209": 25, "0710": 36, "07145943": 25, "071514": [2, 5], "0720": 50, "0722": 61, "072233": 42, "0724": 21, "07256868277920407": 45, "0726": 45, "0727": 61, "0728663": 25, "0737": 33, "073938": [2, 5], "07412234": 25, "0744": 38, "07458042": 25, "0746": 18, "074631": 3, "07463474": 25, "0748": 73, "0749": 18, "07496113": 25, "07552771": 18, "07558263": 25, "0758": 61, "0762": 33, "0764496": 25, "0765": [38, 60], "07686822": 25, "07697435": 8, "0770": 61, "0772": 18, "0773e": 18, "0774": 61, "0783": 38, "07869662": 17, "0788": 61, "0789": 37, "079": [39, 40], "0790": 18, "0790521": 25, "0793": 23, "07944137": 8, "079543": [2, 5], "08": [2, 11, 42, 61, 81, 329], "0801": 61, "0802": 38, "080281": 9, "0805": 61, "08114306": 25, "0812": 61, "08127522": 25, "0820": 73, "0829": 36, "0830": 39, "083151": 9, "0833": 23, "08340998": 8, "0836": 61, "08417148": 8, "0849": 33, "0852": 61, "0856": 64, "08572601": 25, "0860": 61, "0860051": 8, "0862": 61, "086518": 9, "0877": 51, "0879": 17, "0880": 60, "0884": [17, 61], "0886037": 17, "08875921": 25, "08920078": 25, "08939452": 8, "0896": 10, "0897": 60, "09": [42, 64, 329], "090": [20, 27, 361], "0900": 61, "0902": [55, 61], "0905": 61, "0906": 38, "0909": 38, "09141124": 17, "0919": [38, 61], "0920": 60, "0921": 22, "09213148": 8, "0924": 38, "0926": 61, "0929": 38, "0930": 61, "093091": 9, "0931": 73, "09315457": 8, "0932": 23, "0939": 38, "0940": 21, "0942": [38, 61], "0944": 73, "0953": 38, "0956": 38, "0962": 73, "0963": 38, "0964": 38, "0972": 61, "09737877": 25, "097382": 9, "0976": 38, "0977724": 25, "097892": 42, "09817635": 25, "0982": 60, "09821501": 25, "0985": 33, "0987": 38, "0989": 18, "09906073": 25, "0991": 61, "09918538": 25, "099335": 3, "0994": 36, "0_model": 361, "0_residu": 361, "1": [2, 3, 4, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 31, 32, 33, 36, 37, 38, 39, 42, 45, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 100, 104, 109, 110, 111, 115, 117, 125, 156, 172, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 229, 231, 264, 265, 266, 267, 268, 269, 275, 277, 278, 281, 282, 290, 291, 292, 293, 298, 314, 318, 319, 321, 322, 324, 326, 327, 347], "10": [2, 3, 5, 9, 10, 17, 18, 21, 22, 23, 24, 25, 26, 27, 33, 36, 37, 38, 39, 40, 42, 45, 50, 51, 56, 57, 60, 61, 62, 64, 65, 68, 69, 72, 73, 74, 76, 79, 100, 104, 106, 109, 112, 125, 172, 202, 203, 204, 205, 206, 207, 208, 212, 216, 218, 219, 220, 221, 222, 223, 224, 227, 230, 264, 265, 268, 269, 275, 276, 277, 278, 281, 282, 291, 292, 293, 313, 315, 317, 318, 319, 323, 324, 328, 329, 330, 331, 332, 337, 338, 339, 341, 342, 343, 348, 349, 350, 351, 352, 353, 356, 361], "100": [9, 10, 16, 17, 18, 23, 24, 25, 26, 36, 38, 39, 42, 45, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 110, 117, 216, 217, 218, 239, 264, 265, 266, 267, 292, 322, 328, 330, 332, 334, 337, 338, 339, 341, 342, 347, 348, 349, 350, 351, 352, 353, 356], "1000": [3, 6, 7, 10, 14, 23, 24, 37, 38, 45, 72, 114, 156, 204, 205, 206, 207, 208, 220, 221, 222, 223, 224, 264, 265, 277, 278, 281, 282, 324, 356], "10000": [3, 5, 33, 45, 264, 265, 318], "100000": 2, "1000000": [3, 5, 56, 353], "10004": 6, "1001": [21, 39], "10020": 6, "10027": 6, "1003": 33, "10034": 6, "10039": 6, "1004": 73, "10054": 6, "10063": 6, "10074": 6, "10080": 6, "10087": 6, "10091232": 25, "100e": 10, "101": 60, "1010": 61, "1011": 33, "1013": 6, "10134": 6, "1015": 33, "1016": 33, "10160": 6, "1017": 8, "1018": 6, "10181518e": 22, "1019": 33, "10202": 6, "10218": 6, "1024": 61, "1027": 38, "10276521e": 22, "10279": 6, "10284346": 25, "10287": 6, "10294": 6, "10295": 6, "103": [6, 9], "10310": 6, "10323": 6, "10331": 6, "10344": 6, "10369": 6, "10388": 6, "1039": 18, "104": [56, 60, 64], "10444": 6, "10448": 6, "1045": 10, "10452": 6, "10459": 6, "10469937": 17, "10471": 6, "10481": 6, "10487": 6, "1049": 33, "105": 61, "1051": 73, "105361": 5, "1054": 51, "10544": 6, "10549": 6, "105570": 343, "10561": 6, "10564": 6, "1057": 6, "10571": 6, "10572": 6, "10585": 3, "1059": [38, 326], "10594": 6, "106133": 3, "10623": 6, "10639": 6, "10659": 6, "1066": 61, "10666": 6, "10667": 6, "10674": 6, "10685": 6, "10698844e": 22, "1071": 17, "10711": 6, "1072": [38, 61], "10722": 6, "10723": 6, "1073": 61, "10743": [6, 9], "10746592627647636": 39, "1075": 39, "10759": 6, "1076": 61, "10769": 6, "1077": 61, "1078": [6, 38, 61], "1079": 61, "108": 64, "1081": 61, "10818": 6, "10820": 6, "10829": 6, "10849": 6, "10855": 6, "1086": [6, 326], "10861737": 25, "10869": 6, "1087": 73, "10870": 6, "10875": 6, "10876": 6, "10880": 6, "1090": 38, "1092": 38, "10941": 6, "10947": 6, "10954": 6, "10977": 6, "1098": 61, "10989": 6, "1099": [8, 38, 61], "11": [2, 3, 5, 9, 17, 18, 23, 24, 25, 36, 37, 38, 42, 56, 57, 60, 61, 64, 65, 66, 72, 73, 76, 100, 329, 331], "110": [10, 61], "1100": [21, 61], "110027e": 329, "11003": 6, "11008": 6, "1101": 61, "11018": 6, "11022302e": 22, "1103": [6, 61], "1104": 61, "1105": 38, "11058": 6, "1107": 57, "11086": 6, "1109": [319, 323], "110928": 42, "1110": [9, 61], "11109": 6, "11113": 6, "111206": 9, "11126": 6, "11153": 6, "11159": 6, "1117": 38, "11185": 6, "11192": 6, "112": [9, 61], "11229": 6, "1123": 61, "1124": 6, "11243": 6, "1125": [56, 60, 61, 64, 72], "11257": 6, "1129": 36, "113": [18, 51], "11304": 6, "1131": 61, "1132": 61, "11339": 6, "1134": 64, "11356": 6, "113943": [2, 5], "1139433": 2, "11398": 6, "11399": 6, "1141": 61, "11413": 6, "11415": 6, "1143": 6, "11445087e": 21, "1145": [6, 22], "11454": 6, "1146": 61, "11469": 6, "1147": 38, "11473": 6, "11476": 6, "1149": 61, "11493": 6, "11499": 6, "115": 9, "11510": 6, "11541": 6, "11559": 6, "1156": 23, "11563613": 25, "1157": 38, "11570": 6, "11573": 6, "11588": 6, "11589": 6, "116": [115, 321], "1160": 9, "1161": 61, "1162": 61, "1163": 18, "1164": [17, 61], "11644": 6, "1165": 61, "1166": [9, 61], "11673": 6, "1168": 9, "11689": 6, "11690": 6, "117": 51, "1170": 61, "11704": 6, "1171": [9, 61], "1172": 6, "11725": 6, "1173": [38, 61], "1175": [9, 61], "11754": 6, "11765": 6, "11769": 6, "1178": 61, "1181": 57, "1182": [6, 38, 61], "11835": 6, "118367": 3, "1186": 61, "11862": 6, "1187": 6, "11879": 6, "1188": [60, 64, 72], "11885": 6, "11888": 3, "1189": 326, "119": [9, 10], "1191": [60, 72], "1193": 61, "1194": 6, "11944": 6, "1195": 6, "11952": 6, "1196": 36, "11962": 6, "1196592": 8, "1197": 56, "11972": 6, "1199": [33, 61], "11991488": 8, "11997": 6, "12": [2, 5, 6, 8, 9, 10, 17, 18, 23, 24, 25, 36, 37, 38, 42, 45, 56, 57, 60, 61, 64, 65, 72, 73, 76, 100, 329], "120": [10, 51, 61, 72, 74], "1200": 72, "120000": 2, "12004": 6, "1201": 61, "1202": 322, "12023": 6, "12043": 6, "12047": 6, "1205": 38, "12051": 6, "12052": 6, "12056": 6, "12060": 6, "1207": 61, "12071": 6, "12080": 6, "12087": 6, "1209": 73, "121": 61, "12105": 6, "12119": 6, "1212": 61, "12122": 6, "1213": 73, "12135": 6, "1214": 60, "12141": 6, "122": 61, "1220": 61, "12200": 6, "12214548": 8, "1222": 23, "1223": 38, "12237": 6, "12244993": 25, "1225": 8, "12252": 6, "12260411": 25, "1229": 61, "123": 50, "12302": 6, "123078": 42, "1232": 326, "12325": 6, "12330": 6, "12338": 6, "1234": [29, 30], "12390": 6, "12392": 6, "124": [6, 10, 50], "12409": 6, "1241": 61, "1242532": 25, "12434": 6, "1245": 8, "1246": 38, "12467": 6, "12470": 6, "1249": 36, "12490": 6, "12493": 6, "1250": 60, "125000": 25, "1252": 57, "125214": 9, "1255": 61, "12559": 6, "12567": 6, "1257": 24, "1258": 61, "12587": 6, "12592": 6, "126": [56, 60], "12601156e": 21, "12622": 6, "12624014": 25, "1263": [57, 61], "12634": 9, "12640": 6, "12658": 6, "126704": 42, "12674": 6, "1268": 61, "12692": 6, "12693": 6, "127": 6, "12716": 6, "12718679": 25, "12735": 6, "12754": 6, "12759": 6, "1276295": 25, "12788": 6, "128": 64, "1280": 61, "12805": 6, "12806": 6, "12815": 6, "12817": 6, "1282": [57, 60, 61], "12846": 6, "1286": 18, "12863": 6, "1287": [61, 73], "12870": 6, "12881": 6, "12899": 6, "129": 73, "1290": [6, 38, 61], "12914": 6, "12920": 6, "12925": 6, "12929": 6, "129473": 8, "12971": 6, "129740": 5, "129745": 3, "1298": 6, "12982": 6, "12983": 6, "12989": 6, "13": [5, 8, 9, 10, 17, 18, 23, 24, 25, 36, 37, 38, 42, 56, 57, 60, 61, 64, 72, 73, 319, 329], "1301": 73, "13013": 6, "13021": 6, "1303": [6, 61], "13032": 6, "130323": 42, "13036": 6, "13044491": 18, "1305": [50, 61], "13050": 6, "13055": 6, "13068": 6, "130687": 42, "1307": 23, "13071": 6, "13073": 6, "13080": 6, "1309": 61, "130937": 42, "130939": 42, "130998": 42, "131": [51, 64], "1310": 6, "131044": 42, "1311": [19, 25], "131115": 42, "13112096": 25, "1313": 61, "13132": 6, "1314": 61, "1317": 36, "13199": 6, "132": 56, "13214": 6, "1322": 73, "13221": 6, "132260": [2, 5], "1325": 38, "1326": [23, 61], "13269": 6, "1327": 57, "13273": 6, "1328": 6, "13281": 6, "13283": 6, "13296": 6, "133016": 42, "13323": 6, "13324": 6, "133381": 42, "1334": [6, 25], "1336": 21, "1340": 38, "13407": 6, "13425": 6, "1343": [8, 9, 10, 60], "13436": 6, "13451": 6, "13464": 6, "13465": 6, "13471": 6, "13481": 6, "1349": 61, "13496": 6, "13497": 6, "135": [60, 61], "13504": 6, "1351": 19, "1352": 38, "135229": 15, "13531": 6, "13538": 6, "1354": [45, 61], "13541995570654827": 45, "13559": 6, "13564104": 25, "1358": 6, "13586": 6, "13587": 6, "136": [], "13606": 6, "13619": 6, "1362": 6, "13638": 6, "13658": 6, "13659": 3, "13663": 6, "13664": 6, "13670": 6, "13673": 6, "13682": 6, "13694044": 8, "137": [9, 56], "13709": 6, "137371": 42, "13739": 6, "1374": 50, "13745": 6, "1375133": 8, "13759": 6, "13769586": 8, "13771": 6, "13774": 6, "13780": 6, "13782": 6, "1379": [38, 50], "13792": 6, "13796": 6, "138": [50, 56, 61], "13805": 6, "1381": 38, "13810": 6, "13818": 6, "13827": 6, "1383343": 2, "13835849": 25, "1384": 50, "138412": 9, "13850": 6, "13863": 6, "13875": 6, "13877": 6, "13889": 318, "138957": 15, "1389656": 2, "139": 56, "1391": 73, "1392": 6, "13931": 6, "13934": 6, "1394": 9, "13940": 6, "13954": 6, "13965": 6, "139691e": 329, "13973": 6, "13975": 60, "13976": 6, "1398": 42, "1399": [57, 61], "14": [2, 3, 5, 8, 9, 10, 17, 18, 23, 24, 25, 36, 37, 38, 42, 56, 57, 60, 61, 64, 72, 73, 76, 329], "140": [45, 56], "140000": [3, 5], "14030": 3, "14035251191539191": 45, "1404": 45, "14045": 6, "14055": 6, "14069": 6, "14071": 6, "140752": 42, "14077": 6, "14088": 6, "141": [56, 79, 81], "14107": 6, "14125": 6, "14139967": 25, "14149": 6, "14162": 6, "14183": 6, "142": [6, 56], "14232": 6, "14237": 6, "14243": 6, "14257": 6, "14260": 6, "1427": 6, "14280": 6, "142926": [13, 42], "143": [4, 11], "14303": 6, "14317": 42, "14333": 6, "14357": 6, "1436": 73, "1437": [38, 61], "1438": [55, 61], "1442": 9, "14427": 6, "14429": 6, "1443": [61, 319], "14430": 6, "14454": 6, "14464": 6, "14481": 6, "14499": 6, "145": [50, 61], "145000": 25, "14514": 6, "14519": 6, "14520": 6, "1454": 9, "1456": 9, "14562": 6, "14566": 6, "1457": [9, 50], "1458": 9, "14599": 6, "146": [8, 10], "1460": 6, "14615": 6, "14617": 6, "14645936": 8, "14664": 6, "1468": 57, "1469": 6, "14695": 6, "146964": [13, 42], "146996": [2, 5], "147": 8, "1471": 319, "14716": 6, "14724": 6, "14726": 6, "1474": 61, "14747": 6, "14756": 6, "14772": 6, "1478": 61, "14787": 6, "14794": 6, "148": 8, "1480": 6, "14818567": 25, "14829": 6, "14833": 6, "14855": 6, "14858": 6, "14873": 6, "14877": 6, "14892": 6, "149": 8, "1490": 61, "14901": 6, "1491": 60, "14919": 6, "1493": 61, "14935775": 25, "1495": 6, "1496": 37, "1497": 61, "14972": 6, "14973": 6, "15": [5, 8, 9, 13, 14, 17, 18, 22, 23, 24, 25, 36, 37, 38, 42, 45, 56, 60, 61, 64, 72, 73, 117, 327, 329, 334, 340], "150": [8, 51], "150000": [2, 5], "1501": 61, "15015": 6, "15028": 6, "15038": 6, "1504": 61, "15050": 6, "1507": 61, "15075029": 25, "1508": [57, 61], "15083517": 8, "15091": 6, "15094": 6, "151": 8, "15100": 6, "151090": 3, "1511": 73, "15121": 6, "1514": 61, "1515": 10, "1517": 61, "15192": 6, "15198": 6, "152": 8, "15203": 6, "1521": 50, "15210": 6, "15220": 6, "15228": 6, "15231": 6, "15244": 6, "15257": 6, "15260": 9, "15280": 6, "15282": 6, "15297": 6, "153": 8, "1531": 61, "1532": 61, "15322": 6, "15333": 6, "15366": 6, "15388": 6, "154": [6, 8], "15417": 6, "1543": 6, "15462": 6, "15470": 6, "15472": 6, "15479": 6, "155": [8, 64], "155000": 25, "15501": 6, "1551": [33, 73], "15510": 6, "15517": 6, "15524": 6, "155303": 42, "15532": 6, "15538": 6, "15545": 6, "1555": 61, "15556": 60, "155640": [2, 5], "15565": 6, "15579": 6, "1558": 64, "15585": 6, "15587": 6, "156": [6, 8], "15615": 6, "1562": 31, "156307": [2, 5], "15647769": 25, "1565": 57, "15668": 6, "15670": 6, "156719": 5, "15673": 6, "1569": 61, "15696866": 8, "157": [33, 34], "1571": 76, "15725": 6, "15729": 6, "1573": 61, "15738": 6, "15745": 6, "1576": 61, "15767": 6, "15772": 6, "15781": 6, "15793": 6, "15796": 6, "158": 8, "1581": 61, "15812": 6, "1582": 61, "15827": 6, "1583": [6, 61], "1585": 61, "15857": 60, "1586": [6, 61], "158681e": 329, "1587": [57, 61], "15873": 6, "1588": 60, "15888": 6, "1589": 65, "15894": 6, "159": 6, "15904": 6, "15908": 6, "15910": 6, "15917467": 8, "15930": 6, "15945": 6, "1595": 33, "15953": 6, "15964": 3, "15966": 6, "1597": 61, "15984": 6, "15991107": 25, "15998": 6, "16": [2, 3, 5, 6, 8, 9, 10, 17, 18, 22, 23, 24, 25, 37, 38, 42, 56, 57, 60, 61, 64, 72, 73, 329], "1603": [6, 61], "16042": 6, "16085": 6, "161": [8, 18], "1612": 57, "16144": 6, "16158": 6, "16160": 6, "16196": 6, "16199": 6, "162": [8, 32, 34], "16220": 6, "1623": 61, "1624": 6, "1627": 39, "16272": 6, "16275": 6, "16285": 6, "16294": 6, "16313": 6, "1632": [57, 61], "16325": 6, "16330575e": 21, "1635372": 25, "16367": 6, "1638": 61, "1640": 73, "1641": [319, 323], "1642": [8, 9, 10], "16425": 6, "1645": [6, 8, 39], "16452": 6, "1646": 61, "1647": 6, "16474": 6, "16478": 6, "16491": 6, "165": 8, "1650": [36, 38, 319, 323], "16501650e": 22, "16508": 6, "16518": 6, "16524": 6, "16532": 6, "16556": 6, "1658": [36, 54, 61], "16584": 6, "166": [10, 61], "16600": 6, "16621": 6, "166214e": 329, "16633565": 8, "16642": 6, "16665": 6, "1667": 10, "167": 8, "167233": 3, "1672709": 17, "167295": 5, "16733": 6, "1674": 36, "167484": 3, "167502": 5, "16767": 6, "16770": 6, "168": 76, "1680": [39, 61], "16819": 6, "1684": [57, 61], "16842": 6, "1686": 36, "16890": 6, "16892": 6, "169": 8, "1690": 37, "16901": 6, "16902": 6, "16904": 6, "16906": 6, "16941222": 8, "16948": 6, "16960": 6, "16997403": 25, "17": [2, 3, 5, 9, 10, 17, 18, 22, 23, 24, 25, 37, 38, 56, 60, 61, 64, 72, 73, 315, 319, 323, 328, 329, 330, 331, 332, 333, 334], "170": 8, "1700": 61, "1702": 61, "17033": 6, "17035": 6, "1704": 36, "17041": 8, "17042": 8, "17043": 8, "17044": 6, "17085": 6, "17105": 6, "1710586": 18, "17125": 6, "17127": 6, "17162": 6, "17167": 6, "172": 8, "17204": 6, "17205": 8, "17211": 6, "17226": 6, "17247": 6, "1725": 61, "1727": [6, 61], "17273": 8, "17285": 6, "17287": 6, "173": [8, 10], "17305": 6, "1732": [61, 64], "17320": [6, 8], "17339": 6, "17347": 6, "1735": 36, "17353": 6, "1736": 9, "17367": 6, "1737": [9, 61], "17374": [8, 9, 10], "17375": [8, 9, 10], "17376": [8, 9, 10], "17377": [8, 9, 10], "17378": [8, 9, 10], "17379": [6, 9, 10], "17383003e": 22, "174": 8, "1741": 8, "1742": [39, 61, 64], "1743": 9, "1746": 38, "174612": [2, 5], "1747": 61, "17478107": 18, "175": 8, "1752667": 25, "1755": [57, 61], "1758": 36, "1759": 6, "176": [8, 51], "17617815": 25, "17623590e": 25, "176381": [2, 3, 5], "1765252": 25, "1768": 73, "177": 18, "1771": 61, "1772": 73, "177261": 9, "177892": 9, "178": 8, "1780": 61, "1781": 6, "17826003": 8, "1785": [6, 61], "179": [8, 33], "17904737": 25, "1793": 36, "1794": 36, "1795": [36, 54], "17becf": 45, "18": [5, 6, 9, 10, 17, 18, 21, 23, 24, 25, 27, 37, 38, 42, 56, 57, 60, 61, 64, 72, 73, 329, 330, 361], "180": [8, 76], "180000": 5, "1802": [327, 334], "18033722": 18, "1805": [33, 37], "1811": 61, "18112": 3, "1814": 61, "181558": [2, 5], "1818": 10, "1823": 38, "18238135": 25, "183": 6, "1835": 6, "184": 8, "1843": 36, "1845": 6, "18458366509258792": 45, "1846": 45, "1847": 6, "18481848e": 22, "185": 8, "185065": 42, "185089": [2, 5], "1854": 6, "18554294": 25, "1858": 23, "186": [51, 76], "1861": 6, "1868": 23, "187": [8, 60, 73], "18726286": 18, "1876": 61, "187721e": 329, "188": 8, "188366": 2, "18843615e": 25, "1885": 37, "1887635938666557": 45, "1888": 45, "1889": 6, "189": [9, 33], "19": [5, 8, 9, 10, 17, 18, 19, 23, 24, 25, 27, 37, 38, 42, 56, 57, 60, 61, 64, 72, 73, 76, 319, 329, 361], "19020921": 8, "190408": 42, "191": [8, 51, 60], "19129001": 25, "19129730e": 25, "1915": 6, "1916": 6, "1917": 39, "191731": [2, 5], "19179": 9, "1918": 61, "192": 8, "1920": 36, "1921": 36, "1926": [57, 61], "193": 8, "1933": 6, "1939": 36, "194": 8, "1940": 10, "194163": 42, "1948": 50, "195": 76, "19509665e": 25, "1957": 64, "1959": 36, "196": 33, "1966": 61, "196632": 3, "1966921": 8, "1967": 51, "19673312": 8, "1970": [8, 10], "19708871": 8, "1972": 6, "197313": 9, "19771062": 8, "198": 33, "1980e": 24, "1981": 73, "1985": 6, "1986": 61, "199": [56, 65, 66], "1990": [57, 61], "1995": [9, 33, 57, 61], "1996": [9, 33], "1997": [9, 33, 39], "1998": [9, 33, 61], "1999": [9, 33], "1_extmodel": 361, "1_perform": 361, "1d": [56, 57, 64, 65, 72, 73, 76, 220, 221, 222, 223, 224, 226, 229, 238, 239, 260, 283, 292, 316, 318, 324, 328, 330, 332, 335, 337], "1e": [124, 264, 265, 281, 282, 343, 351], "1f77b4": 45, "1f968b": 45, "2": [2, 3, 4, 5, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 80, 100, 117, 123, 124, 164, 172, 202, 203, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 229, 234, 264, 265, 266, 267, 268, 275, 277, 278, 281, 282, 317, 318, 319, 322, 323, 326, 327, 347, 357], "20": [3, 5, 8, 9, 10, 17, 18, 23, 24, 25, 26, 33, 36, 37, 38, 39, 42, 45, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 213, 226, 229, 264, 265, 266, 267, 268, 269, 281, 282, 322, 329, 334, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 356, 358], "200": [8, 11, 36, 80, 238, 277, 278, 292], "2000": [7, 9, 33, 45, 50, 51, 79, 215, 216, 319, 322, 328, 329, 330, 332, 349, 350, 352], "20000": [2, 5], "200000": [5, 23, 24, 25, 26, 36, 38, 39, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "2001": [319, 326, 333], "2002": 319, "2003": [319, 323], "2005": [18, 313, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "200671": 5, "2007": [6, 61], "2008": [319, 323, 326, 329], "2009": [115, 321], "200e": 10, "201": [6, 18, 33, 76], "2011": 33, "2012": [319, 322], "20135065": 25, "2015": 330, "2016": [326, 327], "2017": 327, "2018": [327, 334], "2019": 322, "202": 76, "2020": [322, 326], "2021": [115, 319, 321], "2022": [115, 321], "20231214e": 21, "2024": [33, 80], "2025": [2, 42], "2029": 6, "203": [8, 33], "2030": 61, "2031": 61, "2036": 61, "203604": [2, 5], "2037": [55, 57], "203739e": 329, "20379622": 8, "204": [50, 64, 72, 76], "2040": 6, "2043": 61, "2045": 60, "20452690e": 25, "2046": 51, "205": [8, 10, 64, 72, 76], "2050": 61, "2053": 64, "2059": 61, "206": [8, 64, 72, 76], "2060": 50, "20604": 3, "2062": 73, "2068": 73, "207": [50, 64, 72, 76], "2071": 6, "20752182": 8, "2076": [57, 61], "207632": 5, "208": [64, 72, 76], "2080": 36, "2082": 23, "2084": 6, "209": [8, 33, 64, 72], "20a386": 45, "21": [3, 8, 9, 10, 17, 18, 24, 25, 38, 56, 57, 61, 64, 72, 73, 76, 100, 329], "210": 42, "2100": [56, 64], "21010": 3, "2102": 57, "2108": [6, 50], "2109": 22, "211": 8, "2111": 18, "2112": 61, "2114": 61, "2118": 51, "212": 6, "2121": [8, 10], "213": 8, "2135": 17, "214": 8, "2148": 31, "2149762": 25, "215": [18, 27, 322, 361], "2154": 60, "21548": 3, "2158": 6, "216": 50, "216167": 42, "216430": [2, 5], "2165": 9, "2169": 23, "217750": 3, "218": 8, "2181": [9, 61], "2183": 6, "2184": 9, "21843381": 8, "2188": 9, "219": 8, "219010": 3, "219618": 42, "21968930e": 25, "2197": 61, "2198": 61, "22": [3, 8, 9, 10, 11, 17, 18, 24, 25, 38, 56, 61, 64, 72, 73, 329], "220": 8, "2200": 6, "220000": [2, 5], "220098": 3, "2201": [6, 319], "2202": 37, "22026": 3, "2209": 61, "221": [6, 8], "221177": 3, "2215": 61, "222": 8, "2223": 6, "222458": 42, "223": [6, 8], "22346": 3, "22353982": 8, "2237": 61, "2239": 10, "2240": 37, "2241": 6, "224594e": 329, "224693": 9, "225": 8, "2250": 72, "2259397": 8, "226342": [2, 5], "226409": 3, "2268": 73, "227": [8, 33, 51], "22709317": 8, "22723": 3, "2273724": 2, "2277": 61, "2279": 60, "227978": 9, "2295": 61, "22nd": 327, "22p02": [], "23": [5, 8, 9, 10, 17, 18, 24, 38, 42, 56, 57, 60, 61, 64, 72, 73, 319, 329], "230": 322, "230452": 3, "2308": 61, "231": [8, 64, 66], "232": 8, "2320": 22, "232285": 3, "2324": 50, "2325": 73, "23254459": 25, "2328": 61, "2329": 57, "233": 50, "2330": 6, "2332": 37, "23364": 3, "23424387": 8, "235": 8, "2351": [57, 61], "23560828": 8, "236": 8, "2361": 6, "2362": 73, "23693366": 25, "23699422e": 21, "237": [9, 51], "237041": [2, 5], "2371": 6, "237566": 3, "238": 8, "2385": 61, "23881816": 8, "23887668": 8, "2389": 50, "238a8d": 45, "239": 8, "2393": 61, "239484": 5, "2395": 61, "24": [2, 3, 5, 8, 9, 10, 17, 18, 24, 38, 42, 56, 61, 64, 72, 319, 323, 329, 330], "240": [8, 51], "2400": 6, "24000": 42, "240000": [3, 5], "2401": 73, "2405e": 24, "24081257": 25, "241": 8, "2414": 76, "242": 51, "2424": 8, "2429": 6, "243": 8, "2434": [57, 61], "24355615": 25, "244024": 3, "245": 73, "2450": 6, "2453e": 24, "245429": 42, "2457": 6, "246499": 3, "2467": 61, "2468": 61, "2469": 61, "247": [73, 74], "2474": 6, "2476": [6, 61], "248": [8, 61, 76], "24835294": 25, "2491": 6, "24923209": 8, "2493": 61, "25": [3, 5, 9, 10, 17, 18, 24, 38, 39, 56, 60, 61, 64, 72, 124, 172, 329, 347], "250": [9, 11], "2500": 56, "25000": 25, "250000": 5, "2502": 37, "250372": 3, "2513": 24, "251380": 3, "2517": 6, "252": 6, "2525": 6, "2528": 60, "253": 60, "2531": 51, "2535": 6, "25353302": 8, "2537": [8, 10], "255": 8, "2550": [], "255514": [2, 3, 5], "2558": 37, "256": 61, "256477": [2, 5], "256837e": 329, "2569": [6, 61], "2572": [], "25754": 9, "2576": [8, 9, 10, 61], "2578": 61, "257811": 3, "25827247": 17, "2584": 51, "2585": 6, "25864505": 8, "259": 8, "2592": 61, "25th": 317, "26": [2, 8, 9, 10, 17, 18, 24, 38, 40, 60, 61, 64, 72, 100, 329], "2600": 6, "260000": 5, "261": 6, "2617427": 17, "2618": 6, "2619": 6, "262": [21, 27, 361], "262214": [2, 5], "26237496": 8, "2624": 37, "2631": 51, "2636": 50, "2639": 6, "264": 8, "2641": 6, "264345": [2, 5], "2646": 61, "265": 8, "2656": 51, "266068e": 329, "26611415e": 25, "2664": 37, "266649": 9, "266958": 5, "267": [8, 9, 50, 57, 61, 73], "2673": 61, "2674": 23, "2685": 60, "26863568": 25, "2688": 23, "269": [8, 18], "2692": [57, 61], "27": [2, 17, 18, 24, 27, 38, 42, 60, 61, 64, 72, 329, 361], "270": 64, "2702": [6, 73], "2706": [57, 61], "27079123": 25, "2709": 6, "271": 8, "271688e": 329, "2723": 31, "2727": [8, 9, 10], "273": 8, "2734": 73, "27368400e": 25, "2739": 54, "2742": 6, "275": 6, "27521925e": 25, "2755": [39, 61], "2759": 6, "276": [61, 322], "2760": 45, "27604510845035524": 45, "276345": [2, 5], "277": [51, 61], "2773644": 8, "278": [51, 52], "2783": 6, "2786": 26, "2789": 51, "279": 61, "279756": 9, "279964": 3, "28": [3, 5, 17, 18, 24, 38, 56, 61, 64, 72, 100, 329], "280": [8, 17, 51, 57, 61], "2800": 23, "2805": 6, "2808": 61, "2809": [56, 64], "281": 8, "2813": 6, "28130404": 8, "281760": [2, 5], "282": [10, 61], "282101": [2, 5], "2826": 50, "283": [8, 57, 61, 73], "2834": 17, "2839": 6, "284": [9, 57, 61, 73], "2841": 6, "2842": 17, "2848818": 2, "284882": [2, 5], "285": [9, 57, 61, 73], "285000": 25, "285143": [2, 5], "286": 61, "2861982": 25, "286861": [2, 5], "2869": 6, "287": [8, 57, 61], "2870": 26, "287682": 5, "2878": 73, "2879": [8, 9, 10], "287d8e": 45, "288": 8, "2880562": 25, "28825422": 8, "2883": 51, "2884": 23, "2889": [51, 72], "289": [61, 64], "2890": 23, "289794": 5, "289872e": 329, "29": [5, 10, 17, 18, 24, 38, 42, 61, 64, 65, 72, 319, 326, 329], "290": [9, 57, 73], "2903": [57, 61], "291": [9, 57, 61, 73], "2919": 6, "292": [6, 8], "2926": 57, "2936": 60, "29381192": 17, "294": [9, 57, 61, 73], "29455895": 8, "2948": [6, 50], "295": [6, 57, 61, 73], "2955": 51, "2956": 6, "296": [8, 57, 61, 73], "29613823": 8, "297": 61, "2971": 61, "2972": 6, "297246": 25, "2976": 6, "2977": 61, "298": 61, "2980": 6, "298096": 9, "2984": 6, "2985": [10, 61], "2995": [10, 51], "2996": 10, "2997": 10, "2998": 10, "299878": 42, "2999": 10, "29991030e": 25, "29995": [2, 5], "29996": [2, 5], "29997": [2, 5], "29998": [2, 5], "29998244": 8, "29999": [2, 5], "29af7f": 45, "2_overfit": 361, "2ca02c": 45, "2d": [45, 57, 64, 65, 114, 220, 221, 222, 223, 224, 226, 229, 238, 239, 260, 283, 316, 319, 328, 332, 335, 337], "2d718e": 45, "3": [2, 3, 5, 7, 8, 9, 10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 33, 36, 37, 38, 39, 42, 45, 47, 50, 51, 56, 57, 60, 61, 64, 65, 72, 73, 76, 100, 117, 202, 212, 216, 218, 264, 265, 268, 269, 275, 276, 315, 320, 328, 329, 330, 334, 338, 341, 343, 347, 350, 351, 352], "30": [2, 5, 8, 9, 10, 17, 18, 24, 33, 38, 42, 45, 51, 52, 56, 57, 60, 61, 64, 72, 73, 76, 243, 313, 327, 329, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "300": 45, "3000": [10, 45, 56, 60], "30000": [2, 3, 5], "30000000000000004": 37, "3002": 51, "300e": 10, "301": [8, 61], "301052": [2, 5], "301247": [2, 5], "3012471": 2, "30135555": 25, "301387": 5, "3019": 6, "302": 61, "302009": 42, "302398e": 329, "3025": 6, "3028": 6, "302969": 3, "303": 50, "3030": [6, 8], "303196": 3, "3035": 6, "3040": 50, "30473822": 8, "30498793": 8, "305": 61, "305000": 25, "305351": [2, 5], "3054e": 18, "3055": 6, "3056": 64, "3058": 76, "30592314": 25, "306": [2, 8, 11, 61], "3062105": 2, "306258": 9, "3074": 61, "3075": 6, "3078": [6, 31], "3079": 60, "3079e": 18, "308": [6, 8], "3080": 50, "30810585": 8, "308986": 5, "309": [60, 61], "30938998e": 21, "3098": 17, "31": [5, 17, 18, 23, 24, 25, 26, 36, 38, 39, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 329], "310554": 9, "310739e": 329, "3120": 6, "31249470e": 25, "3125": 6, "3126": 6, "31292663": 8, "313": 8, "3131": 6, "313509": [2, 5], "314": 322, "3148": 6, "315": 60, "3153": 6, "3158": 6, "3161": 6, "3171": 6, "317854": [2, 5], "3179": 60, "318": 8, "3181": 6, "3182": 10, "318827": [2, 5], "319710": [2, 5], "32": [9, 10, 17, 18, 24, 38, 42, 56, 60, 61, 64, 326, 329, 333], "320": [8, 15], "320000": 5, "3202": 23, "3204": 61, "320997": [2, 5], "32104384": 8, "3211": 17, "322": 8, "322426": 3, "322667": 3, "3234": [57, 61], "32395616": 25, "324": 50, "3240": 6, "324067": 9, "3245": 72, "3257": [6, 61], "326357": 3, "3265": 6, "327": [45, 48, 64], "32737983": 8, "3277": 6, "3279": [57, 61], "3284": 8, "329": [8, 61], "3294": 51, "33": [17, 18, 24, 38, 39, 42, 47, 60, 61, 64, 329], "3304": 73, "3311": [57, 61], "3313": [23, 61], "3329": 50, "333": 45, "3333": 10, "3335": 6, "3336": 6, "3341": 6, "33446600e": 25, "33472527": 25, "335": 6, "3358": 61, "3359": 6, "336": 50, "33638d": 45, "33722543e": 21, "3375": 6, "337599": 3, "33798283": 17, "3387": 51, "338867": [13, 42], "33973635": 25, "34": [2, 3, 5, 10, 17, 18, 24, 38, 42, 61, 64, 72, 329], "3405": 61, "341": 51, "3411": 6, "341274": 9, "3419": 61, "342": 61, "3423": 51, "342442": [2, 5], "3426": 61, "3430": 37, "3432": 6, "3439": 6, "34497136": 8, "345": 8, "3453": 51, "3456": 73, "346": 8, "346619": [13, 42], "346930": 9, "346985": 9, "347": 8, "3476": 318, "3479": 6, "348": 8, "3480": [6, 50], "3485": 10, "34879130e": 25, "3488": [6, 23, 50], "3489307": 25, "349": [8, 51], "3492": 6, "3494": 6, "349909": 3, "35": [2, 3, 5, 17, 18, 24, 25, 38, 45, 56, 60, 61, 64, 329], "350": [51, 61], "3502": 61, "3505": 6, "352": 8, "3521": [56, 60, 64, 72], "353": 50, "35396525e": 25, "354": [], "3542": 61, "354665e": 329, "355": 8, "355216e": 329, "355448": 9, "355489": 42, "356": 17, "3563": 21, "357": 8, "3572": 6, "3578e": 23, "358": 8, "3582e": 23, "358358": 5, "3584": 61, "3585": 6, "358546": 42, "3586": 6, "35866153": 18, "35886571": 8, "3590": 6, "35973597e": 22, "36": [9, 10, 17, 18, 24, 38, 39, 56, 61, 64, 322, 329], "360": [8, 13], "3600": 6, "360000": 5, "3601": 6, "361": 8, "36111761": 8, "36175679": 8, "362": [8, 60, 62], "3629": 6, "363": [8, 51], "3636": 10, "3638": 61, "3639": 61, "363952": 42, "364": [8, 60], "36436691e": 21, "365": 8, "36562947": 8, "3658": 61, "366": 8, "3667": 61, "3669": 61, "366936": 3, "367": 8, "367038e": 329, "36711332": 8, "367725": 5, "368": 8, "368296": 9, "369609": 9, "3697": 38, "37": [2, 5, 10, 17, 18, 24, 38, 61, 64, 329], "3701": 6, "371": [38, 40], "37109827e": 21, "3713": 50, "3719": 6, "372": 8, "37222561": 8, "3725": 6, "3732": 73, "3750": 72, "376": 60, "3766": 18, "3769": 23, "377": 3, "3775": 322, "378": 17, "3788": 50, "3789": 51, "379": 6, "3797": 33, "38": [2, 9, 10, 17, 18, 20, 24, 27, 38, 61, 64, 72, 329, 361], "380": 6, "3807": 6, "3819": 50, "382": 10, "382035e": 329, "3822": [6, 33], "38260215e": 25, "383": [8, 61], "3850": 57, "38555239e": 21, "3858271": 18, "385873": 9, "38635254": 8, "3873": 51, "388": 8, "38810125e": 25, "38886216": 25, "389": [315, 328, 329, 330, 331, 332, 333, 334], "3890": 37, "3893": 23, "3896": 38, "3899": 6, "39": [2, 5, 9, 17, 18, 23, 24, 25, 38, 61, 64, 73, 76, 100, 329], "3900": [57, 61], "390088": 25, "39035252": 8, "39070830e": 25, "3908": 6, "390801": 9, "391002": 9, "3914": 6, "3919": 6, "3921": 6, "39269155": 18, "39270772e": 21, "393": 8, "3939": 10, "3940": 61, "3942": 50, "39428496": 8, "395": [8, 50], "3951375": 17, "39558c": 45, "3956": [60, 64, 72], "3959": 6, "396": 17, "3965": 6, "3967": 50, "397": 50, "3970": 6, "3980": 6, "39814557e": 21, "39820050e": 25, "399": 8, "3995": 72, "39957": 9, "3996": 60, "399835": 9, "3_hpo": 361, "3_reliabl": 361, "3d": [114, 335], "3dbc74": 45, "4": [2, 3, 5, 8, 9, 10, 17, 18, 21, 22, 23, 24, 25, 33, 36, 37, 38, 39, 42, 45, 47, 50, 51, 56, 57, 60, 61, 64, 65, 72, 73, 76, 100, 264, 265, 315, 326, 328, 329, 330, 341, 343, 347, 348, 350, 351, 352], "40": [9, 10, 17, 18, 24, 33, 38, 42, 45, 50, 52, 56, 57, 60, 64, 65, 72, 73, 76, 281, 282, 315, 329, 343, 352], "400": [45, 51, 352], "4000": 60, "40019150e": 25, "4002": 57, "40051387": 8, "4007": 51, "400e": 10, "401": 51, "4011": 76, "4012": 6, "4019": 6, "40198600e": 25, "402": [50, 51], "4022": 51, "40228736": 8, "4036": 6, "403976": 3, "404": 8, "4043": 26, "404688": 45, "405027e": 329, "4063": 6, "407": 8, "4074": 17, "408": 61, "4082": 18, "4083": 18, "4084": 18, "4085": 18, "408532": 42, "4086": 18, "4087": 18, "40896224": 8, "409": 33, "4096": 57, "41": [2, 3, 5, 8, 9, 10, 17, 18, 24, 61, 329], "4100": 26, "4106": 6, "411566": 3, "412": [57, 61], "4123": 6, "4125": 6, "413": [319, 323], "415": [8, 57, 58, 61], "415164": 5, "4156": 37, "4157": 50, "4159": 50, "416": 57, "4162": 23, "416251": 42, "416518": 42, "4166": 37, "4167": 56, "4175": 37, "417972": 42, "417998": 42, "418": 8, "418748e": 329, "4189": 61, "4198": 23, "42": [8, 17, 18, 24, 31, 32, 33, 56, 72, 329, 358], "420": 76, "420104": 42, "4202": 6, "420393": 42, "4208": 19, "421141": 42, "421357": 9, "4216": 25, "421604": 42, "422": [319, 323], "4226": 6, "4232": 23, "4236": 6, "423921": 3, "4242": 8, "424638": 42, "4251": 50, "4255": [6, 25], "425528": 42, "42588864": 8, "426064": 3, "4266": 17, "4269": 17, "427": [8, 61, 319], "4270": 17, "4271": 17, "4272": 17, "4274": 17, "4275": 17, "4277": 17, "428": [9, 57, 61, 73], "4280": 17, "4281": 17, "4285": 17, "4286": 21, "428621": [2, 5], "42867552": 8, "4287": 17, "4288": 17, "4289": 17, "4290": 17, "4292": 76, "4293": 17, "4294": 17, "4295": 17, "4296": 17, "4298": 19, "4299": 17, "43": [2, 5, 10, 17, 18, 24, 42, 65, 329], "430": 64, "4300": 17, "4301": [17, 51], "43012181": 8, "4302": 17, "4304": 17, "4305": 17, "4309": 6, "431": [51, 61], "4311": 17, "4312": 17, "4313": [6, 17], "4316": 17, "4317": 17, "4322": [17, 76], "4323": 17, "432403": 42, "4326": 17, "433": [8, 9, 57, 61], "4330": [6, 17], "4333": 17, "4334": 17, "4334417": 25, "4336": [17, 60], "4339": 17, "4340": 17, "4342": 23, "4348": 17, "4349": 17, "4352": 17, "4357": 33, "4358": 76, "4362": 17, "43635893e": 21, "436493": 15, "4366": 17, "4367": [17, 38], "4368": 38, "437": 61, "4374": 17, "4377": 17, "437721": 3, "4378": 17, "438": 319, "4382": 17, "4383": 17, "4384": [17, 23], "4386": 17, "4387": 17, "4388": 17, "4389": [6, 17], "4390": 17, "4391": 17, "4392": [6, 17], "4393": 17, "4394": [17, 23], "4395": 17, "4396": 17, "4397": [17, 54], "4398": 17, "4399": 17, "44": [6, 17, 18, 24, 42, 57, 60, 61, 64, 329, 330], "440": [51, 61], "4400": 17, "4401": [17, 38], "440154": 45, "4402": [6, 17], "4403": 17, "4404": 17, "4405": [17, 37], "4406": 17, "4407": [17, 38], "440752": [2, 5], "4408": 17, "4409": 17, "441": [8, 57, 61], "4410": 17, "44108005": 8, "4411": 17, "4412": 17, "4414": 17, "4415": 17, "4416": 17, "4417": [17, 33], "441707": 3, "441833": 5, "4419": 33, "4420": 50, "4421": 17, "4423": 17, "4425": 17, "4426": 17, "4428": 17, "4429": 17, "443": 61, "4430": 17, "4431": 6, "4433": 17, "4434": [6, 17], "4436": 6, "4438": 17, "4439": 17, "4440": 17, "4441": 38, "4444": 17, "444782": 15, "4448": 17, "445": [9, 57, 73], "4451": 17, "4454": 17, "4457": 17, "4458": 17, "4460": 17, "4462": 17, "4463": 17, "4464": 17, "4465": 17, "44654": 42, "4466": 17, "4467": 6, "447": [9, 57, 61, 73], "4470": 17, "4472": 17, "4475": 17, "4476": 23, "4477": 17, "4479": 38, "44794474": 8, "4481": 17, "4484": 17, "4485": 17, "4486": [17, 57], "4487": 17, "4490": 17, "4491": 17, "4494": 38, "4496842": 25, "4497": [17, 38], "45": [6, 8, 10, 17, 18, 24, 25, 42, 60, 73, 76, 326, 333], "4500": 60, "45000": 25, "4501": 17, "4504": 38, "4506": 17, "451": [8, 50], "4510": 38, "451197": 42, "4512": 17, "4513": 33, "4519": 51, "451952": 5, "451988": 8, "4520": 37, "452016": [2, 5], "4521": 17, "4522": 17, "4523": 6, "45238": 23, "4525": 17, "4528": 37, "45287301": 8, "45290": 23, "4530": 17, "4531": [17, 37], "45338": 23, "453707": [13, 42], "453781": 45, "4539": 37, "45391": 23, "4540": 37, "4541": 17, "45425": 23, "454411": 42, "45458": 23, "45465": 23, "454741": 3, "4552": [23, 33], "45525": 23, "4553": 17, "45535": 23, "4554": 17, "45545": 23, "45578528": 8, "4558": 6, "456": [57, 61, 73], "4561": 60, "456563": 42, "4568": [17, 37], "45725397": 25, "45777351": 8, "458": 61, "45813": 23, "4582": 17, "4585": 6, "4587": 19, "4589": 23, "459": 8, "4594": 17, "4597": 17, "46": [2, 5, 10, 17, 18, 24, 42, 60, 76], "4602": 6, "4607848": 8, "461": 6, "4615": 72, "461799": [2, 5], "462006": 42, "4627": 6, "46286": 23, "4631": 6, "4633": 38, "4634": 38, "4635": 6, "4636": 6, "4637": [6, 17], "46464249": 8, "4647": 50, "464723": [13, 42], "4648": 17, "465": 8, "4654": 17, "4659": 6, "465977": [2, 5], "4662439": 17, "46657904": 8, "4667": 64, "4676": 38, "46818392": 8, "4682": 19, "4683": 6, "4688": 51, "4694": [21, 23], "4696": 6, "46it": 42, "47": [2, 9, 17, 18, 24, 60], "4704": 6, "4705": 73, "470528": [2, 5], "4713": 33, "47145906": 8, "472": 8, "4721": 6, "4726": 25, "472634": 42, "472756": 3, "4728": 76, "473737": 15, "4738": 76, "4739": 17, "4741": 6, "474543": 15, "4747": [6, 60], "475053": 3, "475099": 3, "4758": 38, "476": 8, "476388": 42, "4769": 6, "477": 60, "47719370e": 25, "4775": 23, "477859": 25, "4784": [17, 51], "479": 8, "48": [6, 9, 17, 18, 24, 45, 56, 76], "4800": 6, "480644": 42, "4808": 6, "4809": 51, "48118": 42, "4812": 25, "481467": 45, "482": [], "482576": 45, "483111": 42, "4834": 6, "484015": [2, 5], "48404936": 8, "484224": 3, "4846": 23, "484c": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "485500": 3, "4858": 23, "4862": 60, "486322": 42, "486594": 42, "4871": 51, "487169": 5, "487297": 42, "487756": 42, "488": 6, "488310": 14, "48869896": 8, "4887": 39, "488876e": 329, "4889": 38, "489": 6, "4895": 56, "49": [5, 9, 10, 17, 18, 24, 56, 60, 61, 72, 73], "4907": 33, "491": 73, "4915": 38, "4915018": 2, "491502": [2, 5], "4916e": [], "4917": 3, "491782": [2, 5], "492": 56, "49249195": 8, "4933": 39, "4939": [17, 39], "4943": 6, "494683": [2, 5], "495683": 3, "4963": 18, "4965": 6, "4969": 39, "4975": 72, "4977": 60, "498": 8, "49800181e": 22, "4983": 36, "499": 6, "499088": 3, "4994": [37, 39], "49949932": 8, "499676e": 329, "4999": 17, "4_resili": 361, "4th": 332, "5": [2, 3, 5, 8, 9, 14, 17, 18, 21, 22, 23, 24, 25, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 100, 104, 124, 201, 204, 205, 206, 207, 208, 212, 214, 216, 220, 221, 222, 223, 224, 264, 265, 266, 267, 268, 275, 277, 281, 282, 291, 292, 293, 313, 317, 320, 322, 326, 329, 333, 340, 341, 343, 344, 347, 348, 349, 350, 351, 352, 353, 356, 357], "50": [9, 17, 18, 23, 24, 33, 36, 42, 45, 56, 57, 60, 61, 64, 72, 73, 76, 214, 266, 267, 268, 269, 350], "500": [231, 281, 282, 327, 334], "5000": [56, 60, 64, 76, 226, 227, 229, 230, 239, 264, 265], "50000": [2, 3, 5, 56, 353], "500000": 2, "50000000e": 25, "5002": 6, "5003": 6, "500934": 14, "500e": 10, "5010": 36, "5012": 39, "5017": 39, "5022": 39, "5023": 6, "503": 6, "5036": [6, 51], "505": [8, 50], "5054": 33, "5056": 6, "5061": 36, "5063": 6, "506395": 9, "507501": 3, "5081": 50, "5082": 6, "5088": 39, "5093": 6, "5096": 33, "5099": 36, "51": [2, 5, 6, 9, 17, 18, 24, 42, 65, 76], "510080e": 329, "5101": 6, "51060806": 8, "5107": 6, "510933": [2, 5], "51097": 42, "51115655e": 25, "5118": 6, "5123": 33, "513": [60, 64, 72], "5134": 56, "513484": [2, 5], "5138": 17, "5141": 6, "5147215": 8, "5148": 6, "514946": [2, 5], "515154": 9, "5153": 343, "5155": 36, "5161": 60, "5169": 17, "518": 50, "51951345": 8, "52": [17, 18, 24, 61, 322], "5205": 51, "52172805": 8, "5218": 6, "5224": 8, "52262687": 8, "5232": 6, "5234": 33, "5238": 76, "52386691": 8, "524": 8, "5243": 6, "5244": 36, "5256": 60, "5259": 33, "525951": [2, 5], "526": 64, "5260": 6, "5262": 23, "5265": 6, "5271": 6, "52711163": 8, "5276": 6, "5283": 6, "5288": 17, "52888139": 8, "5297": 6, "53": [17, 18, 24, 56, 61, 64, 322, 361], "5309": 36, "530973": 3, "5311": 50, "5314": 33, "531739": 42, "5321": 33, "532205": 3, "5327": 60, "532754": [2, 5], "5336": 38, "5337": 33, "5344": 6, "5348": 33, "53512126": 8, "5354e": 18, "536": [6, 115, 321], "538574": [2, 5], "539": 8, "5396": 50, "54": [17, 18, 42, 72], "5401": 36, "5404": 36, "5406": 36, "542": 61, "5426": 73, "5427": 33, "5428": 6, "5429": 76, "5430": 33, "5439": 6, "5440": 6, "5444": 72, "544440": [2, 5], "5449": 6, "5450": 61, "546": [17, 50], "5466": 6, "547011": 3, "547405": [2, 5], "5476": 6, "5478": 51, "548": [6, 55, 58], "5483": 61, "549": [68, 70], "5490": 6, "5494": 38, "5495846": 17, "549641": 9, "55": [9, 17, 18, 42, 60], "5500": 6, "5501": 6, "550138": 42, "5504": 50, "551419": 3, "5519": [], "55199525": 8, "552181": [2, 5], "5523": 6, "5525": 36, "5528": 6, "553405e": 329, "5539": 38, "554319": [2, 5], "5547e": [], "55526238": 8, "5554": [6, 33], "5557": 6, "555878": 16, "556": [6, 76], "5565": 51, "5570": 33, "5574": 33, "5578": 50, "558": [54, 58], "5583": 6, "5587": 6, "5588": 60, "558922": 9, "559": 73, "5597": 18, "56": [3, 8, 9, 10, 17, 18, 42, 56, 64, 72], "5601": 6, "5607": 6, "5608": 39, "5609": 6, "5610": 38, "5619": 6, "5621": 60, "5623": 60, "562721": [2, 5], "5634": 21, "5639": 6, "5644": 6, "564453": [2, 5], "5646": 18, "5649": 50, "5651": 6, "5652": 50, "5684": 61, "5685": 60, "5686": 33, "5691": 33, "5694": 61, "56c667": 45, "57": [2, 9, 17, 18, 72], "5701": 17, "5702": [6, 50], "5713": 36, "5714": 60, "5715": 36, "5716": 8, "572": 50, "5727": 6, "5730": 17, "574": 8, "5741": 23, "5756": 60, "5758366": 8, "5759": 6, "57641592": 8, "576596": 3, "577": [6, 64, 73], "5770": [6, 33], "5771": 36, "5773": [50, 72], "5774": [23, 50], "5776": 33, "57779066": 8, "578": [6, 56], "5790": 23, "579652": 16, "5796733": 8, "5797": 56, "58": [17, 18, 61], "580": 50, "5804": 6, "5808": 39, "5813": 36, "581320": 9, "582": 61, "5822": 6, "5825": 6, "5831": 6, "5833": [6, 51], "5836": 23, "584": [57, 61, 73], "5840": 50, "5843": [50, 60], "584421": 343, "5846": 76, "585": 8, "5852": 6, "5864": 50, "588": 76, "588372": 9, "58841076": 8, "58843931e": 21, "58882597": 8, "5889": 6, "5891": 6, "5899": 8, "59": [9, 17, 18, 39, 56, 61, 64, 73, 76, 319, 361], "5903": 8, "5908": 60, "591": [50, 52, 61], "59150096": 8, "5917": 33, "59185708": 8, "592": 8, "592177": 3, "5924": 6, "5925": [6, 60], "592621": [2, 5], "5929": 33, "5933": 6, "5942": 60, "5945": 33, "5948": 6, "5963": 56, "5966": 6, "597": 56, "59785479e": 22, "5979": 33, "59815633": 17, "5983": 50, "599": 73, "599323": 3, "5_robust": 361, "6": [2, 3, 5, 8, 9, 10, 17, 18, 22, 23, 24, 25, 33, 36, 37, 38, 39, 42, 47, 50, 51, 56, 57, 60, 61, 64, 65, 72, 73, 76, 124, 302, 313, 315, 328, 329, 330, 347, 351, 353], "60": [6, 8, 9, 10, 17, 18, 33, 42, 56, 57, 60, 64, 72, 73, 76, 347], "600": [45, 56, 61, 62], "6000": 72, "6006": 51, "60068917": 8, "600893": 16, "601": 56, "6011": 17, "6016": 51, "6017": 6, "602": [56, 60], "6021686": 2, "602169": 3, "6023": 6, "6025": 17, "603": 56, "603604": 3, "603628": 16, "6044": 76, "6048": 6, "60502429": 8, "6053": 51, "605574": 3, "60578035e": 21, "6060": 6, "6061": 10, "6064909": 17, "6069": 36, "6074": 17, "6075": 6, "6078": 6, "608": 8, "6080": 17, "60859436": 8, "60859736": 8, "6088": 6, "609": 8, "6097": 50, "6097598": 25, "61": [9, 10, 17, 18, 39, 56], "610": 6, "6104": 56, "6114": 60, "6124": 9, "613": 61, "6138": 72, "614": 8, "61438626": 25, "6146": 56, "6147": 33, "6148": 64, "615": 8, "615382e": 329, "6158": 33, "6161": 60, "6163": 50, "6165": 23, "6165768": 18, "6167": 6, "6168": 33, "6193": 6, "619748": 3, "62": [10, 17, 18, 60, 61, 64], "6201": 6, "6208": 33, "62127511": 8, "622": 6, "6224": 6, "6227": 60, "6228": 64, "623": 8, "6233528": 2, "623353": [2, 5], "6238": 60, "624": 6, "6240": 50, "624382": 9, "6249": 6, "6257": 72, "6258": 6, "62591967": 8, "6260": 64, "6261": 56, "6265": 50, "6277": 17, "6279": 6, "6282": 60, "6285": 17, "629": 8, "629466": 9, "6298": 6, "62987111": 8, "629950": 3, "63": [17, 18, 56, 319], "630000": 5, "6304": 76, "6308": 50, "6311": 50, "6315": [6, 50], "631849": 42, "6319": 6, "632": 6, "6321": 6, "6326": 72, "632617": 9, "6343": 6, "6351": 6, "636": 8, "636641": 9, "6367": 51, "63710481": 8, "63718738": 8, "637231": 3, "6377": 6, "638": [3, 11], "6381": [6, 60], "63892622": 8, "639": 61, "639519": 3, "6398": 6, "64": [10, 17, 18, 60, 72, 76], "640": [337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "640444": 9, "6409": 6, "6411": 60, "6425": 50, "6439": 6, "6444": 17, "646": 57, "6460": 56, "64644051": 8, "6467": 60, "6472": [6, 72], "64722795": 8, "6473": 6, "648": 51, "6481": 6, "6487": 51, "6488": 6, "6492": 6, "6494": 38, "6499": 6, "65": [8, 9, 10, 17, 18, 56, 60, 330, 353], "6507": 50, "6509": 56, "652": [17, 27, 361], "6524": 23, "6529": 76, "6531": 56, "65340550e": 25, "653791": 3, "6538": 17, "6539": [56, 72], "654": 6, "6542": 6, "654506": 3, "6548": 60, "6556": 6, "6557": 9, "6558": 60, "6560": 60, "656616": 9, "65801040e": 25, "6584": 60, "65863077": 8, "6599": 60, "66": [10, 17, 18, 42, 60, 61], "66048595e": 25, "6612": [], "6615": 60, "6618": 76, "6619": 6, "663": 6, "6633112": 8, "6636": 3, "6639": 6, "6641": 76, "66410094": 17, "66441815": 8, "664760": 9, "6648": 60, "6649": 17, "6650": 17, "6651": 17, "6652": 17, "6653": 17, "6654": 17, "6655": 23, "6666": 38, "6667": 60, "6672": 51, "6672337": 8, "6673": 6, "667824": 9, "6682": 37, "6688": 23, "6692": 6, "66937524": 18, "67": [17, 18, 57, 61], "6700": 6, "670062": 3, "6709": 51, "6713": 6, "67171": 42, "6718": 6, "672015": [2, 5], "6736": 33, "674": [], "67438175": 8, "6744": 60, "6747": 6, "67514110e": 25, "6752": 6, "6753": 6, "6753e": [], "6755": 6, "6771": 50, "6773": 60, "6774": 6, "6775": 60, "6780": 60, "6785": 17, "678666": 3, "6790": 33, "68": [5, 9, 17, 18, 56, 57, 61, 65, 73], "6800": 72, "6803": 33, "680607": [2, 5], "6814": 72, "68152997": 8, "6818": 10, "68282644": 8, "6829": 60, "683353": [2, 5], "6837": 6, "6856": 6, "6866": 60, "6873": 6, "687531": 9, "6877": 60, "6878": 6, "6886": 6, "689033e": 329, "6891": 6, "689362": [2, 5], "6895": 6, "6897": 3, "689708": [2, 5], "69": [17, 18, 56, 57, 60, 61, 64, 72, 73], "6904": 33, "69050610e": 25, "6908": 17, "6910": 6, "6912": [6, 33], "6919": 6, "691958": 3, "6920": 60, "6923": 6, "6926": 6, "6927": 76, "692776": [2, 5], "6937": 3, "6939": 3, "694": 50, "69402145": 25, "6944": 64, "6954": 6, "6961": 51, "696166": 9, "696219": 9, "696812": 3, "696924": [2, 5], "6975": 6, "6977": 6, "69795192": 8, "698": [7, 11], "698437": 9, "6986": 60, "699": 8, "6990569": 2, "699057": [2, 3, 5], "6991": 33, "69910025": 25, "699317": [2, 5], "699578": 3, "6_fair": 361, "6th": 319, "7": [2, 5, 8, 9, 10, 17, 18, 23, 24, 25, 33, 36, 37, 38, 39, 42, 50, 51, 56, 57, 60, 61, 64, 72, 73, 76, 100, 212, 298, 313, 319, 322, 329, 347, 352], "70": [3, 9, 17, 18, 33, 42, 56, 57, 60, 61, 64, 72, 73], "70000": 5, "7005": 6, "7006": 6, "700630": 3, "700e": 10, "701555": 9, "701683": 16, "7017": 6, "7024171": 18, "7034": 60, "703447": 9, "703580e": 329, "70426": 42, "70441192": 8, "7049": 33, "7052": 6, "7058": 60, "70591259": 8, "70624983": 17, "7069": [56, 60], "7077": 72, "7081": 72, "709229": 42, "71": [17, 18, 39, 56, 57, 61, 64, 76], "7109": 6, "711": 26, "7111": 60, "7113": 56, "7115": 6, "7118": 6, "712": 57, "7122": 17, "7131": 60, "7136": 6, "7145": 6, "7150e": [], "715251": [2, 5], "7154": 50, "7157": 72, "717": 51, "7170": 56, "7173": 39, "7175": 6, "7177": 36, "7180": 38, "7180374727086953": 38, "7187": 17, "7198": 6, "72": [9, 10, 17, 18, 57, 72], "7208288": 25, "721": 57, "7222": 6, "722428": [2, 5], "72256946": 8, "723": 6, "723022": 16, "723182": 3, "7238": 6, "723989": [2, 5], "724": [37, 40], "7256": 38, "726041": 9, "7268": 17, "7273": 10, "7274": 6, "7275": [], "72775698": 8, "727856": 9, "7279": 6, "7280": [], "7281": 6, "7282": 50, "7284": 76, "7285": 9, "728754": 3, "7297": 60, "73": [17, 18, 39, 61, 76], "730": 56, "7302": 6, "7303": 39, "7305": 56, "7308": 60, "7312": 6, "7314": 6, "7315": [], "7317": 6, "733311": 15, "733875": 3, "7340": 6, "7341": 60, "7344": [36, 64], "7345": 36, "7347": 60, "7349": 72, "7350": 6, "735054": 343, "7354": 18, "7355": 76, "736452": 3, "736758": 15, "736877": [13, 42], "7369": 56, "737": 6, "73709": 42, "737090": 13, "7372": 56, "7374": 33, "7378": 36, "7381": 60, "7384874": 8, "7391e": 18, "7392": [], "7393": 72, "739384": 3, "7398": 6, "74": [6, 10, 17, 18, 39, 60, 61, 76], "740": [60, 72], "74019125": 8, "7402": [], "7403": 33, "7405": 72, "7406": [36, 72], "7407": 36, "7408": 36, "74094000e": 25, "7411": 72, "74119907": 8, "7412": 72, "7414": 72, "7417": 72, "7418": [36, 72], "7419": 6, "7420": 72, "7421": 72, "7424": [10, 72], "7427": 72, "7428": 72, "7433": [38, 51, 72], "7434": 72, "7435": [6, 72], "7437": 72, "7438": 72, "7439": 72, "7443": 72, "7444": 72, "7445": 72, "7446": 72, "7448": 72, "7450": 72, "7453": 6, "7454": [36, 72], "7455": 72, "7456": [6, 72], "746": [22, 27, 361], "7460": 72, "7464": [38, 60, 72], "7465": 56, "746540": 9, "7466": 72, "747": 33, "7471": 6, "7474": 6, "7476": 6, "7477": 18, "7492": 36, "749674": 42, "75": [3, 5, 8, 9, 10, 17, 18, 56, 60, 61, 76, 353], "750": 65, "7500": [36, 64], "75000": 25, "7502": 6, "7503": 6, "7505": 24, "7508": [], "7509": 18, "7512": [38, 60], "751288": 9, "7514": 60, "7518": 3, "752": [56, 60, 64, 72], "75201011": 8, "7525315": 25, "753": [31, 34], "75308490e": 25, "7532": 6, "7534": 39, "753660": [2, 5], "7538": 6, "753876": 9, "7539": [36, 39], "7540": 36, "7547": 39, "7552": 36, "7554": [39, 56], "755482": 9, "7556": [39, 76], "7557": 38, "7559": 38, "7560": 24, "7561": 39, "756332": 9, "7566": 36, "7569": 6, "7570": 39, "7575": 56, "757503e": 329, "7576": 10, "7577": 6, "7578": [39, 56], "7580": 6, "75812003": 8, "7582": 23, "7584": 6, "7589": 56, "759": 73, "7593": 36, "75945": 42, "7598": [36, 39], "75d054": 45, "75th": 317, "76": [10, 17, 18, 39, 56, 60, 61, 76], "760": 6, "76039622": 8, "7613": [], "7620": 39, "7624": 6, "762511": 3, "763": 6, "7632": 38, "7633": 38, "7641": [33, 38, 50], "7645": 6, "7646": 38, "764923": 2, "7655": 38, "7658": 56, "7662": [54, 72], "7664": 6, "766402": 3, "7667": 6, "7669": 56, "7675": 6, "7676": 64, "768": 6, "7681": 6, "7683": 6, "768742": 42, "7690": [6, 56], "769194e": 329, "7695": 23, "7696": 38, "77": [17, 18, 60, 61, 65, 73, 76], "7701": 6, "7705": 6, "7706": 38, "77098477": 17, "771": 23, "77103605": 25, "77109665": 17, "7711": 6, "77115248": 8, "7714": 56, "772": [6, 36, 40, 51], "772886e": 329, "773": [64, 72], "773221": 42, "77373500e": 25, "77418421": 8, "7742": 23, "7747": 21, "7748": 38, "77488155e": 25, "775": 6, "7751": 38, "775229": 42, "7754": 60, "7757": 6, "776": 60, "7761": 8, "7765": 6, "777": 14, "7778": 64, "7779": 23, "77918172": 8, "7793": 23, "779349": 3, "77944850e": 25, "7798899449724863": 5, "78": [17, 18, 56, 60, 64, 73, 76], "780": 33, "7800": 6, "780283": 42, "7803": 25, "78034682e": 21, "7814": 33, "781533": 42, "78185": 42, "7819": 19, "782492": 3, "7826": 6, "7829": 6, "7831e": 18, "7832": 19, "783313": 42, "7840": [6, 23], "784044": 42, "7842": [38, 51], "7854": 56, "7857": 18, "786645": 42, "787": [6, 33], "7870": 6, "7872": 23, "7873": 50, "7879e": 18, "7882": 76, "7887": 64, "789": 33, "7896": [25, 56], "789608": 42, "7899": 3, "79": [3, 17, 18, 56, 61, 65, 72, 73], "7902": 6, "791": 6, "7910": 61, "7911": 6, "791414": 42, "7918": 56, "79189717": 8, "7919": 6, "7925": [23, 36], "7926": 6, "7930": 39, "793092": 3, "7936": 39, "794": 50, "7943": [3, 6], "7945": 6, "795420": 3, "7955": 60, "7956": 56, "7964": 23, "796614": 42, "796958": 42, "7973": 6, "7974": 6, "798": [47, 48], "7980": 6, "7985": 39, "798615": 14, "798646e": 329, "7993": 36, "7994": 6, "7996": 56, "799742": 42, "7_explain": 361, "7f7f7f": 45, "8": [2, 3, 4, 5, 6, 8, 9, 10, 17, 18, 23, 24, 25, 29, 30, 33, 36, 37, 38, 39, 42, 45, 50, 51, 56, 57, 60, 61, 64, 72, 73, 76, 79, 100, 313, 314, 329, 330, 334, 347, 352], "80": [8, 9, 10, 17, 18, 33, 42, 56, 57, 60, 61, 64, 65, 72, 73, 347], "800": [33, 45], "80000": [2, 5], "8001": 6, "800262": 9, "8006": [6, 37], "8010": 36, "801333": 42, "80182776": 8, "801917": [13, 42], "802": 33, "802168": 42, "8022": 6, "803167": 42, "8032": 36, "803478": 9, "8035": [33, 36], "8038": 6, "8040": 6, "8041": 39, "804507e": 329, "805": 33, "8050": 56, "8051": 6, "8061": 51, "806229": 3, "806320": 14, "8069": 56, "8075": 42, "807500": 13, "8085": [23, 33], "809": [], "809333": 42, "81": [3, 5, 8, 9, 10, 17, 18, 65, 73], "8101": 36, "8102": 33, "812": [6, 33], "813179": 9, "8136": [24, 60], "8157": [6, 33], "8158": [38, 60], "816": 50, "8164": 6, "8167": 33, "8168": 36, "8169": [6, 36], "8170": [36, 60], "817664": 3, "8179": [6, 19], "8183": 9, "8185": 24, "8187": 6, "8196": 6, "819798": 5, "8199": 23, "82": [10, 17, 18, 65, 73, 76, 326], "8201": 33, "8202": [6, 54], "820250": 15, "8203": 56, "82036584": 8, "8205": 25, "820542": 42, "8207": 23, "820e": 10, "8210": [6, 36], "821208": 42, "8217": 23, "82275": 42, "823": [42, 57, 61, 73], "8230063": 8, "823417": 42, "82352339": 8, "8237": [21, 36], "825": 24, "8251": 6, "826333": 15, "826671": 3, "826716e": 329, "8270": 19, "8275": 6, "8276": 36, "827667": 42, "8277": [36, 56], "827833": 42, "828": 50, "8286": 56, "829": 6, "829167": 42, "8294": 18, "8296": 36, "8297": 6, "8298": 23, "83": [10, 17, 18, 42, 60, 61, 65, 73], "830": 33, "8300": 25, "8303": 39, "8307": 6, "831": 42, "8312": 56, "8315": 36, "8317": 6, "8321": 6, "8325088": 2, "832509": [2, 5], "83255660e": 25, "8327": 6, "832833": 42, "8330": 6, "833031": 3, "8331": 39, "8332428": 25, "8335": 39, "8339": 36, "8341": 39, "8343": 38, "8350": [23, 36], "8359": 39, "8360": 31, "83600735e": 25, "836042": 42, "8363": 36, "8365": 39, "8366": 6, "8373": 39, "8374": 10, "8375": 10, "8376": 10, "8377": 10, "8378": 10, "837806": 9, "83784574": 8, "8379": 10, "8383": 6, "8384": 61, "838849": [2, 5], "8390": 39, "8392": 39, "8394": 6, "839678": 9, "84": [17, 18, 39, 65], "841": [6, 25], "8411": 39, "8412": 38, "84176620e": 25, "8425": 6, "84270706": 8, "842721e": 329, "8430": 6, "843542": 42, "8436": 36, "843718": 3, "84393064e": 21, "8441": 6, "84469629": 8, "845": 6, "84516": 2, "84522210e": 25, "8458": 56, "84602065": 8, "8469": 6, "8479": [6, 21], "848": 33, "8488": 6, "8496": 6, "8499": 6, "85": [17, 18, 61, 65, 76], "850": [56, 58], "850124": 3, "852405": 9, "853476": 9, "8540": 76, "8542": 6, "854855": 5, "8555": 38, "855556": 9, "8571": 60, "85722573e": 22, "8577": 18, "8582": 26, "8589": 6, "85it": 42, "86": [10, 17, 18, 61], "8612": 26, "8619246": 8, "863": 76, "86308480e": 25, "8645": 64, "864547": 3, "8656908": 8, "866": 56, "867": [57, 61, 73], "8677": 76, "867905": 3, "8693": 64, "87": [10, 17, 18, 73], "8710": 33, "8713": [6, 38], "8716": 76, "8719": 6, "8724": 6, "8728": 6, "8734": 23, "874": [57, 61, 73], "874094": 25, "874692": 9, "8748": 21, "8757": 24, "876": [5, 11], "8763": 6, "879374": 3, "8796": 51, "88": [17, 18, 42, 57, 60, 61, 76], "880594": 42, "881": 6, "8825": 24, "882553": [2, 5], "8831": 31, "88498131e": 22, "885018e": 329, "8855": 64, "885958": 3, "8861": 18, "8863": 37, "8869": 6, "8875": 6, "8876": 37, "888": 136, "8883": 6, "8885": 54, "8888": 6, "89": [9, 10, 17, 18, 42, 64, 73], "8902": 33, "8907": [64, 65], "89070025": 25, "891201e": 329, "8918": 64, "8924": 65, "8929": 38, "893123": 9, "8936": 6, "89376030e": 25, "8938": 6, "8941e": 18, "894205": [2, 5], "8965": 64, "8979": 64, "8981": 6, "8987": 64, "899": 8, "8991": 6, "8992": 6, "89930816": 8, "8996": 6, "8c564b": 45, "8e93": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "9": [3, 5, 8, 9, 10, 17, 18, 21, 23, 24, 25, 33, 36, 37, 38, 39, 42, 50, 51, 56, 57, 60, 61, 64, 72, 73, 76, 100, 104, 111, 202, 204, 205, 206, 207, 208, 212, 218, 220, 221, 222, 223, 224, 319, 323, 329, 330, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353], "90": [9, 10, 17, 18, 33, 42, 45, 57, 64, 73, 214, 216, 315], "90000": 2, "9001": 6, "90012033": 8, "9010": 6, "901036": 9, "9025": 64, "90417395e": 25, "9042": 65, "9049": 6, "906131": 3, "9062": 64, "9063": 6, "90643441": 8, "9068": 33, "90776706": 8, "908": 33, "9080": 6, "909": 8, "9091": 6, "91": [17, 18, 56, 73, 76], "910277": 3, "910548e": 329, "91086655": 8, "91112114": 8, "911598": 3, "912": [57, 61, 73], "9122": 6, "913": [80, 81], "9131": 6, "9133": 6, "9134": 6, "9135": 6, "91531044": 8, "916": [326, 329], "9164": 6, "9171": 6, "918397": 5, "919": [69, 70], "92": [17, 18, 60, 76], "920": 51, "921166": 3, "9219": 6, "9228": 6, "92474582": 8, "9257": 6, "926": 33, "9263": 38, "92705194": 8, "9277": 6, "928576": 47, "9286": 64, "929470": [2, 5], "93": [8, 9, 17, 18, 51, 56], "9303": 9, "93043925e": 25, "9311": 6, "931103": 9, "931307": 3, "931323": 5, "9319": 6, "9324": 6, "9327": 64, "9333": 6, "93337083": 8, "93341379": 8, "93374030e": 25, "933998": [2, 5], "9340": 6, "9341": 6, "9350": 50, "935406": [2, 5], "9355069": 25, "9357": 23, "9368": 23, "938": 51, "93806127": 8, "939138": 8, "939141e": 329, "93986566": 8, "94": [8, 17, 18], "940": 8, "94065728": 8, "9407": 64, "940e": 10, "941289": 3, "9426": 6, "9430": 6, "9431": 6, "9432": 6, "9434": 22, "9442": 6, "94448235e": 25, "944507": [2, 5], "9447": 6, "9449": 20, "9453": 6, "945496": 9, "9457": [23, 54], "94615745e": 25, "9467bd": 45, "9470": 6, "9472": 6, "9475": 20, "9479": 6, "9481895": 8, "9496": 50, "95": [10, 17, 18, 56, 60, 61, 72], "95000": 25, "950164": 3, "9503e": [], "9508": 64, "950861": 3, "951874": 9, "952": 6, "952328": 3, "9524": 6, "953276": [2, 5], "954": [326, 329], "9541": 22, "954194": [2, 5], "9542909": 2, "954291": [2, 5], "9544": 6, "9551": 18, "9554": 55, "95640850e": 25, "9574": 23, "957594": 9, "9590": 6, "9599828": 25, "95d840": 45, "96": [17, 18, 56, 57, 60, 72], "96028155e": 22, "960e": 10, "961": 65, "962809": 9, "9648": 6, "96500000e": 22, "965827": 3, "966": 8, "9660": 6, "9662": 6, "96689805": 8, "96696482": 8, "967160": 3, "9679": 6, "96832579e": 22, "9689": 6, "969443": 42, "9698": 37, "97": [10, 17, 18, 56, 60, 72], "9710": 64, "97176857": 8, "9725": 6, "972620": 9, "974": 6, "9741": 6, "976": 33, "9769": 33, "9772": 6, "9777": 6, "9789": 55, "9791": 33, "98": [17, 18, 56, 57, 60, 72, 73], "980": 6, "9803": 65, "9808": 6, "981730": 3, "98238435": 25, "9830": 6, "983024": 3, "9836": 6, "9839": 23, "984308": 3, "9848": 51, "9851": 6, "9852": 6, "9858": 6, "9861": 6, "987": [56, 64], "9881": 45, "9881131988260086": 45, "9882": 6, "989": [6, 33], "989873e": 329, "99": [9, 17, 18, 56, 60, 61, 72, 73, 76, 109, 110, 111], "990": [46, 48], "9902": 6, "99053695": 8, "9910": 6, "99141914e": 22, "9919": 50, "99212203": 8, "9923": 6, "992965": 3, "993234": 5, "995": [3, 10], "99578865": 25, "996": [3, 10, 33, 361], "996155": 9, "99629270e": 25, "997": [3, 10], "9971": 6, "9977": 6, "998": [3, 10], "999": [3, 10, 136], "A": [45, 83, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 136, 152, 156, 172, 173, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 214, 215, 217, 218, 223, 224, 228, 230, 231, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 302, 318, 319, 321, 323, 326, 327, 328, 332, 341, 343, 344, 347, 349, 352, 359], "And": [217, 264, 265, 319], "As": [46, 64, 65, 217, 264, 265, 313, 319, 320, 322, 328, 333, 334, 343, 355], "At": 338, "But": [319, 323], "By": [76, 313, 315, 319, 320, 323, 326, 330, 331, 333, 341, 343, 347, 348, 349, 351, 352, 353], "For": [19, 20, 25, 26, 104, 127, 128, 131, 132, 134, 136, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 229, 231, 238, 264, 265, 292, 313, 317, 318, 319, 320, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358], "If": [99, 100, 104, 106, 108, 113, 114, 115, 116, 117, 118, 136, 139, 145, 152, 156, 157, 159, 172, 179, 191, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 237, 239, 247, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 301, 302, 319, 323, 326, 328, 329, 330, 331, 332, 333, 334, 351, 352], "In": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 45, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 264, 265, 292, 313, 314, 315, 318, 319, 320, 322, 323, 326, 327, 328, 330, 331, 332, 333, 334, 337, 341, 342, 343, 347, 350, 351, 352, 355, 358], "It": [109, 110, 111, 112, 114, 115, 117, 118, 124, 127, 128, 131, 132, 134, 135, 136, 173, 201, 202, 203, 204, 206, 207, 208, 211, 213, 218, 219, 220, 221, 223, 224, 227, 228, 238, 243, 247, 260, 264, 265, 268, 269, 277, 278, 283, 290, 291, 292, 293, 298, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 331, 334, 335, 337, 342, 344, 347, 353, 356, 357], "Its": [115, 321, 326, 328], "No": [21, 22, 360], "Not": 214, "On": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 313, 315, 326, 328], "One": [239, 317, 324, 337, 338, 339, 340, 341, 342, 351], "Such": 343, "That": [326, 328], "The": [5, 99, 104, 107, 110, 113, 114, 115, 118, 125, 127, 128, 131, 132, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 179, 184, 187, 189, 190, 191, 193, 194, 196, 197, 199, 200, 201, 202, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 232, 234, 235, 237, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 356, 357], "Then": [313, 315, 318, 322, 324, 343, 351, 352], "There": [317, 347, 349, 350, 351], "These": [315, 337, 338, 349, 351, 353], "To": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 220, 221, 222, 223, 224, 302, 315, 318, 322, 327, 328, 329, 330, 331, 332, 334, 340, 341, 343, 347, 348, 349, 350, 351, 352, 353], "Will": 302, "_": [317, 318, 322, 324, 326, 328, 330, 332, 341, 348, 350, 351, 353], "__": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "__doc__": 45, "__init__": [], "_f": 322, "_fetch_record_by_id_": [], "_i": [349, 350], "_j": [337, 338, 342], "_sync": [], "_x": [337, 342], "a0": 317, "abil": [318, 319, 323, 338, 347, 348, 349, 350, 351, 352, 353], "abl": 355, "about": [200, 204, 206, 207, 208, 216, 218, 219, 238, 319, 328, 337, 342, 350], "abov": [60, 61, 64, 65, 109, 111, 123, 125, 293, 313, 315, 319, 322, 326, 328, 329, 332, 333, 334, 343, 348, 352, 357], "abs_residu": [50, 51, 216, 349], "abs_residual_perturb": [50, 51, 216, 352], "absolut": [123, 172, 216, 217, 318, 324, 334, 343, 349, 351], "absorb": 338, "acc": [13, 15, 19, 21, 23, 25, 36, 38, 39, 42, 54, 68, 199, 202, 203, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 220, 222, 224, 290, 291, 292, 293, 313, 347, 356], "acc_rank": [36, 39], "accept": [200, 211, 327, 334, 348], "access": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 216, 338, 340, 344, 358], "accommod": 341, "accomplish": 332, "accord": [264, 265, 337, 338, 339, 341, 342, 350, 351], "accordingli": 358, "account": [221, 226, 319, 323, 327, 334, 337, 338, 339, 340, 341, 342, 347, 348], "accumul": [226, 322, 325, 335], "accur": [216, 326, 328, 337, 342, 351, 352], "accuraci": [9, 13, 23, 24, 29, 30, 31, 33, 220, 226, 231, 312, 322, 327, 334, 337, 338, 341, 342, 344, 347, 349, 351, 352], "accuracy_plot": 315, "accuracy_result": 46, "achiev": [264, 265, 319, 326, 333, 337, 341, 342, 343, 347, 349, 350], "acm": [319, 322, 327], "across": [56, 57, 60, 61, 136, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 216, 218, 221, 224, 226, 227, 239, 242, 243, 246, 317, 319, 326, 328, 330, 334, 340, 341, 344, 347, 348, 349, 351, 352, 353], "act": 227, "action": [335, 341, 349], "activ": [4, 127, 131, 132, 134, 157, 159, 164, 175, 176, 178, 180, 181, 182, 264, 265, 277, 278, 281, 282, 317, 324, 343, 348, 350, 351, 358], "activation_func": [264, 265], "active_interaction_index_": [264, 265], "active_main_effect_index_": [264, 265], "active_sample_index": 128, "active_samples_index": 6, "actual": [205, 214, 215, 264, 265, 313, 319, 347, 349], "ad": [264, 265, 313, 315, 317, 322, 338, 351, 352, 357], "adam": [264, 265, 330], "adapt": [319, 339, 341, 351], "add": [5, 30, 136, 165, 187, 216, 219, 257, 317, 338, 348, 350, 352], "add_ind": [5, 136, 317], "add_model": [42, 357], "add_step": [47, 257], "addit": [216, 231, 264, 265, 277, 278, 313, 314, 315, 318, 319, 320, 323, 325, 326, 328, 331, 332, 335, 337, 338, 342, 349, 350, 351, 357], "addition": [320, 328, 329, 332, 335, 349], "address": [341, 346, 347, 348, 353], "adjust": [76, 114, 213, 320, 328, 348, 349, 350, 351, 352], "adopt": [319, 323, 347], "advanc": [319, 327, 335, 338, 341, 346], "advantag": [319, 338, 350, 353], "advers": [76, 200, 211, 212, 213, 314], "adversari": [348, 351, 352], "affect": [128, 213, 238, 327, 334, 348, 351], "after": [208, 212, 213, 216, 219, 224, 230, 266, 267, 268, 281, 282, 319, 322, 328, 338, 343, 352, 355], "ag": [2, 3, 5, 25, 56, 76, 347, 353], "against": [64, 203, 205, 212, 213, 215, 216, 220, 221, 222, 223, 224, 290, 291, 292, 293, 313, 314, 315, 319, 331, 335, 341, 347, 348, 349, 352], "age_missing_nan": 5, "aggreg": [201, 217, 319, 341, 347], "aggress": 348, "agnost": [228, 229, 325, 326, 328, 332, 335, 350], "aim": [214, 216, 315, 319, 322, 326, 328, 339, 347], "air": [76, 200, 211, 212, 213, 221, 314], "al": [226, 325, 334, 335], "aletheia": 343, "alex": 330, "alex2015": 330, "alexand": 319, "algorithm": [109, 110, 115, 117, 124, 216, 228, 291, 292, 313, 315, 319, 323, 326, 327, 338, 339, 343, 344, 349, 350, 351, 356], "align": [45, 318, 319, 320, 324, 326, 327, 328, 329, 330, 332, 334, 335, 337, 338, 342, 343, 347, 349], "alignwithlabel": 45, "all": [4, 21, 22, 29, 45, 56, 57, 60, 61, 64, 65, 72, 73, 76, 102, 103, 104, 106, 112, 113, 114, 115, 116, 117, 118, 127, 128, 129, 131, 132, 134, 135, 136, 139, 145, 153, 156, 157, 159, 191, 193, 194, 198, 199, 200, 201, 203, 205, 208, 210, 211, 212, 213, 216, 217, 219, 220, 221, 222, 223, 224, 227, 229, 231, 237, 239, 241, 246, 251, 252, 264, 265, 276, 281, 282, 290, 291, 292, 293, 299, 302, 313, 315, 317, 319, 322, 323, 326, 327, 328, 329, 330, 333, 334, 337, 338, 340, 341, 343, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 361], "all_bias_weight": 245, "allow": [106, 172, 200, 202, 203, 204, 205, 206, 208, 211, 224, 238, 291, 319, 320, 324, 326, 327, 332, 334, 337, 339, 340, 342, 345, 348, 349, 351, 352, 353, 356], "alon": 217, "along": [136, 210, 338, 340], "alongsid": [247, 347], "alpha": [14, 37, 64, 65, 111, 201, 202, 207, 214, 216, 218, 223, 313, 315, 319, 340, 348, 350, 356], "alpha_1": 339, "alpha_2": 339, "alpha_i": 342, "alpha_l": 339, "alreadi": [138, 300, 333, 355], "also": [107, 127, 128, 131, 132, 134, 135, 172, 199, 201, 202, 203, 205, 210, 211, 212, 213, 221, 250, 264, 265, 292, 313, 314, 317, 318, 319, 320, 322, 323, 326, 327, 328, 330, 331, 332, 333, 334, 337, 341, 345, 355, 356, 358], "alter": 318, "altern": [0, 216, 290, 300, 326, 328, 332, 334, 348, 350, 352], "although": [313, 319, 328], "alwai": [112, 321], "am": 331, "amazonaw": 29, "amer": [115, 321], "among": [117, 221, 319, 322, 323, 327, 334, 349, 351], "amount": 317, "an": [5, 30, 109, 110, 114, 125, 172, 211, 222, 227, 277, 278, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 313, 315, 317, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 334, 337, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353, 357, 358], "anaconda": [], "analogi": [327, 334], "analys": 42, "analysi": [1, 9, 11, 23, 24, 29, 33, 42, 46, 49, 52, 53, 59, 62, 66, 70, 74, 77, 86, 106, 112, 113, 114, 115, 116, 117, 123, 125, 173, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 238, 239, 245, 246, 247, 248, 250, 277, 278, 311, 316, 322, 323, 326, 328, 329, 330, 332, 333, 340, 346, 347, 353, 361], "analyt": 335, "analyz": [56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 106, 109, 110, 111, 112, 123, 125, 173, 202, 205, 208, 212, 213, 215, 216, 217, 218, 220, 222, 223, 224, 226, 229, 238, 239, 243, 246, 247, 248, 250, 319, 348, 349, 350, 351, 352, 353], "andrea": 319, "angiulli": 319, "angiulli2002": 319, "ani": [45, 115, 152, 196, 254, 257, 275, 276, 277, 278, 302, 314, 321, 327, 330, 333, 334, 350, 358], "anim": 45, "animationdur": 45, "animationdurationupd": 45, "animationeas": 45, "animationeasingupd": 45, "animationthreshold": 45, "annal": [322, 326, 329], "annot": 321, "anomal": [218, 351], "anomali": [109, 319, 323], "anoth": [4, 19, 20, 64, 65, 318, 320, 326, 328, 347, 351], "anova": [217, 336, 339], "anyon": [25, 26], "apart": 330, "api": [29, 30, 31, 32, 42, 313, 315, 319, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 358], "apierror": [], "aplei": 326, "apley2016": [326, 328], "appear": 333, "appli": [4, 8, 113, 117, 118, 156, 172, 203, 208, 212, 213, 216, 219, 264, 266, 267, 268, 275, 277, 281, 282, 313, 315, 318, 326, 327, 329, 334, 337, 342, 343, 347, 348, 350, 351, 352], "applic": [106, 201, 220, 322, 337, 338, 341, 342, 352], "appnam": 30, "approach": [111, 319, 322, 323, 327, 334, 335, 341, 342, 349, 356], "appropri": [117, 136, 314, 319, 341, 347], "approv": [347, 352], "approx": [292, 348], "approxim": [117, 247, 322, 326, 327, 332, 334, 350, 353], "april": [313, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "ar": [4, 45, 106, 108, 109, 111, 116, 117, 123, 124, 125, 127, 128, 131, 132, 134, 156, 199, 200, 201, 203, 205, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 231, 238, 239, 247, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 302, 314, 315, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 343, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358], "arang": [7, 31, 32, 33, 358], "arbitrari": [28, 34, 41, 258, 259, 260, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 279, 280, 283, 288, 289, 294, 295, 345, 355, 361], "arbmodel": 358, "architectur": [264, 265, 281, 282, 335, 336, 337, 350, 351, 352], "area": [348, 349, 350, 351, 353], "arg": [99, 141, 258, 259, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 279, 280, 288, 289], "argument": [45, 99, 141, 216, 258, 259, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 279, 280, 288, 289, 291, 302, 313, 315, 318, 322, 328, 329, 330, 331, 332, 334, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "aris": 350, "around": [328, 330, 338, 340, 344, 349], "arrai": [2, 6, 8, 9, 10, 17, 18, 21, 22, 25, 30, 32, 226, 229, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 358], "array_of_bin_edg": [104, 204, 205, 206, 207, 208, 220, 221, 222, 223, 224], "articl": 355, "arxiv": [319, 322, 327, 334], "as_data_fram": 29, "ascend": [191, 319, 357], "asfactor": 29, "ask": 0, "aspect": [319, 340, 350, 351], "assembl": 30, "assess": [106, 115, 206, 211, 214, 218, 219, 221, 314, 315, 318, 321, 324, 326, 333, 337, 338, 339, 340, 341, 342, 343, 344, 347, 349, 351, 352, 353, 356], "assign": [250, 319, 327, 331, 338, 341, 353], "assoc": [115, 321], "associ": [45, 115, 245, 302, 314, 321], "assum": [226, 264, 265, 326, 327, 332, 333, 334, 343, 349, 352], "assumpt": [318, 326, 332, 349, 350], "astyp": [56, 64, 65, 68, 76], "asymmetr": [318, 324], "asymptot": 322, "atemp": [4, 8, 9, 10, 20, 24, 45, 57, 61, 73, 79, 328, 331, 333, 334, 348, 350, 352], "attempt": [212, 213, 226], "attract": [327, 334], "attribut": [44, 48, 215, 260, 283, 314, 322, 327, 331, 334, 347, 361], "auc": [13, 15, 17, 19, 21, 23, 25, 36, 38, 39, 42, 47, 50, 54, 56, 60, 68, 72, 76, 199, 202, 203, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 220, 222, 224, 244, 290, 291, 292, 293, 298, 326, 333, 343, 347, 349, 353, 356], "auc_rank": [36, 38, 39], "augment": [337, 342, 349, 350, 351], "august": 319, "auth": [], "authent": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "author": 319, "auto": [45, 56, 57, 60, 61, 72, 73, 76, 79, 104, 204, 205, 206, 207, 208, 212, 217, 220, 221, 222, 223, 224, 226, 227, 229, 264, 265, 298, 347, 348, 352, 353], "auto_s": 45, "autom": [0, 47, 335, 348], "automat": [47, 118, 167, 204, 206, 207, 208, 300, 302, 320, 337, 338, 339, 340, 341, 342, 352], "avail": [9, 33, 56, 57, 106, 113, 116, 127, 128, 129, 131, 132, 134, 135, 140, 199, 200, 201, 205, 210, 211, 212, 213, 216, 217, 220, 221, 222, 223, 224, 226, 227, 229, 234, 235, 263, 264, 265, 274, 281, 282, 286, 287, 290, 291, 292, 293, 302, 317, 320, 326, 327, 330, 332, 334, 340, 344, 349, 356], "averag": [201, 207, 214, 223, 229, 239, 315, 319, 323, 326, 328, 330, 331, 332, 333, 334, 337, 338, 339, 340, 342, 343, 344, 349, 350, 352], "avg": [9, 33, 64, 65], "avoid": [264, 265, 322, 343, 351, 352], "awar": [347, 351], "axi": [31, 32, 76, 109, 110, 111, 113, 114, 199, 200, 202, 204, 206, 207, 208, 214, 215, 218, 219, 226, 227, 228, 229, 230, 231, 237, 240, 242, 246, 247, 248, 292, 313, 314, 315, 331, 334, 343, 358], "axislabel": 45, "axislin": 45, "axispoint": 45, "axistick": 45, "b": [318, 322, 324, 326, 342, 343, 347, 352], "b140": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "b_i": 342, "back": [264, 266, 268, 275, 277, 281, 352], "backend": 41, "background": [231, 327, 334], "backgroundcolor": 45, "backpropag": 342, "backslash": [327, 334], "backward": [124, 322], "bad": 298, "bade28": 45, "bag": 352, "balanc": [213, 314, 317, 337, 338, 342, 347, 348, 350, 351, 352], "bandwidth": 330, "bank": [350, 351, 352], "bar": [106, 112, 113, 123, 125, 198, 199, 200, 201, 203, 211, 212, 216, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 246, 247, 248, 290, 291, 292, 293, 302, 313, 314, 315, 321, 327, 328, 331, 332, 334, 340, 343, 349], "basak": 322, "base": [0, 109, 110, 111, 113, 115, 123, 124, 125, 150, 156, 172, 173, 200, 203, 204, 206, 207, 208, 211, 212, 216, 219, 220, 222, 223, 224, 238, 257, 266, 267, 268, 269, 276, 277, 278, 290, 291, 292, 293, 298, 302, 313, 314, 316, 317, 318, 320, 321, 322, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 344, 347, 348, 349, 350, 351, 352, 353, 356, 357], "base_scor": [9, 21, 22, 46, 54, 55, 56], "baselin": [213, 231, 351, 352], "baseline_dataset": [80, 231], "baseline_sample_index": [80, 231], "baseline_sample_s": [80, 231], "basi": [319, 352], "basic": [1, 11, 13, 23, 24, 29, 45, 100, 311, 316, 320, 339, 361], "batch": [56, 57, 64, 65, 72, 73, 76, 220, 221, 222, 223, 224, 264, 265, 277, 278, 281, 282, 356, 357], "batch_siz": [264, 265, 281, 282], "batch_size_infer": [264, 265], "bcbd22": 45, "becaus": [99, 227, 326, 328, 331, 337, 338, 339, 342], "becom": [327, 331, 334, 351], "been": [144, 343], "befor": [117, 152, 164, 172, 217, 247, 264, 265, 352, 353], "begin": [318, 319, 323, 324, 326, 327, 328, 329, 330, 332, 334, 337, 339, 343, 347, 348, 350, 351], "behav": 351, "behavior": [218, 224, 319, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 351, 353, 356], "behind": 319, "being": [110, 199, 201, 202, 203, 204, 206, 207, 208, 243, 326, 327, 328, 333, 334], "belong": [319, 323], "below": [124, 313, 314, 315, 317, 319, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353, 358], "benchmark": [335, 347, 352], "benefici": 322, "benefit": [327, 334, 340, 341, 344], "benign": 352, "bernhard": [319, 322], "best": [15, 16, 264, 265, 291, 313, 341, 349], "beta": [348, 350], "beta_1": 339, "beta_2": 339, "beta_l": 339, "better": [5, 110, 213, 313, 315, 319, 326, 330, 333, 337, 338, 339, 340, 342, 343, 348, 349, 350, 356], "between": [3, 7, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 106, 109, 110, 111, 113, 114, 115, 117, 123, 172, 200, 201, 206, 207, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 227, 242, 291, 313, 315, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 332, 333, 334, 337, 339, 340, 341, 342, 348, 349, 350, 351, 352, 353], "beyond": [326, 328], "bi_featur": [328, 332], "bia": [242, 245, 269, 314, 335, 339, 343, 347, 348, 349, 353], "bias": [326, 328, 342, 343, 347, 353], "bigl": 341, "bigr": 341, "bike": 315, "bikeshar": [2, 4, 6, 8, 9, 10, 14, 16, 18, 20, 22, 24, 26, 37, 45, 50, 51, 54, 55, 57, 61, 65, 69, 73, 79, 140, 317, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352], "bill_amt1": [2, 3, 5, 25, 56, 64, 72, 76, 347, 353], "bill_amt2": [2, 3, 5, 25, 56, 72, 76], "bill_amt3": [2, 3, 5, 25, 56, 72, 76], "bill_amt4": [2, 3, 5, 25, 56, 64, 72, 76], "bill_amt5": [2, 3, 5, 25, 56, 64], "bill_amt6": [2, 3, 5, 25, 56], "bin": [5, 56, 57, 60, 61, 76, 104, 106, 112, 118, 204, 205, 206, 207, 208, 212, 213, 217, 220, 221, 222, 223, 224, 313, 318, 319, 324, 326, 328, 348, 349, 350, 351, 352], "bin_numer": [5, 317], "binar": [264, 266, 268, 275, 277, 281], "binari": [29, 46, 54, 56, 116, 117, 118, 168, 210, 226, 227, 229, 264, 266, 268, 275, 277, 281, 313, 319, 326, 327, 328, 329, 330, 331, 332, 333, 334, 343, 350], "binaryclassifi": 29, "binning_featur": 212, "binning_method": [76, 212, 347], "bird": 356, "bit": [327, 334], "bivari": [72, 73, 76, 113, 316, 347, 350, 352], "black": [45, 326, 338, 343], "blank": 45, "bleich": 330, "block": [264, 265], "blue": 334, "blursiz": 45, "bogdan": [326, 329], "bolder": 45, "bonu": [327, 334], "bool": [109, 111, 136, 152, 164, 172, 179, 187, 191, 193, 198, 200, 205, 211, 212, 213, 215, 221, 228, 246, 247, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 302], "boolean": [138, 205, 206, 207, 208, 220, 221, 222, 223, 224], "boost": [207, 214, 266, 267, 277, 278, 311, 326, 336, 341, 342, 349, 352, 355], "booster": [9, 21, 22, 46, 54, 55, 56], "boosting_typ": [23, 24, 25, 26, 36, 38, 39, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "borboudaki": 322, "borboudakis2019": 322, "bordercolor": 45, "bordertyp": 45, "borderwidth": 45, "both": [104, 110, 114, 115, 116, 117, 136, 199, 210, 213, 220, 222, 228, 237, 238, 264, 265, 266, 267, 268, 275, 277, 281, 314, 315, 319, 321, 323, 327, 328, 330, 334, 335, 337, 338, 340, 341, 342, 343, 344, 347, 348, 350, 351, 352, 358], "botta": 319, "bottom": [45, 331], "bound": [200, 205, 211, 212, 213, 221, 352], "boundari": [104, 118, 322, 348], "boundary_clip": [264, 265], "box": [72, 113, 219, 315, 321, 326, 338, 343, 344], "boxplot": 315, "break": [5, 9, 10, 29, 30, 31, 32, 33, 47, 76, 327, 334], "breiman": [326, 333], "bridg": 342, "brief": 319, "briefli": [319, 343], "brier": [13, 15, 19, 21, 23, 25, 36, 38, 39, 42, 199, 202, 203, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 220, 222, 224, 290, 291, 292, 293, 313, 349, 356], "brier_rank": 36, "broader": 347, "broken": [326, 333], "bruce": 322, "brush": 45, "brute": [326, 332, 356], "build": [12, 41, 335, 337, 338, 339, 347, 348, 351, 353, 355, 358], "builder": 30, "built": [86, 140, 256, 327, 334, 357], "bundl": [337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "burden": [319, 322, 350], "busi": [335, 338, 349], "by_weight": [200, 205, 211, 212, 213, 221], "c": [319, 326, 330, 332, 343, 347, 352], "c_": 350, "c_1": 341, "c_2": 341, "c_j": 341, "c_k": 341, "cach": [100, 299], "cal": 350, "calcul": [45, 64, 65, 76, 106, 109, 110, 111, 115, 123, 199, 200, 210, 211, 212, 214, 215, 216, 217, 221, 222, 223, 226, 227, 228, 229, 230, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 290, 291, 292, 293, 313, 315, 318, 319, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 341, 343, 349, 350, 351, 352], "calhous": 2, "calibr": [64, 65, 201, 207, 214, 223, 275, 276, 313, 341, 347, 350], "california": [31, 32, 355, 357], "californiah": [140, 317, 357], "call": [104, 302, 315, 320, 326, 328, 330, 332, 343], "callabl": [109, 110, 111, 257, 260, 283, 294, 295], "callback": [9, 21, 22, 46, 54, 55, 56], "can": [46, 64, 86, 100, 104, 113, 115, 118, 127, 128, 131, 132, 134, 135, 136, 156, 165, 201, 202, 203, 210, 211, 212, 213, 214, 215, 216, 218, 219, 226, 227, 229, 237, 275, 276, 290, 292, 298, 300, 302, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358], "candid": [269, 322, 337, 341, 349, 350, 356, 357], "cannot": [104, 172, 204, 205, 206, 207, 208, 220, 221, 222, 223, 224, 314], "capabl": [319, 321, 322, 335, 338, 340, 344, 348], "capac": [348, 350], "capit": [315, 328, 329, 330, 331, 332, 333, 334], "capsul": 29, "captur": [115, 266, 267, 319, 321, 331, 337, 338, 339, 341, 348, 349, 350, 351, 353], "card": [313, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "care": 319, "carefulli": 347, "carlo": [291, 327], "cartesian2d": 45, "cascad": 338, "case": [203, 219, 317, 320, 326, 327, 331, 333, 339, 348, 349, 350, 351, 352], "catboost": [100, 258, 259, 338, 349, 351, 352], "catboost2": 42, "catboostclassifi": 258, "catboostregressor": 259, "categor": [2, 3, 5, 19, 20, 23, 25, 26, 56, 57, 103, 104, 112, 113, 114, 115, 116, 117, 118, 120, 123, 136, 158, 173, 200, 204, 205, 206, 207, 208, 211, 212, 213, 220, 221, 222, 223, 224, 226, 238, 239, 263, 264, 265, 274, 292, 313, 315, 321, 322, 328, 332, 338, 339, 340, 341, 342, 347, 348, 349, 350, 351, 353], "categori": [3, 5, 45, 114, 116, 117, 118, 200, 205, 211, 212, 213, 221, 292, 319, 320, 323, 328, 337, 338, 339, 340, 341, 342, 352], "categorical_encod": [116, 117], "caus": [323, 347, 352], "causal": [322, 335], "caution": 322, "cblof": [109, 316, 335], "cboost_model": 338, "ccc": 45, "ccp_alpha": [15, 16], "cdf": [319, 322, 351, 352], "cdot": [337, 338, 342, 348, 349], "cell": [3, 5, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "center": [13, 14, 17, 18, 19, 20, 23, 24, 25, 26, 45, 80, 109, 156, 228, 246, 247, 250, 275, 276, 323, 326, 328, 331, 337, 338, 339, 340, 341, 342, 343, 351], "central": [345, 357], "centroid": [21, 22, 250, 275, 276, 292, 319, 323, 341], "certain": [23, 315, 318, 319, 320, 326, 327, 332, 334, 337, 338, 339, 342, 347], "cezar": 319, "ch": 2, "chain": 335, "challeng": [202, 218, 327, 334, 341, 347, 351], "chang": [15, 16, 72, 73, 128, 219, 229, 315, 318, 319, 322, 323, 324, 330, 331, 338, 340, 344, 347, 348, 349, 350, 351, 352, 353], "changed_name_kei": 45, "charact": 322, "character": [350, 353], "characterist": [203, 250, 319, 323, 341, 352], "chart": [112, 313, 315, 321, 332], "chart_id": 45, "chatterje": [115, 321], "chatterjee2021": 321, "chebyshev": 117, "check": [5, 76, 127, 128, 131, 132, 134, 135, 145, 315, 337, 341, 342, 348, 349, 350, 351, 352, 353], "chen": [319, 323], "chi": 343, "child": 319, "ching": [319, 323], "choic": [319, 338, 343, 344], "choos": [201, 291, 319, 323, 341, 348, 352], "chosen": [111, 207, 215, 313, 351, 352], "circl": [315, 319], "circumst": 351, "clara": 319, "clariti": [215, 264, 265, 337], "class": [0, 42, 45, 172, 200, 205, 211, 212, 213, 215, 221, 226, 227, 229, 231, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 302, 317, 321, 345, 347, 349, 350, 358], "class_weight": [15, 23, 24, 25, 26, 36, 38, 39, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "classic": [], "classif": [0, 12, 27, 29, 30, 32, 41, 47, 49, 52, 53, 58, 59, 62, 63, 66, 67, 70, 71, 74, 75, 77, 82, 110, 111, 168, 174, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 260, 268, 275, 277, 281, 286, 290, 291, 292, 293, 312, 317, 319, 320, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 350, 351, 352, 353, 356, 358, 361], "classifi": [28, 34, 41, 214, 249, 264, 266, 275, 281, 284, 294, 296, 319, 323, 327, 338, 344, 349, 358, 361], "classmethod": 251, "clean": [100, 317, 348], "cleaner": 338, "clear": [328, 337, 338, 341], "clear_mlflow_hom": [0, 100], "clearer": 338, "clearli": 319, "click": 45, "client": [313, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "clip": [45, 264, 265, 266, 267, 268, 269], "clip_predict": [23, 24, 266, 267, 268, 269], "close": [115, 315, 321, 331, 343, 347], "closer": 227, "cluster": [68, 69, 109, 202, 203, 216, 218, 239, 250, 275, 276, 323, 335, 341, 346, 348, 349], "cluster_id": [349, 350, 351, 352], "cluster_label": 216, "cluster_method": [50, 51, 216, 349, 350, 351, 352], "cluster_no": 341, "cluster_perform": [50, 51, 216, 349], "cluster_qr": 351, "cluster_residu": [50, 51, 216, 349], "cluster_threshold": 109, "cma": [39, 291], "cmaessampl": 291, "cnt": [9, 10, 14, 16, 18, 20, 22, 24, 26, 37, 51, 55, 57, 61, 65, 69, 73, 79, 315, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352], "coalit": [327, 334], "coarser": 347, "code": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 86, 100, 113, 313, 314, 315, 318, 319, 320, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353], "coef": 334, "coeffcient": [340, 343], "coeffici": [115, 217, 228, 237, 242, 245, 247, 316, 321, 327, 331, 334, 337, 339, 340, 342, 343, 349], "coefici": [340, 343], "col_nam": [29, 45], "colab": 86, "collect": [30, 348, 350, 351, 353], "color": [3, 45, 113, 114, 321], "colorbi": 45, "colsample_bylevel": [9, 46, 54, 55, 56], "colsample_bynod": [9, 46, 54, 55, 56], "colsample_bytre": [9, 23, 24, 25, 26, 36, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "colsiz": 45, "column": [2, 3, 5, 8, 9, 10, 17, 18, 29, 30, 31, 32, 33, 45, 56, 57, 60, 61, 64, 65, 72, 73, 76, 102, 103, 116, 117, 118, 136, 160, 161, 166, 200, 205, 211, 212, 213, 221, 238, 317, 358], "com": 29, "combin": [9, 124, 227, 231, 268, 269, 275, 276, 277, 278, 302, 319, 322, 323, 327, 334, 339, 340, 341, 348, 349, 351, 353, 356], "come": [227, 327, 334, 347], "command": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 99, 100], "commiss": 347, "common": [327, 334, 350, 351, 353, 356], "commonli": [318, 319, 326, 332, 347], "compar": [57, 68, 69, 72, 73, 76, 106, 199, 200, 201, 202, 203, 204, 206, 207, 208, 213, 227, 312, 313, 314, 315, 318, 319, 328, 331, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353], "compare_accuraci": 46, "compare_accuracy_t": [47, 54, 55, 349], "compare_fair": [76, 347], "compare_reli": [64, 65, 350], "compare_resili": [68, 69, 351], "compare_resilience_clust": 351, "compare_robust": [47, 72, 73, 352], "compare_slicing_accuraci": [56, 57, 353], "compare_slicing_fair": [76, 347], "compare_slicing_overfit": [60, 61, 348], "compare_slicing_reli": [64, 65, 350], "compare_slicing_robust": [72, 73, 352], "comparison": [0, 106, 199, 204, 205, 206, 207, 211, 250, 337, 338, 339, 340, 342, 343, 346], "compat": [136, 260, 283, 335, 340, 344], "compet": 347, "competit": 337, "complement": [172, 319, 326, 330, 332], "complementari": 349, "complet": [116, 173, 241, 265, 281, 282, 344], "complex": [266, 267, 268, 319, 326, 332, 341, 343, 349], "compliant": 347, "complic": [343, 353], "compon": [104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 136, 156, 172, 173, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 223, 224, 238, 240, 242, 243, 244, 245, 246, 247, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 321, 323, 337, 338, 339, 340, 341, 342, 343, 347], "composit": 349, "comprehens": [115, 173, 200, 202, 203, 319, 321, 323, 335, 338, 347, 356, 359], "compris": [313, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "comput": [100, 109, 110, 111, 115, 116, 125, 156, 173, 204, 205, 206, 207, 211, 212, 220, 221, 222, 223, 224, 226, 230, 231, 238, 240, 243, 246, 247, 264, 265, 266, 268, 275, 276, 277, 278, 281, 282, 318, 319, 322, 323, 326, 327, 328, 329, 330, 332, 333, 334, 338, 339, 341, 347, 348, 349, 350, 351, 353, 360], "computation": [350, 356], "concat": [31, 32, 358], "concaten": 33, "concept": [327, 334, 339, 349], "conceptu": [337, 342], "concern": 347, "conclus": [315, 347], "concord": [115, 321], "conda": 86, "condit": [124, 201, 218, 224, 316, 319, 327, 334, 335, 347, 349, 350, 351, 352, 353], "conduct": [4, 208, 322, 335, 351], "confer": [319, 323, 327], "confid": [214, 216, 349, 350, 351, 353], "config": [76, 209, 253], "configur": [5, 45, 46, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 118, 123, 124, 125, 136, 156, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 290, 291, 292, 293, 302, 317, 330, 347, 351], "confin": 45, "conflict": [100, 347], "conform": [64, 65, 214, 335, 346], "confus": [54, 210, 214], "confusion_matrix": [46, 54, 210], "consecut": 351, "consequ": 314, "consid": [109, 111, 123, 219, 230, 266, 267, 268, 313, 314, 319, 323, 326, 327, 329, 332, 333, 334, 337, 338, 342, 343, 347, 348, 349], "consider": [136, 315, 350], "consist": [115, 156, 216, 315, 321, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353], "constant": [136, 317, 330, 338, 339, 348, 351, 352], "constrain": [338, 349], "constrainst": 348, "constraint": [264, 265, 277, 278, 336, 347, 349, 350, 351, 352], "construct": [269, 302, 319, 323, 338, 350], "consum": 334, "contain": [0, 41, 86, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 136, 144, 152, 156, 172, 173, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 311, 319, 323, 333, 339, 350, 353], "containlabel": 45, "content": [225, 299], "context": [290, 291, 292, 293, 319, 326, 327, 332, 334, 347], "contextu": 347, "continu": [45, 104, 115, 282, 315, 319, 321, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 352, 353, 357], "contrast": [319, 323, 331], "contribut": [217, 228, 231, 247, 266, 267, 319, 323, 327, 330, 331, 333, 334, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 352], "control": [104, 111, 164, 204, 205, 206, 207, 208, 220, 221, 222, 223, 224, 227, 229, 231, 238, 257, 268, 291, 319, 320, 332, 335, 337, 338, 340, 342, 343, 347, 352], "conveni": [315, 358], "converg": [338, 341], "convers": [314, 319], "convert": [29, 30, 116, 117, 118, 137, 184, 277, 278, 342, 352], "coordin": [242, 250], "coordinatesystem": 45, "copy_x": [14, 37], "coral": [319, 323], "core": [231, 264, 265, 281, 282], "correct": 338, "correctli": 349, "correl": [45, 115, 123, 316, 319, 323, 326, 327, 328, 332, 334, 335, 348], "correspond": [202, 226, 229, 230, 237, 240, 286, 287, 291, 319, 323, 327, 334, 337, 341, 342, 343, 353, 356], "corrratio": 322, "corrupt": 323, "cosin": 117, "cost": [264, 265, 337, 342, 347, 348, 349, 350, 351], "could": [264, 265, 327, 334, 349], "count": [3, 17, 18, 244, 245, 315, 320, 328, 329, 330, 331, 332, 333, 334, 343, 349], "count_llm": 245, "covari": [319, 322, 323, 335, 350], "cover": 345, "coverag": [9, 33, 64, 65, 201, 207, 214, 216, 223, 350], "cp": 350, "cpu": [17, 18, 19, 20, 23, 24, 264, 265, 277, 278, 281, 282], "creat": [5, 46, 104, 112, 113, 114, 116, 117, 118, 136, 144, 207, 215, 216, 227, 229, 237, 238, 239, 240, 241, 242, 249, 275, 276, 277, 278, 294, 295, 296, 297, 300, 302, 317, 319, 327, 328, 331, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "createdatafram": 30, "credit": [5, 347], "criteria": 347, "criterion": [15, 16, 344, 347, 351], "critic": [341, 343, 347, 348, 349], "cross": [275, 276, 290, 291, 292, 293, 322, 349, 356], "crowd": 315, "crqr": 350, "crucial": [323, 331, 356], "csur": 322, "csv": [29, 141, 145], "cubicout": 45, "cuda": [277, 278, 281, 282], "cultur": 347, "cumul": [111, 211, 318, 324, 351, 352], "cumulative_variance_threshold": 111, "cup": [327, 334], "current": [113, 114, 196, 254, 338], "cursor": 45, "curv": [3, 54, 113, 210, 326, 328, 349, 351], "custer": 351, "custom": [56, 57, 106, 200, 205, 211, 213, 221, 266, 267, 268, 269, 275, 276, 277, 278, 320, 335, 351, 352], "custom_tooltip": 45, "customiz": 112, "customm": 353, "cutoff": 213, "cv": [36, 37, 38, 39, 275, 276, 290, 291, 292, 293, 356], "cyclic": [14, 37], "d": [2, 3, 4, 5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 137, 144, 184, 200, 201, 202, 203, 211, 214, 216, 218, 219, 292, 317, 318, 322, 324, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358], "d1": 3, "d2": 3, "d62728": 45, "d_": [318, 324, 326, 329, 350], "d_j": [326, 329], "d_k": [326, 329], "dag": 257, "dai": [328, 330, 332], "daniel": 326, "darker": 328, "dashboard": [100, 335], "data": [0, 1, 4, 6, 8, 11, 45, 46, 47, 50, 51, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 150, 151, 152, 154, 156, 162, 163, 164, 165, 171, 172, 173, 179, 184, 185, 186, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 302, 311, 313, 315, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 349, 353, 361], "data_drift": 106, "data_drift_test": [7, 21, 22, 50, 51, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 200, 201, 202, 203, 211, 214, 216, 218, 219, 324, 341, 348, 349, 350, 351, 352, 353], "data_eda_1d": 112, "data_eda_2d": 113, "data_eda_3d": 114, "data_eda_correl": [45, 115], "data_eda_pca": 116, "data_eda_umap": 117, "data_fs_corr": 123, "data_fs_rcit": 124, "data_fs_xgbpfi": 125, "data_info": [21, 22, 50, 51, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 200, 201, 202, 203, 211, 214, 216, 218, 219, 250, 298, 341, 348, 349, 350, 351, 352, 353], "data_outlier_cblof": 109, "data_outlier_isolationforest": 110, "data_outlier_pca": 111, "data_path": [141, 146], "data_preprocess_bin": 104, "data_preprocess_encod": 118, "data_preprocess_imput": 136, "data_preprocess_sc": 156, "data_qu": 319, "data_result": [21, 22, 50, 51, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 200, 201, 202, 203, 211, 214, 216, 218, 219, 341, 348, 349, 350, 351, 352, 353], "data_summari": [173, 320], "databas": [251, 257, 317], "datafram": [5, 9, 10, 30, 31, 32, 33, 45, 105, 106, 109, 110, 111, 115, 116, 117, 123, 124, 125, 136, 137, 139, 142, 143, 151, 162, 163, 165, 173, 179, 184, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 237, 238, 240, 244, 246, 247, 251, 302, 317, 329, 355, 358], "dataset": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 86, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 264, 265, 266, 267, 278, 281, 282, 286, 287, 290, 291, 292, 293, 298, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 361], "dataset1": [7, 106, 298], "dataset2": [7, 106, 298], "datazoom": 45, "dateutil": 100, "daytim": 332, "dde318": 45, "de": 343, "deactiv": [337, 338, 339, 341, 342, 343, 348, 349, 350, 351, 352], "deal": [1, 11, 264, 265, 352, 361], "debias": 347, "debug": 349, "decid": [319, 352], "decis": [12, 27, 41, 226, 227, 229, 241, 249, 264, 266, 268, 269, 275, 277, 281, 311, 327, 331, 334, 336, 339, 341, 347, 348, 349, 352, 361], "decision_funct": [226, 227, 229, 328, 329, 330, 332], "decisiontre": 357, "decisiontreeclassifi": [261, 344], "decisiontreeregressor": [262, 344], "declin": 351, "decompos": [327, 334, 337, 338, 339, 341, 342, 348], "decomposit": 343, "decreas": [23, 24, 115, 264, 265, 266, 267, 268, 269, 277, 278, 321, 337, 338, 342, 347], "dedegr": 335, "dedic": 314, "deep": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 335, 343, 358], "deeper": 341, "def": [29, 30, 32, 47, 358], "default": [4, 45, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 127, 128, 131, 132, 134, 135, 136, 139, 145, 152, 156, 157, 159, 164, 172, 173, 179, 191, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 300, 301, 302, 313, 315, 318, 319, 323, 327, 328, 329, 330, 331, 332, 333, 334, 343, 347, 356], "defin": [29, 200, 204, 205, 207, 208, 211, 213, 221, 224, 275, 276, 290, 291, 317, 318, 319, 322, 324, 326, 327, 329, 330, 332, 334, 338, 341, 343, 347, 348, 352, 353, 356, 358], "definit": [200, 204, 205, 206, 207, 208, 211, 220, 221, 222, 223, 224, 326, 328, 346], "degrad": [315, 326, 333, 335, 351, 352, 353], "delet": [107, 108, 189, 299, 317, 322], "delete_extra_data": 10, "delete_registered_data": 317, "delinqu": 317, "deliv": 341, "delta": [348, 351, 352], "demo": [2, 9, 33, 317, 319], "demograph": [162, 163, 200, 314, 347], "demonstr": [42, 45, 46, 47, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 313, 314, 315, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 355, 358], "deng": [319, 323], "dengel": 319, "denomin": 227, "denot": [326, 327, 330, 333, 334, 341, 343, 347], "densiti": [3, 7, 50, 51, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 106, 109, 110, 111, 112, 200, 201, 202, 203, 211, 214, 216, 218, 219, 318, 319, 321, 328, 348, 349, 350, 351, 352, 353], "depend": [100, 112, 115, 226, 227, 229, 319, 321, 322, 325, 327, 329, 330, 335, 347, 349], "depict": 314, "deploi": [335, 337, 342, 353], "deploy": 351, "dept": [319, 323], "depth": [201, 207, 214, 216, 217, 220, 221, 223, 224, 266, 267, 268, 269, 277, 278, 319, 341, 349, 350, 352], "depth2": [356, 357], "depth5": 357, "deriv": [315, 319], "descend": [322, 343], "descent": [23, 24, 343], "describ": [152, 313, 319, 322, 326, 328, 332], "descript": [152, 173, 196, 254, 317, 348, 353], "design": [128, 298, 319, 327, 334, 335, 337, 347, 352, 357], "desir": [318, 319, 323, 324, 337, 342, 350, 352, 353], "despit": [343, 351], "detail": [25, 45, 115, 173, 199, 200, 201, 203, 204, 205, 206, 207, 214, 216, 218, 219, 238, 246, 251, 292, 293, 302, 313, 315, 319, 321, 322, 323, 326, 327, 335, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353], "detect": [0, 1, 11, 86, 109, 110, 111, 115, 202, 218, 220, 222, 311, 313, 315, 316, 321, 335, 346, 347, 349, 350, 361], "detect_outlier_cblof": [8, 323], "detect_outlier_isolation_forest": [8, 323], "detect_outlier_pca": [8, 323], "determin": [109, 214, 219, 238, 269, 276, 291, 292, 293, 318, 319, 320, 323, 324, 326, 327, 332, 334, 341, 349, 350, 351, 352, 353, 356], "dev": 100, "develop": [86, 100, 245, 315, 317, 318, 328, 329, 330, 331, 332, 333, 334, 335, 341, 343, 349, 350, 351, 359], "deviat": [216, 219, 242, 244, 317, 319, 320, 323, 348, 351, 352], "devic": [9, 17, 18, 19, 20, 23, 24, 46, 54, 55, 56, 264, 265, 277, 278, 281, 282], "df": [30, 317], "di": 347, "diagnos": 348, "diagnose_accuracy_residual_fi": 353, "diagnose_accuracy_t": [9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 36, 37, 38, 39, 46, 54, 55, 337, 338, 339, 340, 341, 342, 343, 344, 347, 349, 353, 358], "diagnose_fair": [76, 347], "diagnose_mitigate_unfair_bin": [76, 347], "diagnose_mitigate_unfair_threshold": [76, 347], "diagnose_reli": [9, 33, 64, 65, 350], "diagnose_residu": 215, "diagnose_residual_analysi": [9, 33, 50, 51, 349], "diagnose_residual_clust": [50, 51, 349, 350, 352], "diagnose_residual_fi": 353, "diagnose_residual_interpret": [50, 51, 349], "diagnose_resili": [9, 33, 68, 69, 351], "diagnose_resilience_clust": [216, 351], "diagnose_robust": [72, 73, 352], "diagnose_slicing_accuraci": [9, 33, 56, 57, 353], "diagnose_slicing_fair": [76, 347], "diagnose_slicing_overfit": [9, 33, 60, 61, 348], "diagnose_slicing_reli": [64, 65, 350], "diagnose_slicing_robust": [72, 73, 298, 352], "diagnost": [0, 311, 312, 335, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 351, 352, 353], "diagram": [241, 249, 344], "dict": [45, 104, 152, 196, 200, 204, 205, 206, 207, 208, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 302], "dictionari": [104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 136, 152, 156, 172, 173, 187, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 268, 290, 291, 292, 293, 298, 356], "differ": [7, 41, 42, 46, 56, 57, 60, 61, 106, 123, 173, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 218, 219, 221, 224, 242, 243, 275, 276, 312, 313, 314, 315, 317, 318, 322, 323, 324, 326, 327, 328, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353, 356], "differenti": [341, 342], "difficult": [202, 218, 227, 351], "diistribut": 335, "dill": 100, "dimens": [45, 117, 319, 338], "dimension": [111, 117, 318, 319, 321, 323, 348, 349], "direct": [115, 321, 335, 337, 338, 339, 340, 342, 343, 344, 349, 351, 358], "directli": [275, 276, 313, 314, 327, 333, 334, 340, 343, 344, 347, 348], "directori": [300, 301, 302], "disabl": [2, 317], "disadvantag": [322, 353], "discontinu": 339, "discord": [115, 321], "discov": [319, 323], "discoveri": [319, 322, 327], "discrep": [318, 319, 351], "discret": [104, 318, 324], "discrimin": [314, 347], "diseas": 347, "disentangl": [337, 343], "displai": [106, 193, 199, 200, 201, 205, 210, 211, 212, 213, 216, 217, 220, 221, 222, 223, 224, 225, 237, 290, 291, 292, 293, 302, 313, 314, 315, 318, 319, 334, 337, 338, 339, 340, 341, 342, 343, 344, 350, 351, 353], "display_plot": 225, "display_t": 225, "disproportion": [351, 352], "dissimilar": [318, 319, 323], "distanc": [106, 109, 111, 117, 200, 211, 216, 319, 323, 324, 328, 335, 341, 349, 350, 352], "distance_metr": [7, 21, 22, 50, 51, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 106, 318, 341, 348, 349, 350, 351, 352, 353], "distance_scor": 106, "distinct": [114, 314, 319, 338, 341], "distinguish": [109, 337, 349], "distribut": [56, 57, 76, 106, 112, 201, 202, 211, 214, 216, 218, 219, 243, 291, 293, 298, 313, 315, 316, 321, 322, 323, 327, 334, 335, 340, 341, 346, 347, 348, 349, 350, 353, 356], "divers": [335, 341, 345, 347], "divid": [226, 319, 323, 326, 328, 344, 348, 353], "divis": 344, "dnn": 336, "do": [9, 320, 326, 327, 328, 333, 334, 358], "doc": [], "document": [326, 330, 333], "doe": [23, 115, 300, 319, 321, 323, 327, 328, 329, 330, 331, 332, 333, 347, 348], "doesn": [108, 266, 267], "doi": [319, 323], "domain": [337, 338, 342, 348, 350, 351, 352], "dominik": 322, "done": [313, 328, 331, 348, 352], "dot": [315, 319], "down": [326, 327, 328, 334], "download": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "downsampl": [327, 334], "downstream": 165, "draw": [64, 328, 334], "drawn": [113, 231, 352], "drift": [0, 1, 11, 50, 51, 60, 61, 64, 65, 68, 69, 72, 73, 76, 106, 298, 311, 316, 335, 341, 346, 349, 350, 352, 353, 361], "drive": [349, 353], "driven": [335, 341, 347, 349, 353], "driver": 341, "drop": [76, 124, 218, 322, 326, 333, 352], "ds_new": 42, "dsload": 2, "dt": 42, "dtype": [17, 18, 136], "dual": 238, "due": [100, 220, 221, 223, 224, 317, 341, 343, 348, 351, 352], "duplic": [3, 5, 317], "durat": 42, "dure": [198, 216, 219, 277, 278, 281, 282, 318, 328, 330, 331, 332, 351, 356], "dx": [318, 324, 349, 351], "dx_": [326, 332], "dx_k": [337, 338, 342], "dynam": [335, 341], "e": [25, 39, 107, 136, 137, 156, 162, 163, 165, 184, 201, 202, 203, 204, 205, 206, 207, 208, 211, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 291, 302, 318, 319, 322, 323, 324, 326, 327, 328, 329, 330, 332, 334, 335, 337, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 356], "e377c2": 45, "e_": 348, "eaaa4301": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "each": [30, 50, 51, 64, 65, 104, 106, 116, 117, 118, 136, 156, 173, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 240, 246, 247, 250, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 298, 302, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 338, 339, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 356, 357], "earli": [23, 124, 264, 265, 266, 267, 277, 278, 281, 282, 322, 348, 352], "early_stop_thr": [264, 265], "early_stopping_round": [9, 46, 54, 55, 56], "eas": [335, 338], "easi": [344, 347, 353], "easier": [317, 319, 323, 338], "easili": [319, 323, 355], "ebm": 314, "ecod": 319, "econom": 351, "eda": 321, "eda_1d": [3, 321], "eda_2d": [3, 321], "eda_3d": [3, 321], "eda_correl": [3, 45, 321], "eda_pca": [3, 321], "eda_umap": 3, "edg": [204, 206, 207, 208, 212, 220, 221, 223, 224, 349, 351], "educ": [2, 3, 5, 7, 13, 19, 23, 25, 56, 60, 64, 72, 76, 298, 353], "education_1": 5, "education_2": 5, "education_3": 5, "education_missing_nan": 5, "eeoc": 347, "effect": [23, 24, 42, 50, 51, 213, 217, 226, 227, 228, 229, 231, 235, 237, 238, 239, 246, 264, 265, 277, 278, 319, 323, 325, 330, 331, 332, 334, 335, 339, 340, 343, 347, 348, 349, 350, 351, 352, 353], "effect_import": [50, 51, 217, 349], "effici": [239, 319, 323, 335, 338, 347, 350, 356], "effort": 335, "eigenvalu": [319, 323], "eight": 319, "eighth": [319, 323], "either": [46, 112, 118, 136, 231, 237, 326, 333, 357], "elabor": 319, "elasticnet": [263, 340, 357], "electr": [319, 323], "eleg": 343, "element": [205, 220, 221, 222, 223, 224, 328, 331], "elimin": [124, 319, 322], "ell": 341, "ellipsi": 45, "embed": 216, "emerg": 343, "emil": 330, "emphas": [319, 323], "empir": [201, 211, 318, 346, 350, 351, 352], "emploi": [315, 318, 337, 341, 351], "employ": [347, 351], "empti": [302, 322, 350, 353], "enabl": [317, 320, 335, 338, 341, 342, 345, 349], "enable_categor": [9, 21, 22, 46, 54, 55, 56], "encapsul": [202, 203, 238, 245], "encod": [5, 113, 116, 117, 118, 217, 263, 274, 337, 338, 339, 340, 341, 342, 347, 353], "encode_categor": [5, 47, 317, 347, 353], "encount": [100, 302], "end": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 99, 318, 319, 324, 326, 327, 328, 329, 330, 332, 334, 337, 339, 342, 343, 347, 348, 350, 351], "end_tim": 42, "enforc": [337, 342, 347], "engin": [1, 11, 104, 118, 136, 156, 317, 319, 323, 349, 350, 351, 352, 361], "enhanc": [113, 319, 322, 335, 339, 340, 341, 343, 344, 348, 349, 350, 351, 352, 353], "enough": [337, 343], "ensembl": [12, 27, 41, 110, 238, 240, 246, 270, 271, 275, 276, 279, 280, 319, 323, 326, 327, 329, 334, 339, 342, 348, 349, 350, 351, 352, 361], "ensur": [116, 117, 124, 172, 203, 291, 317, 320, 335, 337, 338, 340, 341, 342, 344, 347, 348, 349, 350, 351, 352, 353], "enter": [45, 320], "enterpris": 335, "entir": [115, 226, 230, 291, 314, 315, 327, 332, 334, 337, 341, 342], "entropi": [349, 351], "env": [], "envelop": [326, 328, 332], "environ": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 86, 300, 301, 351], "epoch": [17, 18, 23, 24, 264, 265, 277, 278, 281, 282], "epsilon": 351, "eq": [], "equal": [104, 116, 201, 204, 206, 207, 208, 212, 220, 221, 222, 223, 224, 227, 229, 264, 265, 318, 324, 327, 334, 343, 347, 351, 353], "equat": [341, 343], "equit": 347, "equiv": 343, "equival": [277, 278, 322, 338, 343, 352], "eric": 322, "erion": [327, 334], "errat": 348, "error": [111, 202, 217, 218, 230, 319, 323, 338, 341, 346, 347, 349, 351, 352], "especi": [315, 347, 352], "essenti": [331, 338, 347, 349, 352], "establish": [340, 347, 351], "estim": [23, 24, 29, 31, 32, 42, 204, 205, 208, 220, 221, 222, 223, 224, 230, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 296, 297, 315, 318, 319, 326, 327, 328, 332, 334, 349, 350, 358], "estimators_": [266, 267], "eta": [47, 292, 342, 343], "eta_k": 338, "etc": [128, 204, 205, 206, 207, 208, 220, 221, 222, 223, 224, 277, 278, 281, 282, 328], "ethic": 347, "ethnic": 347, "euclidean": [117, 319, 323, 341], "european": 319, "eval_metr": [9, 21, 22, 46, 54, 55, 56], "evalu": [8, 47, 50, 51, 54, 55, 64, 65, 106, 125, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 213, 214, 216, 218, 219, 221, 223, 224, 239, 268, 290, 291, 292, 293, 313, 314, 318, 322, 324, 326, 327, 331, 333, 334, 335, 337, 341, 342, 346, 348, 350, 351, 352, 353, 356], "even": [319, 337, 341, 342, 343], "event": 45, "evolv": [335, 351], "exact": 292, "exactli": [327, 334], "examin": [217, 330, 349, 350, 351, 353], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 136, 144, 156, 172, 173, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 290, 291, 292, 293, 298, 312, 316, 325, 336, 345, 346, 361], "exce": 227, "exceed": 125, "excel": 338, "except": [29, 334], "exchang": 350, "exclud": 328, "execut": [47, 99, 257, 290, 317, 335, 347, 353, 361], "exhibit": [220, 319, 343, 351], "exist": [100, 108, 127, 128, 131, 132, 134, 135, 145, 150, 157, 159, 300, 330, 337, 338, 340, 344, 347], "exp": [42, 47, 314, 320, 330, 341], "expand": 300, "expect": [223, 315, 319, 323, 327, 334, 348, 350], "expens": [350, 356], "experi": [42, 251, 317, 335, 351, 356], "experiment": [35, 40, 41, 291, 361], "experiment_id": 42, "experiment_nam": 42, "expert": [12, 27, 41, 238, 239, 240, 246, 248, 250, 275, 276, 311, 335, 336, 348, 350, 351, 361], "expert_id": 250, "expert_nam": 341, "expert_no": 341, "expertis": 341, "explain": [81, 86, 111, 116, 217, 226, 227, 228, 229, 230, 231, 243, 311, 319, 321, 323, 328, 330, 331, 332, 333, 334, 335, 337, 338, 343, 348, 349, 361], "explain_al": 79, "explain_hstatist": 79, "explain_lim": [32, 80], "explain_pdp": [31, 79], "explain_pfi": [32, 46, 79], "explain_shap": [31, 80], "explainableboostingclassifi": 314, "explan": [0, 32, 226, 227, 228, 230, 231, 240, 242, 243, 244, 245, 246, 249, 312, 319, 325, 326, 328, 329, 330, 332, 333, 335, 338, 342, 355], "explicit": [204, 205, 206, 207, 208, 220, 221, 222, 223, 224, 300], "explicitli": [320, 327, 334, 337, 342, 349], "explor": [0, 114, 290, 315, 335, 356], "exploratori": [1, 11, 112, 113, 114, 115, 116, 117, 173, 311, 316, 335, 353, 361], "export": 232, "expos": [351, 352], "express": [264, 265, 343, 349], "extend": [339, 340, 350], "extens": 335, "extent": [318, 324, 347, 351], "extern": [86, 256, 335, 349, 351, 357], "extra": [0, 1, 11, 99, 100, 127, 130, 131, 132, 134, 150, 163, 315, 361], "extract": [25, 30, 190, 237, 298, 343, 349, 351, 353, 355], "extrapol": [326, 328, 332, 338], "extrem": [227, 229, 343, 351], "f": [42, 318, 324, 326, 328, 329, 330, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353], "f1": [13, 15, 19, 21, 23, 25, 36, 38, 39, 42, 199, 202, 203, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 220, 222, 224, 290, 291, 292, 293, 349, 351, 356], "f9f633c8bacb": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "f_": [337, 338, 339, 341, 342, 348, 350, 351], "f_0": 338, "f_i": 342, "f_j": [319, 337, 338, 339, 341, 342], "f_k": [338, 341, 348], "f_m": [338, 339], "f_n": 351, "fabrizio": 319, "face": [218, 341, 352], "facilit": 341, "factor": [29, 109, 323, 327, 334, 337, 341, 342, 347, 350, 351], "fail": [99, 349, 352], "fair": [77, 86, 200, 204, 205, 207, 208, 211, 212, 213, 221, 311, 312, 335, 346, 353, 361], "fairli": [327, 334, 347], "fall": [315, 319, 339, 341, 350], "fals": [9, 14, 21, 22, 23, 24, 33, 37, 42, 45, 46, 47, 54, 55, 56, 57, 60, 61, 64, 65, 72, 73, 76, 80, 109, 111, 138, 152, 172, 179, 187, 191, 193, 198, 215, 225, 257, 264, 265, 266, 267, 268, 269, 277, 278, 281, 282, 302, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 342, 343, 347, 349], "familiar": [340, 344], "fanova": [234, 235, 335], "fanovaar": 349, "far": [319, 323, 326, 332, 351], "fargo": [], "fast": [319, 322, 337], "faster": [216, 326, 328, 332], "favor": 347, "favorable_label": [76, 200, 205, 211, 212, 213, 221, 347], "fbedk": 124, "fde725": 45, "feasibl": 348, "featur": [0, 1, 2, 3, 9, 10, 11, 16, 23, 24, 29, 30, 31, 32, 33, 37, 42, 45, 47, 55, 56, 57, 64, 65, 68, 69, 72, 73, 76, 104, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 134, 136, 147, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 172, 173, 185, 186, 200, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 260, 263, 264, 265, 266, 267, 268, 269, 274, 276, 277, 278, 281, 282, 283, 298, 311, 313, 315, 316, 317, 318, 319, 321, 323, 325, 327, 328, 329, 330, 331, 332, 338, 339, 340, 344, 349, 350, 351, 352, 353, 355, 358, 361], "feature1": [56, 60, 61, 64, 72, 73, 212], "feature2": [56, 60, 61, 64, 72, 73, 212], "feature_color": [3, 113, 114], "feature_exclud": 320, "feature_i": [3, 113, 114], "feature_import": [50, 51, 216, 217, 243, 245, 349], "feature_nam": [2, 4, 13, 14, 23, 24, 30, 31, 32, 42, 104, 106, 156, 204, 205, 206, 207, 208, 212, 220, 221, 222, 223, 224, 227, 243, 245, 263, 264, 265, 274, 277, 278, 298, 317, 337, 340, 343, 347, 358], "feature_name1": [264, 265], "feature_name2": [264, 265], "feature_names_categor": [5, 317], "feature_names_mix": [5, 317], "feature_names_numer": [5, 317, 338, 339, 341, 342, 348, 349, 350, 351, 352], "feature_names_out": [104, 118, 136, 156], "feature_select_corr": [4, 322], "feature_select_rcit": [4, 322], "feature_select_xgbpfi": [4, 322], "feature_typ": [2, 9, 13, 14, 21, 22, 42, 46, 54, 55, 56, 158, 263, 264, 265, 274, 320, 338, 339, 340, 341, 342, 348, 349, 350, 351, 352], "feature_x": [3, 113, 114], "feature_z": [3, 114], "features_nam": 347, "featurescol": 30, "feedforward": [337, 343], "fei": [319, 323], "femal": 76, "fetch": [302, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "fetch_california_h": [31, 358], "few": [326, 332], "fewer": [109, 110, 220, 221, 223, 224, 264, 265, 319, 347], "ff7f0e": 45, "fidx": [25, 104, 118, 136, 156], "fig": [302, 313], "fignam": 45, "figsiz": [3, 36, 37, 38, 39, 45, 47, 56, 57, 61, 72, 73, 76, 302], "figur": [45, 56, 57, 302, 314, 343, 353], "file": [46, 141, 144, 145, 146, 155, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 302, 361], "file_nam": [46, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 302], "filenam": [99, 302], "fill_valu": 136, "filter": [139, 145, 193, 194, 204, 205, 206, 207, 208, 209, 221, 237, 252, 253, 302], "final": [217, 275, 276, 290, 291, 292, 293, 319, 322, 323, 326, 327, 328, 330, 333, 334, 338, 341, 343], "financ": 341, "find": [343, 350, 351, 356], "fine": [23, 24, 264, 265, 266, 267, 269, 277, 278, 335, 337, 347], "finer": 226, "finit": [322, 350], "finland": 319, "first": [7, 106, 109, 111, 124, 203, 217, 264, 265, 277, 278, 291, 292, 293, 313, 315, 320, 322, 323, 326, 328, 329, 330, 331, 332, 333, 334, 338, 343, 350, 352, 355], "fit": [9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 36, 37, 38, 39, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 110, 118, 136, 214, 217, 220, 221, 223, 224, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 319, 322, 323, 326, 327, 328, 329, 330, 331, 332, 334, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 358], "fit_funct": [260, 283, 294, 295], "fit_intercept": [14, 37], "five": [327, 334], "fix": [318, 324, 326, 327, 328, 334], "fl": [319, 323], "flag": [348, 350], "flagdefault": [2, 3, 5, 13, 15, 17, 19, 21, 23, 25, 50, 56, 76, 313, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353], "flat": 193, "flatten": 29, "flexibl": [208, 268, 269, 320, 333, 335, 337, 338, 339, 342, 358], "float": [56, 64, 65, 68, 76, 109, 110, 111, 123, 124, 125, 136, 164, 172, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 227, 264, 265, 266, 267, 268, 269, 277, 278, 281, 282, 292, 302, 343], "float32": [17, 18], "fluctuat": [338, 352], "fn": 349, "fn_": 347, "fname": 99, "focu": [330, 341], "focus": [115, 314, 321, 347, 349, 351, 353], "fold": [275, 276, 290, 291, 292, 293, 349, 356], "folder": [300, 302], "follow": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 100, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 136, 156, 172, 173, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 220, 221, 222, 223, 224, 238, 240, 242, 243, 244, 245, 246, 247, 290, 291, 292, 293, 298, 313, 314, 315, 317, 318, 319, 320, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 343, 347, 348, 349, 350, 351, 352, 353, 355, 358], "fontfamili": 45, "fontsiz": 45, "fontstyl": 45, "fontweight": 45, "footag": 338, "foral": 347, "forc": 356, "forest": [110, 216, 316, 326, 333, 335, 338, 346, 349, 351, 356], "form": [127, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 337, 342, 343], "formal": 347, "format": [46, 104, 118, 128, 134, 135, 165, 193, 200, 204, 205, 206, 207, 208, 211, 213, 220, 221, 222, 223, 224, 290, 291, 292, 293, 302, 320, 355, 358], "former": [314, 327, 334], "formul": [336, 337, 339, 342, 350], "formula": [318, 319, 323, 326, 327, 328, 334, 347], "forward": [104, 124, 322], "found": [99, 313, 314, 315, 318, 319, 320, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353, 360], "foundat": 335, "four": [317, 321, 328, 357], "fourier": [124, 322], "fourth": [114, 321], "fp": 349, "fp_": 347, "fpr": [347, 349], "frac": [318, 324, 326, 327, 328, 329, 332, 334, 337, 338, 341, 342, 347, 348, 349, 351], "fraction": [202, 218, 352], "frame": [29, 193], "framework": [217, 317, 335, 338, 339, 340, 341, 344, 349, 350, 353, 358], "free": 350, "frequenc": [204, 206, 207, 208, 212, 220, 221, 222, 223, 224, 317, 318, 319, 320, 352], "frequent": [0, 136], "friedman": [8, 325], "friedman2001": [326, 332], "friedman2008": [326, 329], "friendli": 335, "from": [3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 86, 100, 106, 108, 115, 117, 141, 142, 143, 144, 146, 167, 201, 212, 218, 227, 237, 238, 246, 247, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 298, 302, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 349, 350, 351, 352, 353, 356, 357, 358, 361], "from_cod": 317, "fsc": 350, "full": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 111, 116, 125, 314, 318, 319, 320, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 351, 352, 353], "fulli": [326, 333, 348], "func": [8, 45, 47, 109, 110, 111, 257, 302], "func_input": [47, 257], "function": [0, 30, 45, 99, 104, 106, 109, 110, 111, 112, 114, 116, 117, 118, 125, 127, 128, 131, 132, 134, 135, 136, 156, 167, 172, 173, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 217, 221, 223, 224, 226, 227, 229, 237, 240, 242, 243, 245, 246, 247, 257, 260, 264, 265, 266, 268, 269, 275, 277, 281, 282, 283, 294, 295, 302, 313, 314, 315, 317, 318, 319, 320, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 339, 340, 343, 348, 350, 351, 352], "further": [50, 51, 201, 202, 211, 214, 216, 218, 219, 298, 319, 322, 347, 350, 351, 353, 355], "furthermor": [315, 341], "futur": [333, 355], "g": [25, 39, 107, 136, 137, 156, 162, 163, 165, 184, 201, 202, 203, 204, 205, 206, 207, 208, 211, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 291, 302, 318, 319, 322, 324, 327, 334, 335, 337, 340, 341, 342, 347, 348, 349, 350, 351, 352, 356], "g_": 341, "g_n": 351, "gabl": [319, 323], "gabriel": [327, 334], "gain": [349, 351], "galleri": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 82, 361], "galleries_data": 361, "galleries_dev": 361, "galleries_util": 361, "galleries_v": 361, "gam": [264, 265, 337, 338], "gam_sample_s": [264, 265], "game": [327, 334], "gami": [264, 265, 311, 335, 336, 338, 339, 341, 342], "gaminet": [12, 27, 41, 238, 240, 246, 265, 337, 361], "gaminetclassifi": 264, "gamma": [9, 21, 22, 46, 54, 55, 56, 322, 337, 342], "gamma_m": 338, "gap": [9, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 31, 33, 36, 37, 38, 39, 54, 55, 60, 61, 199, 206, 207, 210, 222, 313, 315, 346], "gate": [275, 276], "gaussian": [109, 203, 216, 219, 291, 319, 322, 323], "gbdt": [23, 24, 25, 26, 36, 38, 39, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 336, 349, 352], "gbdt2": 42, "gblt": 336, "gbm": [201, 223], "gender": [47, 76, 200, 211, 314, 317, 324, 347], "gener": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 44, 45, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 82, 86, 104, 110, 112, 113, 114, 117, 118, 124, 172, 173, 203, 210, 214, 216, 226, 228, 229, 231, 238, 241, 242, 243, 244, 245, 249, 264, 265, 269, 275, 276, 281, 282, 290, 291, 292, 293, 302, 311, 313, 315, 318, 321, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 341, 343, 344, 346, 347, 349, 350, 351, 352], "georg": 319, "geq": 350, "get": [2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 102, 103, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 145, 147, 149, 154, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 223, 224, 225, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 317, 328, 329, 331, 334, 349, 353], "get_data": 10, "get_data_info": [0, 56, 57, 60, 61, 64, 65, 72, 73, 76, 348, 352, 353], "get_data_list": [10, 127, 128, 131, 132, 134, 135], "get_figure_nam": [46, 56, 57, 302, 353], "get_mlflow_hom": [0, 42], "get_model": [42, 356, 357], "get_param": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "get_x_y_data": 128, "getorcr": 30, "gg": 348, "gini": 15, "giorgo": 322, "github": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "give": [125, 226, 230, 264, 265, 300, 319, 323, 333], "given": [127, 128, 131, 132, 134, 135, 143, 243, 247, 258, 261, 267, 270, 272, 274, 278, 279, 284, 286, 287, 288, 293, 302, 319, 322, 323, 324, 327, 331, 334, 338, 341, 343, 349, 350, 356], "glm": [13, 14, 37, 277, 278, 314, 315, 331, 335, 336, 343], "glmclassifi": 314, "glmt": 339, "glmtree": [266, 267, 277, 278], "global": [17, 18, 78, 81, 82, 117, 226, 227, 229, 230, 240, 241, 244, 311, 325, 332, 336, 343, 348, 350, 351, 361], "global_fi": 343, "global_ic": 330, "glossari": [292, 293], "gmm": 109, "go": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "goal": [319, 322, 327, 334, 347, 352, 356], "goldstein": [319, 330], "goldstein2012": 319, "good": [298, 338, 343, 349, 350], "googl": 86, "gp": 291, "gpsampler": 291, "gradient": [23, 24, 114, 207, 214, 266, 267, 281, 282, 311, 326, 336, 337, 341, 342, 343, 349, 352, 355], "gradientboostingclassifi": 270, "gradientboostingregressor": 271, "gradual": [337, 342, 348, 351], "grain": [266, 267, 269, 347], "grant": 347, "granular": [104, 204, 205, 206, 207, 208, 220, 221, 222, 223, 224, 226, 347], "graphic": [45, 237, 330, 335], "greater": [227, 264, 265, 313, 319, 320, 322, 330], "greatest": [334, 351], "greatli": [327, 331, 334], "greedi": 326, "grid": [35, 39, 40, 41, 45, 213, 226, 227, 229, 238, 239, 266, 267, 268, 290, 291, 328, 329, 330, 332, 361], "grid_resolut": [79, 226, 227, 229], "grid_siz": [238, 239, 328, 329, 330, 332], "gridsampl": 291, "gridsearchcv": 356, "ground": 358, "group": [72, 73, 76, 107, 165, 200, 202, 205, 211, 212, 213, 218, 219, 221, 243, 250, 314, 331, 343, 346, 349, 351], "group_config": [76, 200, 205, 211, 212, 213, 221, 347], "group_nam": [200, 205, 211, 212, 213, 221], "grow": 348, "grow_polici": [9, 21, 22, 46, 54, 55, 56], "gt": [339, 342, 350], "guarante": [327, 334, 338, 347, 350], "guestrin": 327, "guid": [343, 348, 353], "guidelin": 347, "guo": 322, "h": [227, 319, 325, 328, 335, 348], "h2o": [28, 34, 41, 358, 361], "h2o_model": 29, "h2ofram": 29, "h2ogradientboostingestim": 29, "h_": [326, 329, 337], "h_j": 337, "h_m": [338, 339], "ha": [5, 217, 266, 267, 302, 313, 315, 318, 319, 322, 323, 324, 328, 331, 334, 337, 339, 342, 343, 352], "had": 334, "hand": [326, 328], "handl": [45, 114, 116, 117, 136, 265, 302, 319, 322, 323, 337, 338, 339, 348, 350, 351, 353], "hao": 322, "happen": 358, "hard": [68, 69, 202, 218, 342, 343, 351], "harder": 227, "hardest": 351, "hardwar": [264, 265], "harmon": 349, "hat": [313, 322, 326, 328, 329, 330, 332, 337, 341, 342, 347, 348, 349, 350], "have": [39, 100, 115, 144, 162, 163, 165, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 313, 315, 319, 320, 321, 323, 326, 327, 328, 329, 330, 332, 333, 334, 337, 338, 339, 340, 342, 343, 347, 348, 351, 352, 355, 358], "hbo": 319, "he": [319, 323], "he2003": [319, 323], "head": [5, 317], "healthcar": [341, 347], "heatmap": [45, 115, 124, 226, 229, 238, 239, 316, 328, 332, 337], "heavi": 328, "heavili": 348, "height": [45, 302], "help": [210, 212, 213, 215, 218, 219, 222, 322, 326, 327, 332, 334, 340, 343, 347, 348, 349, 351, 352, 353], "helsinki": 319, "henc": [313, 343], "here": [5, 313, 315, 318, 319, 322, 324, 326, 328, 330, 332, 333, 341, 355], "here_": 326, "hered": [264, 265, 337], "heterogen": [341, 350, 351, 353], "heteroscedast": [215, 349, 350], "hidden": [264, 265, 281, 282, 343, 356], "hidden_layer_s": [281, 282, 343, 358], "hidedelai": 45, "hierarch": [344, 349], "high": [227, 313, 315, 318, 319, 322, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353], "higher": [109, 110, 125, 200, 211, 212, 213, 217, 226, 230, 238, 314, 315, 318, 319, 323, 332, 337, 338, 339, 340, 341, 342, 348, 350], "highest": [320, 328, 334, 338], "highli": [326, 328, 332, 334, 338], "highlight": [249, 319, 341, 344, 348, 349, 351, 353], "hint": [], "hire": 347, "hist": 292, "histogram": [3, 109, 110, 111, 112, 321, 349, 350, 351], "histori": [281, 282, 290, 291, 292, 293], "hoc": [0, 78, 82, 322, 333, 335], "hold": [286, 287, 318, 337, 342, 349], "holder": [337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "holdout": 348, "holidai": [4, 8, 9, 10, 45, 57, 79, 333], "home": [299, 300, 301, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "homogen": [319, 341], "homoscedast": 349, "honest": 350, "horizont": [45, 106, 123, 125, 227, 228, 230, 231, 237, 240, 246, 247], "hot": [118, 217, 263, 274, 317, 337, 338, 339, 340, 341, 342], "hour": 328, "hourli": [315, 328, 329, 330, 331, 332, 333, 334], "hous": [31, 32, 355, 357], "hoverlink": 45, "how": [42, 46, 47, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 208, 213, 216, 217, 218, 219, 226, 227, 229, 238, 313, 315, 318, 319, 320, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353, 355], "howev": [314, 315, 319, 323, 326, 327, 330, 331, 332, 333, 334, 343, 347], "hpo": [36, 37, 38, 356], "hr": [4, 8, 9, 10, 14, 18, 20, 22, 24, 26, 45, 51, 57, 61, 65, 69, 73, 79, 315, 328, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 348, 349, 350, 351, 352], "hstat": 325, "html": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 45, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 232, 302], "http": 29, "httpx": 100, "hu": 319, "hua": [319, 323], "hum": [4, 8, 9, 10, 24, 45, 57, 61, 65, 73, 79, 331, 334, 341, 352], "hyperparamet": [0, 86, 217, 260, 283, 290, 291, 292, 293, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 356], "hypothesi": 322, "i": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 99, 100, 104, 109, 110, 111, 112, 113, 114, 115, 116, 118, 128, 131, 132, 134, 136, 138, 145, 152, 156, 172, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 239, 240, 242, 246, 247, 248, 250, 257, 264, 265, 266, 267, 269, 275, 276, 291, 292, 293, 298, 300, 301, 302, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358], "i_1": [337, 338, 342], "i_j": 334, "i_t": [337, 338, 342], "i_u": [337, 338, 342], "icdm": [319, 323], "id": [29, 42, 45, 155, 196, 209, 216, 248, 253, 254, 268, 298, 344, 349, 350, 351, 352], "id_": 45, "idea": [319, 350, 351], "ideal": 352, "ident": [318, 343], "identif": [206, 335, 346, 349], "identifi": [106, 109, 110, 111, 124, 202, 206, 210, 213, 215, 218, 219, 220, 222, 223, 224, 258, 259, 261, 262, 263, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 289, 319, 322, 323, 330, 334, 335, 337, 338, 339, 340, 341, 342, 343, 346, 347, 349, 350, 351, 352, 353], "idx": 324, "ieee": [319, 323], "ignor": [45, 215, 218, 327, 334], "ij": 341, "ik": 341, "ikj": 341, "illustr": [229, 243, 313, 315, 327, 328, 330, 332, 334, 352, 355], "iloc": [5, 10, 76], "im": 338, "imag": [46, 302], "imbal": 349, "imbalanc": 349, "imlbook": 334, "impact": [76, 200, 211, 212, 213, 314, 318, 319, 323, 326, 328, 334, 337, 338, 339, 340, 341, 342, 346, 348, 349, 351, 356], "implement": [110, 111, 124, 256, 281, 282, 291, 319, 322, 323, 327, 330, 331, 338, 340, 343, 344, 352, 356], "impli": [314, 343, 348], "import": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 23, 24, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 80, 100, 123, 124, 125, 216, 217, 228, 229, 230, 238, 240, 242, 243, 245, 246, 247, 264, 265, 313, 314, 315, 316, 317, 319, 325, 329, 335, 338, 339, 340, 344, 347, 348, 349, 350, 351, 352, 356, 357, 358], "import_fil": 29, "importance_typ": [9, 21, 22, 23, 24, 25, 26, 36, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "importarc": [], "impos": [264, 265], "improv": [215, 230, 266, 267, 277, 278, 281, 282, 319, 335, 338, 339, 341, 347, 348, 349, 350, 351, 352, 353], "impur": [266, 267, 268, 269], "imput": [5, 136, 317], "impute_miss": [5, 47, 317], "inaccur": [326, 332], "inact": [157, 159, 347, 353], "inactive_featur": 47, "inch": 302, "includ": [25, 26, 103, 112, 113, 115, 116, 117, 125, 128, 136, 140, 168, 172, 174, 200, 201, 214, 216, 218, 219, 220, 221, 222, 228, 242, 244, 245, 263, 264, 265, 274, 291, 292, 313, 315, 317, 318, 319, 320, 322, 326, 332, 337, 338, 339, 340, 341, 342, 344, 347, 348, 352, 356], "include_interaction_list": [264, 265], "incom": [337, 338, 342, 347, 351, 352], "inconsist": [326, 332, 351], "incorpor": [337, 350, 351, 352], "incorrect": [349, 353], "increas": [110, 115, 125, 226, 230, 238, 264, 265, 277, 278, 315, 318, 319, 321, 322, 326, 327, 330, 333, 334, 337, 338, 342, 343, 347, 351, 352], "increasingli": 218, "increment": 352, "independ": [124, 226, 227, 316, 319, 323, 326, 327, 332, 334, 335, 338, 348], "index": [8, 30, 104, 106, 118, 128, 136, 156, 228, 231, 246, 247, 248, 249, 264, 265, 318, 324, 326, 328, 331, 334, 335, 338, 342, 343, 349, 351], "indic": [5, 106, 115, 136, 138, 169, 170, 172, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 230, 238, 243, 250, 268, 275, 276, 290, 291, 292, 293, 313, 314, 317, 318, 319, 321, 323, 324, 326, 327, 328, 330, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 347, 349, 350, 351, 352, 358], "indicatorimput": 136, "indicators": 45, "individu": [226, 227, 264, 265, 319, 326, 327, 328, 331, 333, 334, 340, 352, 357], "inf": [3, 5, 25, 317], "infer": [167, 264, 265, 322], "infinit": [3, 5, 317], "influenc": [226, 238, 314, 326, 333, 337, 338, 339, 340, 341, 342], "info": 145, "inform": [25, 124, 156, 200, 204, 206, 207, 208, 211, 216, 218, 219, 221, 231, 298, 313, 319, 320, 327, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "infrastructur": 335, "infti": 351, "inher": [0, 202, 218, 335, 337, 338, 339, 341, 342, 343, 347, 350, 352, 355], "init": [29, 264, 265], "initi": [15, 23, 24, 29, 30, 264, 265, 266, 267, 268, 269, 277, 278, 317, 322, 338, 339, 341, 342], "inject": 352, "innat": [115, 321], "input": [29, 45, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 136, 156, 172, 173, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 302, 313, 315, 326, 327, 328, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 353, 358], "inputcol": 30, "inquiri": 317, "insight": [201, 224, 247, 319, 333, 335, 339, 341, 348, 349, 351, 353], "insignific": 322, "inspir": [327, 334, 356], "instal": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "instanc": [46, 136, 213, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 294, 295, 296, 297, 317, 319, 320, 323, 327, 330, 331, 334, 350, 351, 352], "instead": [111, 128, 313, 315, 320, 326, 327, 328, 329, 330, 332, 334, 349], "institut": 322, "insuffici": [347, 349], "insur": 347, "int": [30, 38, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 124, 125, 136, 145, 156, 164, 169, 170, 172, 194, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 238, 239, 243, 246, 247, 248, 249, 264, 265, 266, 267, 268, 269, 275, 276, 277, 278, 281, 282, 290, 291, 292, 293, 302, 318, 324, 326, 332, 337, 338, 342, 351], "int_": [349, 351], "integ": [116, 117, 118, 136, 281, 282, 290, 291, 292, 293], "integr": [319, 326, 331, 332, 335, 341, 343, 345, 356, 358], "intend": 349, "interact": [57, 64, 65, 114, 220, 221, 222, 223, 224, 226, 227, 229, 234, 238, 239, 264, 265, 319, 321, 326, 327, 328, 329, 330, 332, 334, 335, 337, 339, 341, 342, 348, 349, 350, 351, 352, 353], "interact_num": [264, 265], "interaction_constraint": [9, 21, 22, 46, 54, 55, 56], "interaction_list_": [264, 265], "interaction_val_loss_": [264, 265], "intercept": [331, 337, 338, 342, 343], "interest": [237, 313, 315, 319, 326, 328, 330, 331, 332], "interfac": [335, 338, 340, 344], "intern": [104, 150, 269, 277, 278, 319, 323, 327], "interpret": [0, 86, 227, 228, 266, 267, 268, 269, 277, 278, 311, 319, 322, 325, 326, 328, 335, 347, 350, 352, 353, 355, 357], "interpret_cluster_analysi": 250, "interpret_coef": [13, 14, 340], "interpret_effect": [13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 42, 50, 51, 337, 338, 339, 341, 342, 349], "interpret_ei": [21, 22, 25, 26, 240, 337, 338, 339, 341, 342], "interpret_fi": [13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 42, 337, 338, 339, 340, 341, 342, 343], "interpret_fi_loc": 246, "interpret_glm_coef": 237, "interpret_global_tre": [15, 16, 344], "interpret_llm_pc": [17, 18, 343], "interpret_llm_profil": [17, 18, 343], "interpret_llm_summari": [17, 18, 343], "interpret_local_ei": [19, 20, 21, 22, 25, 26, 337, 338, 339, 341, 342], "interpret_local_fi": [13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 50, 51, 337, 338, 339, 340, 341, 342, 349], "interpret_local_linear_fi": [13, 14, 17, 18, 340], "interpret_local_moe_weight": [21, 22, 341], "interpret_local_tre": [15, 16, 344], "interpret_moe_cluster_analysi": [21, 22, 341], "interpret_tree_glob": 241, "interpret_tree_loc": 249, "interv": [45, 201, 202, 207, 214, 216, 223, 226, 313, 315, 326, 328, 338, 350, 352, 353], "interven": [327, 334], "intervent": [327, 334, 349], "intric": 314, "introduc": [317, 319, 327, 334, 339, 343, 347, 350, 351, 352, 357], "introduct": [311, 346], "intuit": 335, "invalid": 302, "invers": [45, 104, 340, 352], "investig": [347, 349, 350, 351, 352], "involv": [123, 313, 315, 317, 319, 320, 326, 333, 347, 350, 351, 356], "ioanni": 322, "ionescu": 319, "ipynb": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "ipython": 100, "ipyvuetifi": 100, "ipywidget": 100, "iri": 317, "irisdata": 317, "irreduc": 348, "isol": [110, 316, 335, 353], "isolationforest": [319, 323], "issu": [100, 108, 210, 218, 264, 265, 315, 337, 338, 339, 340, 342, 343, 346, 348, 349, 351], "itali": [319, 323], "item": [45, 156, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 218, 219, 221, 250], "itemgap": 45, "itemheight": 45, "items": 45, "itemwidth": 45, "iter": [23, 24, 124, 125, 264, 265, 266, 267, 275, 276, 290, 291, 292, 293, 319, 326, 333, 338, 339, 341, 343, 348, 356], "its": [100, 173, 187, 208, 213, 216, 218, 224, 229, 230, 264, 265, 315, 319, 323, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 357], "itself": [286, 287, 331], "j": [115, 318, 319, 321, 322, 326, 327, 328, 329, 334, 337, 338, 339, 341, 342, 348], "j_1": [337, 338, 342], "j_i": 342, "j_v": [337, 338, 342], "janz": 322, "jerom": [326, 329], "jingyu": 326, "jiuyong": 322, "jk": [326, 329, 337, 338, 339, 342], "job": [290, 291, 292, 293], "joblib": [290, 291, 292, 293], "john": 319, "joint": [227, 332], "jona": 322, "journal": [322, 326, 330], "jpg": 302, "jsd": 351, "json": [], "jth": 319, "judgment": 331, "jupyt": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 335], "just": [326, 327, 328, 334], "justin": 330, "k": [68, 69, 106, 109, 200, 211, 275, 276, 318, 322, 323, 324, 326, 328, 329, 333, 337, 338, 339, 341, 342, 348, 349, 351, 352], "k_": [326, 328], "kai": [319, 323], "kanoksri": [319, 323], "kapeln": 330, "keep": [326, 328, 333, 343], "kei": [0, 42, 45, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 136, 156, 172, 173, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 290, 291, 292, 293, 302, 311, 317, 319, 326, 332, 340, 341, 347, 348, 349, 350, 351, 352, 356], "kendal": [3, 115, 321], "kept": 352, "kernel": [231, 319, 322, 327, 334, 356], "keyword": [141, 258, 259, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 279, 280, 288, 289, 313, 315, 319, 328, 329, 331, 332, 334, 343], "kfold": [291, 292, 293], "ki": 319, "kj": [326, 329], "kl": [318, 324], "kmean": [8, 109, 351], "kmedoid": 216, "knn": 319, "know": [311, 327, 334], "knowledg": [319, 327, 337, 338, 340, 342, 344, 348, 350, 351, 352], "known": [319, 338, 343, 349], "kolmogorov": [106, 318, 324], "ks_2samp": [318, 324], "kui": 322, "kullback": [318, 324], "kun": 322, "kwarg": [141, 258, 259, 260, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 288, 289], "kyuseok": 319, "l": [318, 324, 326, 333, 337, 338, 339, 341, 342, 343, 348], "l1": [266, 267, 268, 269, 281, 282, 340, 343, 348, 352], "l1_ratio": [14, 37, 340, 357], "l1_reg": [281, 282, 343], "l2": [217, 340, 348, 352], "l2001": [326, 333], "l_": [337, 338, 342, 348, 350, 351, 352], "lab": 349, "label": [30, 45, 106, 200, 205, 211, 212, 213, 215, 216, 221, 258, 260, 261, 264, 266, 268, 269, 270, 272, 274, 275, 277, 279, 281, 284, 286, 288, 298, 313, 348, 349], "labelcol": 30, "lack": [343, 350, 353], "lambda": [337, 348, 350, 351, 352], "lambda_": [319, 323], "lambda_1": [348, 352], "lambda_2": [348, 352], "lambda_i": 322, "land": 349, "larg": [72, 73, 109, 112, 114, 115, 117, 219, 264, 265, 319, 322, 323, 327, 331, 334, 337, 338, 342, 343, 348, 349], "larger": [114, 117, 200, 205, 211, 212, 213, 215, 218, 221, 230, 264, 265, 315, 319, 323, 326, 328, 329, 330, 332, 333, 334, 337, 342, 343, 348], "largest": [214, 313, 315, 319, 331, 343, 347, 352], "lasso": [327, 331, 348, 352], "last": [264, 265, 313, 318, 322, 326, 328, 355], "latent": 351, "later": 357, "latest": [2, 42, 145], "latter": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 327, 334], "layer": [264, 265, 281, 282, 341, 343, 356], "ldot": [327, 334, 343], "lead": [227, 315, 318, 326, 328, 331, 337, 338, 341, 342, 347, 350, 351, 352], "leaderboard": [311, 345], "leaf": [266, 267, 268, 269, 327, 334, 337, 338, 339, 342, 349], "leaf_estimators_": 268, "learn": [100, 118, 229, 260, 264, 265, 277, 278, 283, 284, 285, 296, 297, 312, 314, 315, 318, 319, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 351, 353, 355, 356, 358], "learner": [338, 339], "learning_r": [9, 21, 22, 23, 24, 25, 26, 36, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 264, 265, 266, 267, 281, 282, 343, 356], "least": [337, 343, 350, 351], "leav": [268, 269, 319, 339], "lee": [327, 334], "left": [45, 314, 319, 322, 326, 327, 329, 334, 338, 341, 342, 347, 349], "legal": 347, "legend": [45, 313], "legendhoverlink": 45, "legitim": 347, "leibler": [318, 324], "len": [33, 348], "length": [45, 162, 163, 258, 259, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 279, 280, 288, 289, 319, 323, 343], "leq": [337, 338, 339, 342, 348], "less": [200, 211, 212, 315, 320, 326, 327, 328, 330, 332, 334, 341, 348, 350, 351, 352], "let": [326, 328, 330, 343, 352], "letter": [319, 323], "level": [72, 200, 203, 207, 211, 214, 216, 219, 221, 224, 269, 314, 319, 322, 334, 337, 338, 339, 340, 341, 342, 347, 348, 350, 351, 352], "leverag": [317, 319, 335, 340, 344, 347, 349, 351], "lgbm": [31, 32, 36, 38, 39, 42, 47, 50, 51, 56, 79, 80, 264, 265], "lgbm2": 42, "lgbm_model": [338, 347, 348, 349, 350, 351, 352, 353], "lgbmclassifi": [32, 42, 272], "lgbmclassifierifittedlgbmclassifi": 32, "lgbmregressor": [31, 201, 273], "lgbmregressorifittedlgbmregressor": 31, "lgmb": [42, 47], "li": [319, 322], "li2021": 319, "lib": [], "librari": [45, 114, 291, 302, 335, 338], "licenc": [5, 9, 10, 29, 30, 31, 32, 33, 47, 76], "lie": 351, "lifecycl": 335, "light": 328, "lighter": 328, "lightgbm": [31, 32, 42, 100, 272, 273, 338, 347, 348, 349, 350, 351, 352, 353], "lightweight": [258, 259, 261, 262, 263, 270, 271, 272, 273, 274, 279, 280, 288, 289], "like": [114, 165, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 314, 319, 323, 328, 335, 343, 347, 349, 350, 351, 352], "lime": [32, 100, 228, 325, 335], "limit": [156, 315, 326, 328, 332, 343, 347, 350], "limit_b": [2, 3, 5, 25, 56, 353], "limit_bal_special_sv1": 5, "limits_": 337, "lin": 322, "lindsai": 322, "lindsayl2000": 322, "line": [99, 100, 113, 125, 202, 204, 205, 206, 207, 208, 212, 213, 214, 218, 226, 229, 238, 239, 315, 319, 328, 330, 332, 337, 343], "linear": [12, 27, 41, 115, 217, 237, 238, 240, 242, 246, 247, 266, 267, 269, 311, 321, 322, 326, 327, 331, 332, 334, 336, 341, 342, 349, 352, 356, 361], "linear_model": [263, 274, 340], "linear_tre": [23, 24, 47], "linearshap": 334, "lineartre": 352, "ling": [319, 322, 323], "link": [45, 314, 318, 319, 320, 340, 342, 347, 353], "link_id": 45, "linspac": 356, "lipschitz": 348, "list": [5, 42, 56, 57, 102, 103, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 136, 139, 156, 157, 159, 192, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 237, 239, 240, 243, 245, 246, 247, 252, 258, 259, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 289, 290, 291, 292, 293, 298, 302, 315, 317, 320, 329, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356], "list_registered_data": [2, 317], "list_registered_model": 42, "liu": [319, 322, 323], "liu2008": [319, 323], "liwu": [319, 323], "ll": 334, "llm": [242, 243, 244, 245, 336], "llm_pc": 242, "llm_profil": 243, "llm_summari": 244, "llm_violin": 245, "ln": [318, 324], "load": [0, 3, 4, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 116, 141, 142, 143, 144, 145, 146, 209, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 313, 316, 320, 321, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "load_breast_canc": [30, 32], "load_builtin_data": [5, 10, 76], "load_csv": 317, "load_data": 47, "load_datafram": [5, 9, 10, 29, 30, 31, 32, 33, 76, 317, 358], "load_iri": 317, "load_registered_data": [2, 9, 33], "load_registered_model": 42, "load_spark": 317, "loaded_model": 42, "loan": [347, 352], "local": [23, 24, 32, 50, 51, 78, 81, 82, 109, 117, 226, 228, 231, 242, 243, 244, 246, 247, 249, 311, 323, 325, 332, 334, 335, 336, 349, 350, 351, 352, 353, 361], "local_dataset": [], "local_fi": 343, "local_linear_fi": 343, "local_model_zoo": 42, "localdataset": 255, "localgap": 348, "localmodelzoo": 42, "locat": 353, "log": [264, 265, 319, 326, 328, 329, 330, 332, 337, 338, 339, 341, 342, 343, 348, 349, 350, 351, 352], "log1p": [5, 14, 16, 18, 20, 22, 24, 26, 37, 51, 55, 57, 61, 65, 69, 73, 79, 156, 317, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352], "logarithm": 156, "logbas": 45, "logic": [337, 338, 342], "logist": [12, 27, 41, 46, 54, 56, 237, 238, 240, 246, 247, 268, 340, 361], "logisticregress": [30, 274, 340], "logloss": [13, 15, 19, 21, 23, 25, 36, 38, 39, 42, 47, 54, 199, 202, 203, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 220, 222, 224, 290, 291, 292, 293, 313, 356], "logloss_rank": [36, 38, 39], "long": 343, "longer": [318, 319, 323], "look": 349, "lose": 347, "loss": [17, 18, 23, 24, 223, 264, 265, 266, 267, 281, 282, 326, 333, 338, 341, 347, 348, 349, 350, 351, 352], "loss_threshold": [264, 265], "lot": [327, 334], "low": [220, 334, 335, 347, 348, 350, 351], "lower": [76, 200, 205, 211, 212, 213, 221, 227, 229, 314, 315, 319, 330, 338, 347, 349, 350, 351], "lower_inclus": [76, 200, 205, 211, 212, 213, 221, 347], "lowest": [315, 341], "lpb": 322, "lr": [30, 42], "lr_model": 30, "lt": [337, 338, 339, 342], "lundberg": [327, 334], "lundberg2017": [327, 334], "lundberg2018": [327, 334], "m": [318, 327, 334, 337, 338, 339, 342, 349, 351], "machin": [100, 118, 229, 312, 314, 315, 318, 319, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 344, 346, 347, 348, 349, 353, 355, 356, 358], "made": [286, 287, 318, 338], "mae": [9, 14, 16, 20, 22, 24, 26, 31, 33, 37, 51, 55, 57, 61, 73, 199, 202, 203, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 220, 222, 224, 290, 291, 292, 293, 315, 348, 349, 350, 351, 352, 356], "magnitud": [203, 208, 216, 219, 337, 338, 339, 340, 342, 343, 348, 351, 352], "mahalanobi": [111, 319, 323, 351], "mai": [25, 26, 100, 167, 206, 220, 221, 223, 224, 226, 292, 317, 318, 319, 322, 324, 326, 327, 328, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353, 358], "main": [3, 6, 8, 9, 10, 23, 24, 33, 45, 50, 51, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 127, 128, 131, 132, 134, 135, 136, 156, 172, 173, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 264, 265, 290, 291, 292, 293, 324, 328, 335, 337, 339, 341, 342, 350, 352], "main_effect_val_loss_": [264, 265], "mainli": 331, "maintain": [218, 266, 267, 335, 337, 338, 340, 341, 342, 344, 348, 351, 353], "major": 319, "make": [229, 241, 259, 260, 262, 263, 264, 265, 266, 268, 271, 273, 275, 277, 280, 281, 283, 285, 289, 294, 295, 317, 319, 323, 327, 330, 331, 333, 337, 338, 341, 342, 343, 344, 347, 349, 350, 352, 353], "make_friedman1": [8, 33], "male": 76, "manag": [0, 42, 317, 335, 345], "manhattan": 117, "mani": [117, 319, 326, 328, 337, 338, 341, 342, 347, 351], "manifest": 318, "manner": [172, 345], "manual": [5, 104, 127, 128, 131, 132, 134, 135, 167, 204, 205, 206, 207, 208, 220, 221, 222, 223, 224, 320], "map": [47, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 349, 352], "map_rang": 45, "marco": 327, "margin": [45, 229, 264, 265, 324, 327, 331, 334, 337, 338, 339, 340, 341, 342, 343, 350, 351], "mark": [214, 315, 319, 343], "market": 341, "markov": 322, "marku": 319, "marriag": [2, 3, 5, 25, 56, 76, 347, 353], "marriage_1": 2, "marriage_2": 2, "math": 338, "mathbb": [326, 332, 337, 341, 342, 343, 350, 351], "mathbf": [337, 338, 342], "mathcal": [341, 352], "mathemat": [322, 336, 350], "mathrm": [318, 322, 326, 330, 332, 339, 342], "matric": [115, 349], "matrix": [54, 115, 210, 216, 319, 323, 328, 338, 343, 349, 351], "max": [3, 5, 45, 156, 264, 265, 269, 292, 319, 320, 337, 342, 343, 347, 349, 350, 352], "max_": [45, 351], "max_bin": [9, 21, 22, 46, 54, 55, 56, 104, 204, 205, 206, 207, 208, 220, 221, 222, 223, 224], "max_cat_threshold": [9, 21, 22, 46, 54, 55, 56], "max_cat_to_onehot": [9, 21, 22, 46, 54, 55, 56], "max_delta_step": [9, 21, 22, 46, 54, 55, 56], "max_depth": [9, 15, 16, 21, 22, 23, 24, 25, 26, 33, 36, 38, 39, 42, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 201, 207, 214, 217, 223, 266, 267, 268, 269, 292, 338, 339, 341, 344, 347, 348, 349, 350, 351, 352, 353, 357], "max_epoch": [17, 18, 23, 24, 264, 265, 281, 282, 337], "max_featur": [15, 16], "max_it": [14, 37], "max_iter_per_epoch": [264, 265], "max_leaf_nod": [15, 16], "max_leav": [9, 21, 22, 46, 54, 55, 56], "maxim": 356, "maximum": [100, 104, 113, 114, 201, 204, 205, 206, 207, 208, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 230, 239, 266, 267, 268, 277, 278, 281, 282, 317, 318, 319, 320, 323, 324, 338, 341, 351, 352, 353], "maxopac": 45, "mb": [11, 27, 34, 40, 43, 48, 52, 58, 62, 66, 70, 74, 77, 81, 83, 361], "mbox": 343, "md": [319, 323], "mean": [3, 5, 17, 18, 68, 69, 109, 118, 136, 156, 200, 205, 211, 212, 213, 221, 227, 228, 244, 246, 247, 264, 265, 291, 292, 293, 317, 319, 320, 323, 326, 327, 328, 331, 333, 334, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352], "mean_fit_tim": [38, 39], "meaning": [319, 349, 353], "measur": [115, 173, 208, 219, 226, 227, 228, 230, 231, 318, 319, 321, 322, 323, 324, 326, 329, 333, 346, 347, 350, 352, 353], "mechan": 349, "medhousev": [337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 358], "median": [3, 5, 136, 317, 319, 320, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "medic": [337, 342], "medinc": [31, 201, 202, 203, 211, 214, 216, 218, 219], "medium": 347, "medoid": 351, "meet": [335, 349], "mei": [319, 323], "mem": [11, 27, 34, 40, 43, 48, 52, 58, 62, 66, 70, 74, 77, 81, 83, 361], "member": [327, 334], "membership": [200, 205, 211, 212, 213, 214, 221, 341, 349], "memori": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "mention": 319, "menu": 335, "mere": [327, 334], "messag": [], "met": 319, "meta": [145, 320], "metaheurist": 356, "metamodel": [202, 218], "method": [3, 5, 8, 14, 16, 17, 18, 19, 20, 22, 24, 26, 37, 45, 47, 51, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 104, 106, 109, 110, 111, 113, 114, 115, 116, 117, 118, 124, 136, 144, 156, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 238, 241, 244, 249, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 302, 312, 313, 315, 316, 317, 318, 321, 322, 324, 326, 327, 328, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 349, 350, 351, 352, 353, 356, 357], "methodologi": 326, "metric": [9, 33, 36, 37, 38, 39, 47, 50, 51, 53, 56, 57, 58, 60, 61, 64, 65, 68, 69, 72, 73, 76, 82, 106, 117, 123, 173, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 290, 291, 292, 293, 298, 312, 313, 315, 318, 319, 324, 326, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 348, 350, 351, 352, 353, 356, 361], "metric_nam": [199, 210], "mi": 349, "miami": [319, 323], "mid": 322, "might": [319, 326, 328, 348, 349, 351], "mild": 348, "mimic": 351, "min": [3, 5, 45, 117, 156, 264, 265, 292, 320], "min_": 45, "min_child_sampl": [23, 24, 25, 26, 36, 38, 39, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "min_child_weight": [9, 21, 22, 23, 24, 25, 26, 36, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "min_impurity_decreas": [15, 16, 23, 24, 266, 267, 268, 269], "min_samples_leaf": [15, 16, 23, 24, 266, 267, 268, 269], "min_samples_split": [15, 16], "min_split_gain": [23, 24, 25, 26, 36, 38, 39, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "min_weight_fraction_leaf": [15, 16], "mind": 328, "mine": [319, 323, 327], "ming": [319, 323], "minim": [335, 338, 341, 347, 348, 350], "minimum": [100, 123, 125, 266, 267, 268, 269, 317, 319, 320, 323, 353], "minkowski": 117, "minmax": [5, 17, 18, 19, 20, 24, 47, 64, 68, 156, 317, 343], "minmax_rang": 156, "minor": [347, 352], "minu": [116, 118], "minut": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "miscellan": 100, "misclassif": 349, "miscoverag": [201, 214, 216, 350], "misdiagnos": 347, "mislead": [347, 349], "misleadingli": 227, "mismatch": 318, "mispredict": 351, "miss": [3, 5, 9, 21, 22, 46, 54, 55, 56, 136, 320, 327, 334, 335, 349], "missing": [327, 334], "missing_valu": 136, "misspecif": 349, "misspecifi": 350, "mitig": [212, 213, 319, 322, 335, 346, 349, 351, 353], "mix": [3, 5, 121, 173, 317, 322], "mixtur": [12, 27, 41, 109, 238, 239, 240, 246, 248, 250, 275, 276, 311, 319, 322, 323, 335, 336, 348, 350, 351, 361], "mj": [337, 338, 342], "mk": [337, 338, 342], "ml": 30, "mlflow": [0, 100, 108, 139, 152, 155, 196, 254, 317, 335], "mlflow_hom": [42, 300, 301], "mlflowexcept": 108, "mlop": 335, "mlp_sample_s": [264, 265], "mlpregressor": 358, "mnth": [4, 8, 9, 10, 57, 61, 320, 338, 339, 341, 342, 348, 349, 350, 351, 352], "moarbitraryclassifi": [], "moarbitraryregressor": [], "mocatboostclassifi": [25, 42, 338], "mocatboostregressor": [26, 338], "mochart": [45, 100, 114, 302], "moclassifi": [294, 358], "mode": [56, 57, 64, 65, 72, 73, 76, 220, 221, 222, 223, 224, 264, 265, 313], "modecisiontreeclassifi": [15, 42, 344], "modecisiontreeclassifierifittedmodecisiontreeclassifi": 15, "modecisiontreeregressor": [16, 344, 357], "modecisiontreeregressorifittedmodecisiontreeregressor": 16, "model": [0, 1, 2, 11, 27, 34, 35, 45, 46, 47, 59, 63, 67, 68, 69, 71, 72, 75, 77, 79, 80, 86, 109, 110, 118, 125, 128, 131, 132, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 256, 257, 302, 311, 313, 314, 315, 317, 318, 319, 322, 323, 326, 328, 329, 330, 332, 333, 335, 337, 339, 344, 346, 347, 353, 359, 361], "model1": [54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 353], "model2": [54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 353], "model_compar": [313, 315], "model_dtre": 344, "model_explain": [328, 329, 330, 331, 332, 333, 334], "model_fairness_compar": 314, "model_gami": 337, "model_gbdt": 338, "model_gblt": 339, "model_glm": 340, "model_glmt": 339, "model_lgbm": [347, 348, 349, 350, 351, 352, 353], "model_mo": 341, "model_nam": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "model_neut": 342, "model_relunet": 343, "model_select": [31, 32, 33, 358], "model_tun": [36, 37, 38, 39, 47], "model_tune_grid_search": 290, "model_tune_optuna": 291, "model_tune_pso": 292, "model_tune_random_search": 293, "model_xgb": [347, 348, 349, 350, 351, 352, 353], "modelbas": 256, "modelnn": [23, 24], "modeltun": 345, "modeltunegridsearch": [0, 36, 356], "modeltuneoptuna": [0, 39], "modeltunepso": [0, 38, 356], "modeltunerandomsearch": [0, 37, 356], "modelzoo": [41, 43, 345, 357, 361], "modern": 341, "modeva": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 73, 75, 76, 78, 79, 80, 82, 100, 317, 321, 322, 323, 324, 326, 327, 335, 336, 345, 346, 356, 357], "modeva_arbitrary_classifi": [29, 30, 32], "modeva_arbitrary_regressor": [32, 358], "modeva_mlflow": [42, 300, 301], "modeva_sklearn_classifi": 42, "modeva_sklearn_regressor": [31, 358], "modif": [350, 351, 352], "modifi": [167, 320, 347], "modul": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 264, 265, 281, 282, 311, 319, 320, 358], "moe": [12, 27, 41, 42, 238, 239, 240, 246, 248, 250, 275, 276, 311, 335, 336, 348, 361], "moe_classif": 341, "moe_regress": 341, "moelasticnet": [14, 37, 340, 357], "moelasticnetifittedmoelasticnet": [14, 37], "mogaminetclassifi": [19, 42, 337], "mogaminetclassifierifittedmogaminetclassifi": 19, "mogaminetregressor": [20, 337], "mogaminetregressorifittedmogaminetregressor": 20, "moglmtreeboost": [23, 24], "moglmtreeboostclassifi": [23, 42, 277, 339], "moglmtreeboostclassifierifittedmoglmtreeboostclassifi": 23, "moglmtreeboostclassifiermoglmtreeboostclassifi": 23, "moglmtreeboostregressor": [24, 277, 278, 339], "moglmtreeboostregressorifittedmoglmtreeboostregressor": 24, "moglmtreeboostregressormoglmtreeboostregressor": 24, "moglmtreeclassifi": 339, "moglmtreeregressor": 339, "mogradientboostingclassifi": [25, 42], "mogradientboostingregressor": 26, "molgbmclassifi": [23, 25, 36, 38, 39, 42, 47, 50, 54, 56, 60, 64, 68, 72, 76, 80, 200, 338, 347, 353], "molgbmclassifierifittedmolgbmclassifi": [23, 25, 36, 38, 39, 50, 54, 56, 60, 64, 68, 72, 76, 80], "molgbmregressor": [24, 26, 51, 55, 57, 61, 65, 69, 73, 79, 202, 203, 338, 348, 349, 350, 351, 352], "molgbmregressorifittedmolgbmregressor": [24, 26, 51, 55, 57, 61, 65, 69, 73, 79], "mologisticregress": [13, 42, 340], "moment": [322, 327, 334], "momentchi2": 100, "momoeclassifi": [21, 341], "momoeclassifierifittedmomoeclassifi": 21, "momoeregressor": [22, 341], "momoeregressorifittedmomoeregressor": 22, "moneuraltre": [23, 24], "moneuraltreeclassifi": [23, 42, 342], "moneuraltreeclassifierifittedmoneuraltreeclassifi": 23, "moneuraltreeregressor": [24, 342], "moneuraltreeregressorifittedmoneuraltreeregressor": 24, "monitor": [335, 347, 348, 352], "mono_decreasing_list": [24, 264, 265, 277, 278, 337, 342], "mono_increasing_list": [23, 24, 264, 265, 277, 278, 337, 342], "mono_sample_s": [23, 24, 264, 265, 277, 278, 337, 342], "monoton": [115, 264, 265, 277, 278, 321, 326, 332, 336, 343, 348, 352], "monotone_constraint": [9, 21, 22, 46, 54, 55, 56], "monotonic_cst": [15, 16], "monotonically_increasing_id": 30, "mont": 291, "morandomforestclassifi": [25, 42], "morandomforestregressor": [26, 357], "more": [115, 117, 125, 136, 216, 230, 292, 293, 313, 314, 315, 318, 319, 321, 324, 326, 330, 332, 333, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353, 356], "moregressor": [295, 358], "moreludnn": [12, 27, 41, 242, 243, 244, 245, 247, 343, 361], "moreludnnclassifi": [17, 42, 337, 343], "moreludnnclassifierifittedmoreludnnclassifi": 17, "moreludnnregressor": [18, 343], "moreludnnregressorifittedmoreludnnregressor": 18, "moreov": [322, 326, 327, 328, 334], "mortgag": 317, "moscoredclassifi": 358, "moscoredregressor": [9, 33, 358], "mosklearnclassifi": [296, 358], "mosklearnregressor": [297, 358], "most": [136, 213, 218, 220, 221, 222, 223, 224, 264, 265, 266, 267, 322, 327, 330, 331, 333, 334, 343, 344, 349, 351, 352], "most_frequ": [5, 136, 317], "motiv": 341, "mousemov": 45, "move": [326, 328], "moxgbclassifi": [25, 42, 46, 54, 56, 60, 64, 68, 72, 76, 338, 347, 353], "moxgbclassifierifittedmoxgbclassifi": [46, 54, 56], "moxgbregressor": [9, 22, 26, 33, 55, 57, 61, 65, 69, 73, 338, 348, 349, 350, 351, 352, 357], "moxgbregressorifittedmoxgbregressor": [9, 55], "mse": [9, 14, 16, 18, 20, 22, 24, 26, 31, 33, 37, 55, 69, 73, 199, 202, 203, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 220, 222, 224, 244, 290, 291, 292, 293, 315, 326, 333, 349, 351, 352, 356, 357], "mse_rank": 37, "mu": [337, 338, 339, 340, 342], "mu_": 348, "mu_j": 341, "much": [217, 227, 315, 327, 328, 330, 334], "mulit": [202, 204, 206, 207, 208], "multi": [281, 282], "multi_strategi": [9, 21, 22, 46, 54, 55, 56], "multipl": [42, 46, 64, 65, 68, 69, 72, 73, 76, 86, 136, 199, 200, 201, 202, 203, 204, 206, 207, 220, 221, 222, 223, 224, 237, 275, 276, 290, 302, 312, 317, 319, 321, 323, 334, 338, 341, 349, 350, 352, 357], "multipli": [216, 219, 319, 323, 327, 352], "multivari": [319, 321, 326, 332, 335], "must": [106, 111, 136, 201, 207, 210, 214, 227, 229, 238, 291, 293, 320, 328, 331, 338], "mutual": [319, 323, 338], "mz": [42, 356, 357], "mz_new": 42, "n": [83, 318, 322, 326, 328, 329, 332, 334, 341, 348, 349, 350, 351, 352], "n_": [326, 328, 343, 347], "n_bar": [25, 26, 46, 79, 302, 341], "n_class": [258, 261, 270, 272, 274, 279, 284, 288], "n_cluster": [50, 51, 68, 69, 109, 202, 216, 218, 275, 276, 292, 341, 349, 350, 351, 352], "n_compon": [3, 116, 117], "n_epoch_no_chang": [23, 24, 266, 267, 281, 282], "n_estim": [9, 21, 22, 23, 24, 25, 26, 36, 38, 39, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 110, 204, 205, 206, 207, 208, 217, 220, 221, 222, 223, 224, 266, 267, 292, 338, 339, 341, 342, 347, 348, 349, 350, 351, 352, 353, 356], "n_featur": [33, 117, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 288, 289], "n_feature_search": [23, 24, 266, 267, 268, 269], "n_features_in_": [266, 267], "n_forward": 124, "n_forward_phas": 322, "n_fourier": 124, "n_fourier2": 124, "n_i": 351, "n_interactions_": [264, 265], "n_iter": [37, 38, 291, 292, 293, 356], "n_j": 351, "n_job": [9, 21, 22, 23, 24, 25, 26, 36, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 264, 265, 281, 282, 290, 291, 292, 293], "n_l": 343, "n_miss": 320, "n_neighbor": 117, "n_other": 320, "n_output": [258, 259, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 279, 280, 284, 285, 288, 289], "n_particl": [38, 292], "n_quantil": 156, "n_repeat": [79, 125, 203, 208, 216, 219, 224, 230, 333], "n_sampl": [33, 117, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 288, 289], "n_screen_grid": [23, 24, 266, 267, 268, 269], "n_split_grid": [23, 24, 266, 267, 268, 269], "n_uniqu": 320, "na": [5, 136], "nabla": 348, "name": [2, 3, 5, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 139, 140, 145, 152, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 172, 173, 187, 189, 190, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 313, 315, 317, 318, 319, 320, 322, 323, 328, 330, 332, 334, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358], "name1": [7, 106, 298], "name2": [7, 106, 298], "name_": 45, "name_list": 302, "namegap": 45, "nameloc": 45, "nametextstyl": 45, "nan": [3, 5, 9, 17, 18, 21, 22, 46, 54, 55, 56, 60, 61, 64, 65, 72, 73, 76, 79, 136, 347], "natur": [156, 337, 341, 342, 349], "nbsp": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "nbviewer": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "ndarrai": [106, 127, 128, 131, 132, 134, 135, 142, 143, 162, 163, 165, 169, 170, 264, 265, 267, 269, 275, 276, 278, 281, 282], "ne": [337, 338, 342], "nearest": 323, "necessari": [243, 341], "need": [5, 32, 39, 311, 315, 319, 320, 322, 327, 328, 330, 332, 334, 335, 341, 349, 351, 355, 358], "neg": [115, 321, 326, 328, 333, 337, 338, 340, 341, 342, 347, 348, 349], "neglig": [331, 348], "neighbor": [117, 323], "neighborhood": 348, "nest": [199, 200, 206, 207, 208, 211, 212, 213, 216, 218, 219, 221, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "net": [264, 265, 311, 335, 336, 339, 341, 342], "net_": [264, 265, 277, 278, 281, 282], "network": [264, 265, 275, 276, 277, 278, 281, 282, 311, 335, 336, 337, 342, 352, 356], "neural": [277, 278, 281, 282, 311, 319, 327, 335, 336, 337, 352, 356], "neural_network": 358, "neuraltre": [42, 342], "neuron": [281, 282, 343], "new": [109, 110, 111, 115, 118, 156, 165, 187, 277, 278, 318, 319, 321, 323, 338, 348, 350, 351, 352, 358], "new_d": [9, 358], "next": [9, 326, 333], "nich": 351, "nicola": 319, "nighttim": 332, "nllm": 243, "nm": 318, "nn": [281, 282], "nn_batch_siz": [23, 24, 277, 278], "nn_epoch_no_chang": [277, 278], "nn_lr": [23, 24, 277, 278], "nn_max_epoch": [23, 24, 42, 277, 278], "nn_n_epoch_no_chang": [23, 24, 277, 278], "nn_temperatur": [23, 24, 42, 277, 278], "nnede": [337, 342], "no_progress": 29, "node": [241, 249, 266, 267, 268, 269, 319, 323, 327, 334, 337, 338, 341, 342, 343, 344, 352], "noic": 335, "nois": [33, 72, 203, 216, 219, 313, 315, 327, 331, 335, 338, 348, 353], "noise_level": [47, 72, 73, 203, 208, 216, 219, 224, 298, 352], "noisi": [348, 349, 350, 352, 353], "nomin": 350, "non": [8, 64, 65, 109, 110, 111, 115, 124, 208, 219, 224, 266, 267, 319, 321, 322, 332, 339, 341, 349, 352, 358], "nonconform": 214, "none": [3, 4, 6, 9, 14, 15, 16, 21, 22, 23, 24, 25, 26, 36, 37, 38, 39, 45, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 104, 106, 112, 113, 114, 115, 116, 117, 118, 127, 131, 132, 134, 136, 139, 145, 152, 156, 157, 159, 172, 187, 191, 193, 194, 196, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 237, 239, 243, 245, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 301, 302, 348, 352], "nonlinear": [115, 321, 343, 348, 349, 350, 351], "noplot_3_h2o": [29, 34, 361], "noplot_4_spark": [30, 34, 361], "norm": 347, "normal": [45, 109, 110, 111, 125, 203, 208, 216, 217, 219, 224, 264, 265, 313, 315, 319, 322, 323, 327, 334, 337, 338, 339, 340, 341, 342, 343, 349], "notabl": 314, "note": [5, 9, 33, 45, 46, 104, 204, 205, 206, 207, 208, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 226, 228, 229, 231, 263, 264, 265, 274, 291, 292, 302, 313, 314, 315, 318, 319, 322, 323, 324, 326, 327, 328, 331, 332, 333, 334], "notebook": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 100, 335], "notic": 319, "notin": 350, "novel": [319, 323, 342], "now": [331, 355], "np": [7, 9, 30, 31, 32, 33, 106, 127, 128, 131, 132, 134, 135, 136, 162, 163, 165, 264, 265, 267, 269, 275, 276, 278, 281, 282, 292, 356, 358], "nu": 339, "nuanc": [339, 341, 347], "null": 322, "nullabl": 136, "num_leav": [23, 24, 25, 26, 36, 38, 39, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "num_parallel_tre": [9, 46, 54, 55, 56], "number": [104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 124, 125, 147, 156, 172, 202, 203, 204, 205, 206, 207, 208, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 239, 243, 250, 264, 265, 266, 267, 268, 269, 275, 276, 277, 278, 281, 282, 290, 291, 292, 293, 302, 313, 315, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 332, 333, 334, 338, 341, 343, 348, 349, 350, 351, 352, 353, 356], "numer": [2, 3, 5, 19, 20, 23, 25, 26, 56, 57, 103, 104, 112, 113, 114, 115, 116, 117, 118, 122, 123, 136, 156, 158, 173, 200, 204, 205, 206, 207, 208, 211, 212, 213, 216, 219, 220, 221, 222, 223, 224, 231, 238, 239, 263, 264, 265, 274, 292, 313, 315, 321, 322, 326, 328, 332, 337, 338, 339, 341, 342, 343, 348, 349, 350, 351, 352, 353], "numpi": [7, 9, 30, 31, 32, 33, 100, 142, 143, 169, 170, 260, 265, 283, 355, 358], "o7": 99, "object": [9, 23, 24, 25, 26, 33, 36, 38, 39, 45, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 136, 156, 172, 173, 187, 188, 190, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 302, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 358], "observ": [314, 318, 319, 323, 330, 332, 349, 351], "obtain": [64, 216, 315, 319, 320, 322, 323, 326, 327, 332, 334, 341, 343], "occur": [136, 227, 347, 349, 352], "occurr": 136, "ocsvm": 319, "od_marginal_outlier_distribut": 319, "od_score_distribut": 319, "od_tsne_comparison": 319, "odd": [326, 328, 329, 330, 332, 347], "off": [231, 291, 292, 293, 327, 334, 343], "offer": [314, 315, 320, 321, 326, 327, 328, 334, 335, 337, 338, 349, 350, 351, 353], "often": [337, 338, 341, 342, 343, 347, 349, 353, 356, 358], "old": [100, 187], "omega": [337, 341], "onc": [104, 328, 343], "one": [61, 64, 65, 106, 115, 116, 118, 136, 156, 199, 200, 201, 205, 210, 211, 212, 213, 216, 217, 220, 221, 222, 223, 224, 226, 229, 238, 263, 274, 290, 291, 292, 293, 302, 315, 317, 318, 319, 320, 321, 322, 323, 326, 328, 330, 332, 333, 337, 341, 343, 347, 351], "oneclasssvm": 319, "onehot": [5, 116, 117, 118, 317], "ones": [124, 322, 326, 332, 337, 338], "ongo": 335, "onli": [32, 45, 104, 106, 111, 113, 114, 119, 120, 121, 122, 126, 127, 131, 132, 134, 136, 147, 185, 186, 201, 203, 204, 205, 206, 207, 208, 214, 216, 220, 221, 222, 223, 224, 234, 235, 237, 264, 265, 291, 292, 302, 315, 319, 323, 326, 331, 333, 334, 337, 338, 341, 343, 347, 349, 350, 355, 356, 358], "ood": 351, "oot": [76, 107, 165], "op": 100, "open": 317, "oper": [1, 11, 116, 277, 278, 311, 316, 335, 337, 342, 343, 344, 347, 349, 361], "operatio": 317, "opportun": 347, "optim": [35, 40, 41, 99, 264, 265, 277, 278, 281, 282, 290, 291, 292, 293, 319, 335, 338, 341, 344, 345, 348, 353, 361], "optimisticbia": 348, "option": [9, 33, 45, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 136, 172, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 257, 258, 259, 260, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 302, 313, 318, 319, 320, 321, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 356], "optuna": [35, 40, 41, 291, 361], "order": [45, 113, 115, 191, 319, 321, 322, 328, 338, 343], "order_bi": [42, 191, 357], "ordin": [47, 115, 116, 117, 118, 317, 321, 347, 353], "org": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "orient": 45, "origin": [9, 214, 246, 247, 264, 265, 266, 268, 275, 277, 281, 319, 323, 324, 326, 327, 328, 331, 332, 333, 334, 348, 350, 351, 352], "original_scal": 332, "orthogon": [337, 338, 342], "other": [115, 117, 127, 128, 131, 132, 134, 135, 211, 217, 218, 221, 229, 314, 318, 319, 320, 321, 323, 326, 327, 328, 330, 332, 334, 335, 339, 345, 347, 350, 351, 357], "otherwis": [138, 179, 226, 227, 229, 231, 313, 315, 319, 320, 327, 328, 329, 330, 331, 332, 333, 334, 348, 350, 351], "our": [327, 330, 331, 333, 350], "out": [107, 165, 212, 229, 250, 264, 265, 350, 351], "outcom": [205, 229, 319, 347, 349, 352], "outer": [68, 69, 202, 218, 351], "outlier": [0, 1, 11, 109, 110, 111, 115, 202, 218, 311, 315, 316, 321, 335, 348, 349, 353, 361], "outlier_detect": 319, "outliers_sample_index": 8, "outlin": [319, 352], "outpupt": 357, "output": [32, 47, 104, 106, 118, 136, 156, 226, 227, 229, 238, 260, 264, 265, 266, 267, 268, 275, 276, 277, 278, 281, 283, 319, 326, 327, 328, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 350, 358], "outputcol": 30, "outsid": [216, 218, 269, 315, 326, 328, 332, 350], "over": [220, 221, 222, 223, 224, 229, 318, 320, 326, 328, 334, 341, 350, 351], "overal": [173, 314, 317, 319, 322, 323, 328, 337, 338, 339, 340, 341, 342, 347, 348, 349, 350, 351, 352], "overcom": [326, 328], "overconfid": 350, "overfit": [9, 33, 62, 86, 206, 210, 222, 311, 312, 322, 335, 338, 340, 343, 346, 347, 349, 352, 361], "overflow": [45, 319], "overli": [347, 352, 353], "overrid": [2, 9, 33, 152, 317], "overridden": [157, 159], "overview": [319, 320], "overwrit": 104, "own": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 86], "p": [47, 124, 313, 318, 319, 324, 326, 327, 329, 332, 334, 347, 348, 349, 350, 351, 352], "p_": 341, "p_i": [318, 324, 349, 351], "p_j": 341, "p_k": 341, "p_valu": 322, "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 100, 291, 326, 327, 328, 330, 331, 332, 334, 343], "pad": 45, "page": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 319], "pair": [64, 123, 156, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 221, 227, 250, 264, 265, 321, 322, 348], "pairwis": [234, 264, 265, 321, 328, 337, 339, 341, 342, 349], "pam": [50, 51, 216, 349, 350, 352], "panda": [5, 10, 30, 31, 32, 33, 100, 115, 136, 142, 143, 179, 199, 204, 237, 317, 358], "panel": [320, 335], "paper": [115, 321, 326, 328], "paragraph": [327, 334], "parallel": [36, 37, 38, 39, 242, 264, 265, 281, 282, 290, 291, 292, 293, 338], "parallel_backend": [290, 291, 292, 293], "parallelaxi": 45, "param": [36, 37, 38, 39, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "param_bound": [38, 292], "param_distribut": [37, 39, 291, 293, 356], "param_grid": [36, 37, 290], "param_spac": 356, "param_typ": [38, 292], "paramet": [99, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 127, 128, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 179, 184, 187, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 315, 319, 320, 322, 324, 328, 330, 331, 332, 333, 334, 337, 340, 341, 342, 344, 348, 356], "parametr": [124, 319, 322], "parent": [47, 257, 337, 338], "pariti": 347, "parsimoni": 337, "part": [318, 341, 348], "partial": [226, 227, 229, 266, 267, 269, 322, 325, 329, 335, 337, 338, 342, 348], "partial_depend": [326, 332], "particl": [35, 40, 41, 292, 341, 361], "particular": [318, 327, 331, 334, 343], "particularli": [115, 318, 319, 321, 327, 334, 337, 338, 342, 350, 351], "partit": [104, 109, 110, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 173, 202, 203, 205, 212, 213, 238, 247, 268, 269, 319, 323, 326, 330, 332, 341], "partitionto": 215, "parzen": 291, "pass": [29, 258, 259, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 289, 291, 340, 344], "past": 317, "path": [141, 144, 146, 155, 232, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 300, 301, 302, 319, 323, 327, 334, 338, 339, 344], "path_or_buf": [144, 155], "patienc": [277, 278], "pattern": [115, 215, 318, 319, 321, 323, 330, 337, 338, 339, 341, 343, 349, 350, 351, 352, 353], "pay_1": [2, 3, 5, 7, 13, 17, 19, 21, 23, 25, 42, 50, 56, 60, 64, 68, 72, 76, 200, 298, 313, 343, 347, 353], "pay_1_special_sv2": 5, "pay_2": [2, 3, 5, 13, 19, 25, 56, 60, 64, 72], "pay_3": [2, 3, 5, 13, 25, 56, 60, 64, 72, 343], "pay_4": [2, 3, 5, 25, 56, 72, 76], "pay_5": [2, 3, 5, 25, 56, 60, 64], "pay_6": [2, 3, 5, 25, 56, 60, 64, 72, 76], "pay_amt1": [2, 3, 5, 25, 56, 76, 343, 353], "pay_amt2": [2, 3, 5, 25, 56, 64], "pay_amt3": [2, 3, 5, 25, 56], "pay_amt4": [2, 3, 5, 25, 56], "pay_amt5": [2, 3, 5, 25, 56], "pay_amt6": [2, 3, 5, 25, 56], "pca": [111, 116, 202, 218, 316, 319], "pd": [5, 30, 31, 32, 33, 45, 105, 136, 137, 139, 141, 151, 162, 163, 165, 184, 219, 220, 222, 229, 251, 302, 317, 326, 332, 358], "pd_": [326, 329], "pdf": 334, "pdp": [31, 229, 325, 328, 329, 330, 334, 335], "peak": 328, "pearson": [3, 45, 115, 123, 321, 322], "penal": [337, 342, 343, 349], "penalti": [337, 342, 343, 348, 352], "per": [114, 125, 207, 216, 264, 265, 266, 267, 277, 278, 326, 328, 334, 337, 338, 339, 340, 341, 342, 343], "percent": [350, 351, 352], "percentag": [164, 223, 250, 317], "percentil": [79, 227, 229, 317], "perfect": [115, 318, 321, 347, 349], "perforamnc": [212, 213], "perform": [42, 47, 50, 51, 58, 68, 69, 72, 73, 76, 86, 104, 109, 110, 111, 116, 117, 124, 136, 172, 173, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 264, 265, 290, 291, 292, 293, 311, 314, 318, 319, 322, 323, 324, 326, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 348, 350, 351, 352, 353, 356, 357, 361], "performance_metr": [76, 212, 213, 347], "period": 330, "peripheri": 351, "perman": 322, "permiss": 108, "permut": [32, 125, 230, 322, 325, 335], "permutation_import": [326, 333], "perorm": 351, "perp": 322, "perspect": 314, "perturb": [203, 208, 216, 219, 224, 228, 313, 315, 327, 331, 335, 346, 348, 353], "perturb_featur": [72, 73, 203, 208, 216, 219, 224, 298, 313, 315, 352], "perturb_method": [47, 72, 73, 203, 208, 216, 219, 224, 313, 315, 352], "perturb_s": [313, 315, 352], "perturbaion": 352, "peter": 322, "pfi": [46, 230, 325, 335], "pfi_result": 46, "phase": [322, 352], "phenomenon": [318, 319], "phi_": [327, 334], "phi_0": [327, 334], "phi_j": [327, 334], "pi_i": 350, "pi_width": [50, 51, 216, 350], "pilla": 322, "piml": [313, 315, 318, 319, 320, 328, 329, 330, 331, 332, 333, 334, 355], "pinpoint": [319, 335, 349, 350, 351, 353], "pip": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 100], "pipelin": [0, 2, 44, 48, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 335, 358, 361], "pipeline1": [2, 47], "pisa": [319, 323], "pitkin": 330, "pizzuti": 319, "pkdd": 319, "pkl": 144, "place": [99, 334], "placehold": 136, "plai": [327, 334], "platt": 319, "player": [327, 334], "pleas": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 319, 326, 328, 330, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344], "plot": [3, 4, 7, 8, 15, 16, 19, 20, 21, 22, 23, 24, 31, 32, 36, 37, 38, 39, 41, 42, 45, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 80, 106, 109, 110, 111, 112, 113, 114, 115, 116, 123, 124, 125, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 290, 291, 292, 293, 302, 313, 314, 315, 316, 318, 319, 325, 328, 329, 330, 331, 333, 335, 339, 340, 344, 347, 348, 349, 350, 351, 352, 353], "plot_0_accuracy_table_cl": [54, 58, 361], "plot_0_accuracy_table_reg": [55, 58, 361], "plot_0_data_oper": [2, 11, 361], "plot_0_fairness_cl": [76, 77, 361], "plot_0_glm_cl": [13, 27, 361], "plot_0_glm_reg": [14, 27, 361], "plot_0_global_explain": [79, 81, 361], "plot_0_grid": [36, 40, 361], "plot_0_modelzoo": [42, 43, 361], "plot_0_reliability_cl": [64, 66, 361], "plot_0_resilience_cl": [68, 70, 361], "plot_0_robustness_cl": [72, 74, 361], "plot_0_sklearn": [31, 34, 361], "plot_0_slice_overfit_cl": [60, 62, 361], "plot_0_valres_attribut": [45, 48, 361], "plot_1_arbitrari": [32, 34, 361], "plot_1_dt_cl": [15, 27, 361], "plot_1_dt_reg": [16, 27, 361], "plot_1_eda": [3, 11, 361], "plot_1_local_explain": [80, 81, 361], "plot_1_random": [37, 40, 361], "plot_1_reliability_reg": [65, 66, 361], "plot_1_residual_cl": [50, 52, 361], "plot_1_residual_reg": [51, 52, 361], "plot_1_resilience_reg": [69, 70, 361], "plot_1_robustness_reg": [73, 74, 361], "plot_1_slice_accuracy_cl": [56, 58, 361], "plot_1_slice_accuracy_reg": [57, 58, 361], "plot_1_slice_overfit_reg": [61, 62, 361], "plot_1_valres_sav": [46, 48, 361], "plot_2_feature_select": [4, 11, 361], "plot_2_pipelin": [47, 48, 361], "plot_2_pso": [38, 40, 361], "plot_2_reludnn_cl": [17, 27, 361], "plot_2_reludnn_reg": [18, 27, 361], "plot_2_scor": [33, 34, 361], "plot_3_feature_engin": [5, 11, 361], "plot_3_gaminet_cl": [19, 27, 361], "plot_3_gaminet_reg": [20, 27, 361], "plot_3_optuna": [39, 40, 361], "plot_4_moe_cl": [21, 27, 361], "plot_4_moe_reg": [22, 27, 361], "plot_4_subsampl": [6, 11, 361], "plot_5_drift_test": [7, 11, 361], "plot_5_lineartree_cl": [23, 27, 361], "plot_5_lineartree_reg": [24, 27, 361], "plot_6_const_tree_cl": [25, 27, 361], "plot_6_const_tree_reg": [26, 27, 361], "plot_6_outlier_detect": [8, 11, 361], "plot_7_data_with_predict": [9, 11, 361], "plot_8_extra_data": [10, 11, 361], "plot_sav": [46, 302], "plot_typ": [3, 112], "plu": [156, 358], "png": [46, 99, 302], "point": [25, 109, 114, 117, 172, 213, 215, 216, 227, 229, 231, 238, 239, 264, 265, 266, 267, 268, 269, 318, 319, 323, 326, 328, 329, 330, 331, 332, 334, 339, 341, 343, 348, 349, 350, 352, 353], "pointer": 45, "pointsiz": 45, "polynomi": [113, 319], "poor": [343, 350, 351, 353], "poorest": 351, "poorli": [349, 350, 353], "popescu": [326, 329], "popul": [106, 220, 221, 222, 223, 224, 244, 318, 324, 331, 335, 337, 338, 339, 340, 342, 343, 351, 356], "popular": [344, 353, 358], "popup": [45, 302], "posit": [14, 37, 45, 115, 141, 215, 226, 227, 229, 231, 264, 265, 321, 337, 340, 341, 342, 343, 347, 349], "possess": [327, 334], "possibl": [227, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 314, 327, 334, 349, 356], "post": [0, 78, 82, 322, 333, 335], "poster": 319, "postgrest": [], "potenti": [124, 206, 210, 218, 222, 319, 322, 323, 347, 349, 351], "power": [114, 335, 337, 338, 339, 342, 343, 347], "pp": [319, 322, 323], "pr": [200, 211, 212, 213, 221], "practic": [314, 327, 334, 343, 347, 349], "practition": [337, 342, 347, 348, 349, 353], "prasanta": 322, "pre": [204, 206, 207, 208, 212, 220, 221, 223, 224, 275, 276, 277, 278, 322, 327, 334, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 358], "prebin": 212, "precis": [45, 54, 200, 210, 211, 212, 213, 319, 323, 347, 349, 352], "precision_recal": [46, 54, 210], "precomput": [14, 37, 56, 57, 104, 204, 205, 206, 207, 208, 212, 217, 220, 221, 222, 223, 224, 317, 353], "pred": [265, 276, 282, 348, 352], "predecessor": 338, "predefin": [106, 210, 222, 322, 356], "predict": [1, 11, 29, 30, 32, 42, 53, 72, 73, 76, 82, 128, 131, 132, 160, 161, 175, 180, 199, 200, 201, 202, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 226, 227, 228, 229, 230, 231, 238, 240, 242, 247, 249, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 294, 295, 313, 315, 319, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 340, 344, 345, 346, 347, 348, 349, 351, 352, 353, 357, 358, 361], "predict_func": [29, 30, 32, 358], "predict_funct": [29, 30, 32, 260, 283, 294, 295, 358], "predict_last_hidden_lay": [17, 18], "predict_proba": [32, 42, 226, 227, 229, 258, 260, 261, 264, 266, 268, 270, 272, 274, 275, 277, 279, 281, 284, 286, 288, 327, 328, 329, 330, 331, 332, 358], "predict_proba_func": [29, 30, 32, 358], "predict_proba_funct": [29, 30, 32, 260, 294, 358], "prediction_proba": 128, "predictor": [217, 314, 326, 330, 331, 332, 333, 340, 341, 350, 351], "prefer": [106, 112, 199, 200, 201, 205, 210, 211, 212, 213, 216, 217, 220, 221, 222, 223, 224, 290, 291, 292, 293], "prefix": 302, "prepar": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 45, 46, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 316, 319, 333], "preprint": [322, 327, 334], "preprocess": [0, 16, 17, 18, 19, 20, 22, 24, 26, 37, 47, 51, 55, 57, 61, 64, 65, 68, 69, 73, 79, 102, 103, 104, 105, 110, 116, 117, 127, 128, 131, 132, 134, 137, 144, 153, 154, 155, 175, 176, 178, 179, 180, 181, 182, 184, 185, 186, 263, 265, 274, 313, 316, 323, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "preprocessor": 133, "presenc": 319, "present": [313, 314, 315, 320, 327, 334, 341, 351], "preserv": [337, 338, 340, 342, 344, 352], "preval": 319, "prevent": [319, 340, 347], "previou": [47, 104, 153, 315, 328, 330, 338, 358], "price": [337, 342, 347], "prime": [327, 334], "princip": [111, 116, 321, 323], "principl": 319, "print": [42, 45, 266, 267, 277, 278, 281, 282, 347], "priorit": [348, 351], "privileg": 347, "proba": [76, 132, 258, 261, 270, 272, 274, 279, 284, 288], "proba_cutoff": [76, 213, 347], "probabilist": [200, 205, 211, 212, 213, 221, 341], "probabl": [29, 30, 132, 161, 200, 205, 211, 212, 213, 215, 221, 226, 227, 229, 231, 258, 260, 261, 264, 266, 268, 270, 272, 274, 275, 276, 277, 279, 281, 284, 286, 288, 294, 313, 318, 326, 328, 329, 330, 332, 334, 340, 341, 343, 347, 349, 350, 351, 352], "problem": [56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 313, 315, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "problemat": [202, 218, 327, 334], "proceed": [319, 327], "process": [1, 11, 47, 104, 117, 118, 124, 136, 156, 228, 230, 245, 281, 282, 291, 302, 311, 315, 317, 319, 322, 323, 327, 331, 332, 337, 339, 343, 347, 348, 353, 356, 357, 361], "processor": [290, 291, 292, 293], "prod_j": 338, "produc": [117, 282, 330, 341, 349, 350], "product": [335, 337, 342, 353], "profil": 243, "program": [5, 9, 10, 29, 30, 31, 32, 33, 47, 76], "programmat": 300, "progress": [45, 198, 266, 267, 277, 278, 281, 282, 351], "progressivethreshold": 45, "promot": [348, 352], "prompt": [], "proper": [335, 348, 349, 350], "properti": [0, 102, 103, 105, 119, 120, 121, 122, 126, 147, 148, 149, 151, 154, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 188, 195, 318, 327, 334, 338, 348, 352], "proport": [64, 65, 109, 172, 201, 207, 214, 219, 250, 266, 267, 277, 278, 281, 282, 313, 315, 318, 324, 349, 351], "propos": [319, 323], "propto": 348, "prostat": 29, "protect": [0, 76, 107, 134, 162, 163, 200, 205, 211, 212, 213, 221, 314, 347], "protected_data": 76, "provid": [45, 110, 112, 114, 115, 145, 172, 173, 200, 201, 208, 211, 223, 228, 231, 238, 239, 241, 247, 258, 259, 260, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 302, 314, 317, 318, 319, 320, 321, 323, 324, 326, 327, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 358], "proxim": [216, 327, 331, 349, 350, 351, 352], "prune": [264, 265, 337], "pseudo": [338, 358], "psi": [7, 21, 22, 50, 51, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 106, 318, 324, 335, 341, 348, 349, 350, 352, 353], "psi_bin": [21, 22, 50, 51, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 106, 341, 348, 349, 350, 351, 352, 353], "psi_bucket": 318, "psi_method": [21, 22, 50, 51, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 106, 341, 348, 349, 350, 351, 352, 353], "pso": [291, 292, 341, 356], "public": [29, 319], "purifi": 338, "purpos": [207, 223, 317, 319, 328, 332, 334, 355], "put": [327, 334], "py": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 313, 314, 315, 318, 319, 320, 328, 329, 330, 331, 332, 333, 334, 355, 361], "py311": [], "pyal": [326, 328], "pyspark": [28, 34, 41, 358, 361], "pyswarm": 100, "python": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 100, 291, 326, 327, 328, 334, 343, 358], "pytorch": [277, 278], "q": [318, 324, 349, 350, 351, 352], "q1": 320, "q3": 320, "q_": [348, 350, 351, 352], "q_1": 350, "q_i": [318, 324, 351], "q_k": 348, "q_l": 348, "qmc": [39, 291], "qmcsampler": 291, "qr": 350, "quad": 347, "qualiti": [291, 292, 293, 335, 349, 352], "quantif": [335, 350], "quantifi": [227, 313, 318, 319, 323, 327, 334, 347, 349, 350, 351, 352], "quantil": [5, 47, 56, 57, 60, 61, 72, 73, 104, 106, 109, 110, 111, 156, 201, 203, 204, 205, 206, 207, 208, 212, 214, 216, 217, 219, 220, 221, 222, 223, 224, 317, 318, 319, 324, 326, 328, 335, 347, 348, 349, 350], "quantiti": [337, 342], "quartil": 320, "quasi": 291, "queri": 349, "question": 0, "quicker": [326, 328], "quit": 328, "r": [341, 342, 343, 347, 348, 349, 350, 351, 352], "r2": [9, 14, 16, 20, 22, 24, 26, 31, 33, 37, 55, 199, 202, 203, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 220, 222, 224, 290, 291, 292, 293, 315, 349, 356], "r_": [338, 348, 350, 351], "r_1": 341, "r_2": 341, "r_i": 350, "r_j": 348, "race": [47, 314, 317, 347], "radar": 45, "radial": 319, "rain": 328, "rais": [108, 226, 286, 287, 302, 347], "rajeev": 319, "ramani": 322, "ramaswami": 319, "ramaswamy2000": 319, "randint": [39, 356], "random": [35, 39, 40, 41, 109, 111, 112, 113, 114, 115, 116, 117, 123, 124, 125, 164, 172, 201, 202, 203, 207, 208, 214, 215, 216, 218, 219, 223, 224, 226, 227, 228, 229, 230, 231, 239, 264, 265, 266, 267, 268, 269, 277, 278, 281, 282, 291, 292, 293, 319, 322, 323, 324, 326, 331, 333, 335, 338, 346, 349, 351, 361], "random_st": [14, 15, 16, 19, 20, 23, 24, 25, 26, 31, 32, 33, 36, 37, 38, 39, 42, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 109, 111, 112, 113, 114, 115, 116, 117, 123, 124, 125, 164, 172, 201, 202, 203, 207, 208, 214, 215, 216, 218, 219, 223, 224, 226, 227, 228, 229, 230, 231, 239, 264, 265, 266, 267, 268, 269, 277, 278, 281, 282, 291, 292, 293, 350, 358], "randomforestclassifi": 279, "randomforestregressor": 280, "randomizedsearchcv": 356, "randomli": [114, 117, 172, 231, 315, 318, 319, 323, 324, 326, 327, 331, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 356], "randomsampl": 291, "randomsplit": 30, "rang": [33, 36, 37, 45, 115, 117, 156, 204, 205, 206, 207, 208, 220, 221, 222, 223, 224, 226, 229, 238, 266, 267, 268, 319, 321, 323, 326, 328, 331, 334, 335, 343, 350, 352, 353, 356], "range_": 45, "rank": [115, 202, 218, 313, 315, 321, 326, 333, 348, 349, 350, 351, 352], "rare": 319, "rastogi": 319, "rate": [201, 207, 214, 216, 264, 265, 266, 267, 277, 278, 337, 338, 339, 342, 343, 347, 349, 350, 351, 356], "rather": [226, 331], "ratio": [29, 76, 115, 123, 200, 202, 211, 212, 213, 218, 264, 265, 314, 315, 322, 348], "rational": [319, 351], "ravel": [19, 20, 23, 24, 25, 26, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 292, 337, 343], "raw": [131, 132, 134, 135, 137, 142, 143, 150, 151, 162, 165, 173, 179, 184, 313, 315, 317, 335, 337, 338, 339, 340, 342, 343], "raw_data": [179, 184, 347], "raw_extra_data": 10, "rbf": 356, "rcit": 124, "re": [317, 341, 358], "reach": [17, 18, 23, 24, 319, 328, 341], "read": 145, "read_csv": 141, "readi": [317, 358], "real": [338, 341, 349, 351, 352], "realist": 352, "realtim": 45, "reason": 323, "recal": [54, 200, 210, 211, 212, 213, 347, 349, 352], "receiv": 341, "recent": [], "recogn": [327, 334, 344], "recognit": [319, 323], "recommend": [322, 343], "recomput": 341, "reconst_error": [8, 111], "reconstruct": [111, 319, 323], "record": [313, 315, 319, 326, 330, 333], "recur": 353, "recurs": [268, 269, 319, 323, 326, 332, 338, 343, 344], "red": [319, 334], "reduc": [115, 117, 212, 213, 226, 319, 322, 323, 327, 328, 334, 337, 338, 339, 341, 342, 343, 347, 350, 351, 352], "reduct": [111, 117, 319, 321, 323, 327, 334, 348, 349, 350], "redund": [124, 322], "refer": [76, 116, 118, 200, 205, 211, 212, 213, 221, 231, 266, 267, 314, 316, 318, 325, 328, 332, 337, 338, 339, 340, 341, 342, 347, 348, 349, 350, 351, 352, 353], "refin": [341, 349, 350, 351, 352, 353], "refit": 350, "reflect": [351, 352], "reg": [9, 55], "reg_alpha": [23, 24, 25, 26, 36, 38, 39, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "reg_clar": [264, 265], "reg_lambda": [23, 24, 25, 26, 36, 38, 39, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 266, 267, 268, 269], "reg_mono": [23, 24, 264, 265, 277, 278, 337, 342], "regard": 320, "regardless": 353, "region": [206, 207, 208, 220, 222, 223, 224, 275, 276, 313, 315, 337, 338, 339, 341, 342, 343, 349, 350, 351, 352, 353], "regist": [9, 33, 108, 127, 128, 131, 132, 134, 135, 139, 145, 189, 193, 194, 209, 225, 252, 253, 257, 317, 345], "register_nam": [196, 254], "registered_model": 42, "registr": 316, "registri": [0, 335], "regress": [0, 12, 21, 27, 41, 49, 52, 53, 58, 59, 62, 63, 66, 67, 70, 71, 74, 82, 168, 174, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 265, 266, 267, 268, 269, 276, 278, 282, 283, 287, 290, 291, 292, 293, 312, 317, 319, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 350, 351, 352, 353, 356, 358, 361], "regressor": [28, 34, 41, 265, 267, 276, 277, 278, 282, 285, 295, 297, 338, 358, 361], "regular": [217, 264, 265, 266, 267, 268, 269, 277, 278, 281, 282, 319, 337, 340, 342, 343, 348, 352], "regulatori": [335, 347, 351], "rel": [315, 319, 322, 323, 337, 338, 339, 340, 342, 343], "relat": [128, 201, 202, 214, 221, 313, 315, 318, 322, 324, 330], "relationship": [113, 114, 115, 123, 215, 217, 229, 242, 266, 267, 277, 278, 318, 319, 321, 322, 326, 328, 330, 332, 333, 334, 337, 338, 339, 340, 342, 343, 348, 349, 351, 353], "releas": 333, "relev": [211, 322, 328, 329, 330, 332, 341, 356], "reli": [230, 319, 320, 323, 348, 353], "reliability_coverag": 315, "reliability_perf": 313, "reliabl": [9, 33, 66, 86, 201, 202, 207, 214, 216, 223, 230, 311, 312, 319, 326, 328, 335, 337, 338, 342, 346, 348, 349, 351, 352, 353, 361], "relianc": [326, 333], "reload": 9, "reload_d": [9, 33], "relu": [264, 265, 281, 282, 311, 335, 336], "relu_net": 343, "reludnn": [42, 281, 282, 328], "remain": [68, 69, 203, 219, 313, 315, 322, 327, 330, 331, 334, 341, 350, 352], "remark": [338, 343], "remedi": [346, 347, 351], "remov": [8, 124, 153, 319, 322, 326, 327, 333, 334, 338, 343, 348, 352], "remove_outli": 319, "render": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "rendermod": 45, "rental": [315, 328, 329, 330, 331, 332, 333, 334], "repai": 347, "repaid": 347, "repeat": [72, 203, 208, 216, 219, 230, 292, 319, 322, 323, 326, 331, 333, 338, 341], "repetit": [224, 333], "replac": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 118, 136, 187, 213, 327, 334, 339, 358], "report": [232, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "repositori": [313, 315, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 357], "repres": [114, 172, 213, 281, 282, 313, 314, 315, 318, 319, 321, 323, 326, 328, 329, 330, 331, 332, 334, 337, 338, 341, 342, 343, 344, 349, 351, 356], "represent": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 106, 228, 237, 239, 319, 323, 336, 338, 339, 343, 347, 353], "reproduc": [109, 111, 112, 113, 115, 116, 117, 123, 124, 125, 172, 201, 202, 203, 207, 208, 214, 215, 216, 218, 219, 223, 224, 226, 228, 229, 230, 231, 239, 266, 267, 268, 277, 278, 281, 282, 291, 292, 293, 335], "request_build": [], "requir": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 118, 123, 266, 267, 268, 313, 319, 320, 323, 326, 327, 328, 332, 334, 335, 343, 347, 350], "rerun": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "res_valu": [56, 57, 60, 61, 64, 65, 72, 73, 76, 298, 348, 352, 353], "research": 322, "resect": [318, 324], "resembl": 351, "reset_preprocess": [5, 47, 317], "reshap": [33, 292], "reshuffl": [264, 265], "residu": [9, 33, 52, 54, 55, 56, 57, 86, 214, 215, 216, 217, 220, 221, 223, 224, 266, 267, 311, 335, 338, 339, 346, 348, 350, 351, 352, 353, 361], "resili": [9, 33, 70, 72, 73, 86, 202, 218, 311, 312, 335, 341, 346, 353, 361], "resilience_dist": [313, 315], "resilience_perf": [313, 315], "resilreli": 350, "resiz": 302, "resolut": 238, "respect": [125, 221, 264, 265, 318, 322, 324, 326, 329, 331, 334, 337, 338, 341, 342, 343, 347, 350, 352], "respons": [17, 18, 214, 216, 217, 244, 264, 281, 282, 313, 315, 318, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "response_kwarg": 216, "response_method": [79, 226, 227, 229, 328, 329, 330, 332], "response_typ": [50, 51, 216, 349, 350, 352], "rest": [56, 57, 227, 319, 323, 326, 328, 330, 333, 341, 350, 352, 353], "restrict": 341, "result": [0, 3, 4, 5, 6, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 106, 109, 110, 111, 112, 113, 114, 115, 116, 123, 124, 125, 172, 173, 191, 193, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 257, 269, 290, 291, 292, 293, 298, 312, 313, 314, 315, 319, 322, 323, 326, 327, 328, 331, 332, 333, 334, 337, 339, 340, 341, 342, 343, 344, 347, 348, 350, 351, 352, 353, 356], "result1": 47, "result2": 47, "retain": 124, "retrain": [337, 341], "retriev": [237, 243, 302, 348, 352, 353, 357], "return": [29, 30, 32, 47, 99, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 145, 148, 151, 156, 165, 171, 172, 173, 179, 184, 188, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 317, 324, 327, 329, 334, 358], "return_data": [329, 331], "reus": 317, "reveal": [313, 315, 319, 326, 333, 351, 353], "revert": 4, "reweight": 351, "rewritten": 338, "rf": [349, 357], "rf2": 42, "rf_max_depth": [50, 51, 216, 349, 350, 351, 352], "rf_n_estim": [50, 51, 216, 349, 350, 351, 352], "rgba": 45, "ribeiro": 327, "ribeiro2016": [327, 331], "rich": 335, "ridg": [217, 348, 352], "right": [45, 314, 319, 322, 326, 327, 329, 331, 334, 338, 341, 342, 347, 348, 349], "right_inclus": 25, "rightarrow": 348, "rigor": 335, "risk": [337, 338, 342, 346, 347, 350, 353], "robsut": 352, "robust": [9, 33, 68, 74, 76, 86, 115, 156, 203, 208, 216, 219, 224, 311, 312, 321, 335, 338, 340, 341, 344, 346, 349, 351, 353, 361], "robustness_perf": [313, 315], "robustness_perf_worst": [313, 315], "roc": [54, 210, 349], "roc_auc": [46, 54, 210], "role": [327, 334], "root": 313, "rotat": 45, "rough": [264, 265, 269], "roughli": 343, "round": [4, 266, 267], "row": [2, 3, 5, 8, 9, 17, 18, 30, 33, 56, 57, 60, 61, 64, 65, 72, 73, 76, 238, 343], "row_nam": 45, "royal": 326, "rr": [200, 211, 212, 213, 221], "rule": [326, 329, 344, 347], "run": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 42, 45, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 86, 99, 106, 109, 110, 111, 112, 113, 114, 115, 116, 123, 124, 125, 155, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 253, 254, 257, 290, 291, 292, 293, 317, 321, 322, 356], "run_id": [155, 196, 209, 225, 253, 254], "runtim": [291, 292, 293], "rush": 328, "rv": 293, "s3": 29, "s_1": 337, "s_2": 337, "s_i": 350, "s_l": 319, "s_m": [337, 338, 342], "s_r": 319, "said": 343, "same": [162, 163, 165, 187, 196, 228, 254, 315, 319, 323, 343, 347, 349, 352, 353], "sameer": 327, "samesign": 45, "sampl": [0, 2, 3, 5, 7, 8, 19, 20, 29, 56, 57, 60, 61, 64, 65, 68, 69, 104, 106, 109, 110, 111, 112, 113, 114, 115, 117, 123, 127, 128, 131, 132, 134, 154, 156, 160, 161, 164, 166, 169, 170, 172, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 214, 216, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 239, 243, 246, 247, 248, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 291, 293, 298, 317, 318, 319, 320, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353, 358], "sample_dataset": [204, 205, 206, 207, 208, 220, 221, 222, 223, 224], "sample_id": [204, 205, 206, 207, 208, 220, 221, 222, 223, 224, 331, 334], "sample_idx": [6, 8, 172, 324], "sample_idx1": [7, 106, 298], "sample_idx2": [7, 106, 298], "sample_idx_by_llm": 243, "sample_index": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 50, 51, 80, 228, 231, 246, 247, 248, 249, 337, 338, 339, 340, 341, 342, 344, 349], "sample_method": [113, 114], "sample_s": [3, 6, 45, 50, 51, 79, 112, 113, 114, 115, 116, 117, 172, 215, 216, 226, 227, 229, 230, 239, 264, 265, 324, 328, 329, 330, 332, 334, 349, 350, 352], "sample_weight": [127, 128, 176, 181, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 288, 289], "sampler": [39, 291], "sampler_arg": 291, "san": 45, "sarinnapakorn": [319, 323], "satisfi": [338, 347], "save": [45, 144, 155, 251, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 302], "save_data": [47, 257], "save_img": 45, "save_model": [47, 257], "save_preprocess": 144, "save_testsuit": [47, 257], "saveasimag": 45, "scalabl": [264, 265], "scale": [5, 117, 156, 216, 219, 315, 332, 335, 337, 338, 339, 340, 341, 342, 344, 352], "scale_numer": [5, 14, 16, 17, 18, 19, 20, 22, 24, 26, 37, 47, 51, 55, 57, 61, 64, 65, 68, 69, 73, 79, 317, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352], "scaler": 156, "scatter": [113, 114, 215, 334, 349], "scenario": [218, 313, 315, 319, 335, 349, 351, 352], "schema": 30, "scheme": [318, 319, 323, 324], "schoelkopf": 322, "sch\u00f6lkopf": 319, "sch\u00f6lkopf2001": 319, "scientist": 335, "scikit": [100, 260, 283, 284, 285, 296, 297, 319, 326, 330, 332, 333, 335, 340, 344, 356, 358], "scikitlearn": 358, "scipi": [39, 100, 291, 293, 318, 324, 356], "score": [2, 8, 9, 28, 34, 41, 64, 65, 106, 109, 110, 111, 123, 125, 202, 203, 211, 212, 213, 214, 216, 217, 218, 219, 224, 242, 243, 245, 246, 247, 286, 287, 291, 323, 326, 327, 328, 333, 334, 337, 338, 342, 345, 347, 349, 351, 352, 361], "scoredmodel_californiah": 358, "scott": [327, 334], "screen": [264, 265, 266, 267, 268, 269], "script": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 355], "seamless": [335, 345], "search": [35, 40, 41, 266, 267, 269, 290, 291, 292, 293, 361], "season": [4, 8, 9, 10, 14, 26, 45, 57, 61, 65, 73, 79, 332, 334, 337, 338, 339, 341, 342, 343, 348, 349, 350, 351, 352], "seciton": 345, "second": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 106, 264, 265, 313, 320, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "section": [0, 41, 86, 311, 313, 314, 315, 317, 318, 319, 320, 327, 328, 330, 334, 343, 347, 348, 351, 352, 353], "see": [115, 292, 293, 314, 315, 319, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "seed": [29, 30, 109, 111, 112, 113, 114, 115, 116, 117, 123, 124, 125, 164, 172, 201, 202, 203, 207, 208, 214, 215, 216, 218, 219, 223, 224, 226, 227, 228, 229, 230, 231, 239, 264, 265, 266, 267, 268, 277, 278, 281, 282, 291, 292, 293], "seem": [333, 334], "segment": [9, 33, 56, 57, 60, 61, 64, 65, 72, 73, 76, 204, 205, 206, 207, 208, 220, 221, 222, 223, 224, 312, 335, 341, 350, 351, 353], "segment1": [56, 60, 61, 64, 72, 73], "segment2": [56, 60, 61, 64, 72, 73], "segment_info": [204, 205, 206, 207, 208, 220, 221, 222, 223, 224], "select": [0, 1, 11, 14, 30, 37, 106, 111, 118, 119, 120, 121, 122, 123, 124, 125, 126, 147, 154, 156, 158, 185, 186, 204, 206, 207, 208, 215, 218, 220, 221, 222, 223, 224, 226, 228, 229, 231, 244, 246, 247, 248, 249, 264, 265, 269, 311, 313, 315, 316, 319, 323, 326, 328, 335, 337, 340, 341, 347, 348, 349, 350, 351, 352, 356, 361], "self": [167, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 302], "sens": 331, "sensit": [115, 219, 315, 319, 320, 321, 334, 347, 349, 352, 353], "separ": [219, 220, 221, 222, 223, 224, 319, 320, 323, 337, 338, 349], "septemb": [313, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "sequenc": [257, 338], "sequenti": [264, 265, 322, 338, 339], "seri": [45, 326], "seriesasc": 45, "serieslayoutbi": 45, "serif": 45, "serv": [302, 313, 319, 323, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353, 357], "session": 30, "set": [1, 2, 4, 7, 11, 19, 20, 29, 30, 56, 57, 60, 61, 64, 65, 72, 73, 76, 104, 106, 111, 114, 117, 124, 136, 143, 150, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 201, 202, 204, 205, 206, 207, 208, 210, 214, 220, 221, 222, 223, 224, 228, 230, 240, 242, 243, 244, 245, 246, 249, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 301, 313, 315, 317, 318, 319, 320, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 356, 358, 361], "set_active_featur": [4, 317], "set_active_sampl": 324, "set_feature_typ": [338, 339, 341, 342, 348, 349, 350, 351, 352], "set_inactive_featur": [2, 10, 47, 56, 317, 337, 338, 339, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353], "set_inactive_sampl": 8, "set_mlflow_hom": [0, 42], "set_param": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "set_predict": [9, 33, 358], "set_protected_data": [76, 347], "set_protected_extra_data": 76, "set_random_split": [2, 4, 5, 7, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 36, 37, 38, 39, 42, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 317, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "set_raw_extra_data": [10, 76], "set_sample_weight": [2, 317], "set_target": [2, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 33, 47, 50, 51, 55, 56, 57, 76, 317, 340, 344, 347, 353, 358], "set_task_typ": [29, 47, 167], "set_test_idx": [9, 29, 30, 31, 32, 33, 358], "set_train_idx": [9, 29, 30, 31, 32, 33, 358], "setup": [337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "sever": [41, 324, 327, 334, 338, 347, 348, 349, 350, 351, 352, 353, 356], "sex": [2, 3, 5, 13, 25, 56, 76, 347, 353], "sex_2": [2, 5], "shade": 328, "shadowcolor": 45, "shallow": 341, "shap": [100, 231, 325, 335, 338], "shap_": 334, "shap_fi": 334, "shap_scatt": 334, "shap_summari": 334, "shap_waterfal": 334, "shapblog": 334, "shape": [6, 8, 31, 32, 42, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 288, 289, 337, 338, 358], "shaplei": [31, 231, 325, 335], "shaw": 319, "shengchun": [319, 323], "shift": [201, 202, 216, 219, 313, 315, 318, 335, 341, 350, 351, 352, 353], "shim": 319, "short": 341, "shorter": [319, 323], "should": [32, 117, 144, 162, 163, 165, 172, 213, 220, 221, 222, 223, 224, 237, 264, 265, 277, 278, 326, 327, 328, 329, 332, 333, 337, 338, 342, 347, 352, 358], "show": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 44, 45, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 106, 109, 110, 111, 112, 113, 114, 115, 116, 123, 124, 125, 191, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 251, 290, 291, 292, 293, 302, 313, 315, 319, 321, 328, 329, 330, 331, 332, 333, 334, 338, 340, 343, 344, 348, 349, 350, 351, 352, 355], "show_featur": 318, "showcas": 357, "showcont": 45, "showminlabel": 45, "shown": [237, 292, 313, 318, 328, 329, 334, 343, 347, 349], "showtitl": 45, "shrink": 343, "shrinkag": [266, 267], "shu": [319, 323], "shuffl": [164, 172, 324, 326, 333], "shutdown": 29, "shyam": 322, "shyu": [319, 323], "shyu2003": [319, 323], "side": [321, 348, 351], "sigkdd": 327, "sigma": [322, 342, 343, 348, 352], "sigma_": [322, 348], "sigmod": 319, "sigmoid": [264, 265, 342, 343], "signifi": 314, "signific": [115, 124, 315, 321, 322, 326, 327, 333, 334, 337, 338, 347, 350, 351], "significantli": [315, 318, 319, 323, 328, 331, 347, 348, 351], "silent": [42, 198], "similar": [204, 205, 206, 207, 208, 213, 220, 221, 222, 223, 224, 264, 265, 313, 318, 319, 326, 328, 330, 331, 334, 341, 347, 348, 349, 351, 352, 356], "similarli": [315, 319], "simpl": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 319, 328, 347, 349, 353], "simpler": 343, "simplest": 348, "simpli": 339, "simplif": 347, "simplifi": [23, 24, 266, 267, 269, 335, 338, 343, 347, 357], "simucredit": [2, 36, 39, 47, 140, 314, 317], "simucredit_md_exp20240901": 2, "simul": [8, 327, 331, 334, 349, 351, 352], "simultan": 337, "sinc": [314, 315], "singh": 327, "singl": [45, 46, 60, 61, 64, 65, 68, 69, 72, 73, 76, 112, 203, 216, 219, 220, 221, 222, 223, 224, 226, 228, 229, 237, 238, 246, 249, 302, 313, 315, 326, 328, 332, 334, 337, 338, 339, 342, 343, 344, 348, 356], "site": 333, "size": [9, 33, 50, 51, 56, 57, 60, 61, 64, 65, 72, 73, 76, 109, 112, 116, 156, 172, 204, 205, 206, 207, 208, 215, 216, 220, 221, 222, 223, 224, 230, 250, 264, 265, 266, 267, 281, 282, 302, 313, 315, 318, 319, 323, 332, 337, 338, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353, 356], "skew": [319, 348, 349, 353], "skip": [275, 276], "sklearn": [8, 28, 30, 32, 33, 34, 41, 261, 262, 263, 270, 271, 274, 279, 280, 317, 319, 323, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 355, 361], "skmlp": 358, "slice": [9, 33, 53, 58, 82, 204, 205, 206, 207, 208, 220, 221, 222, 223, 224, 298, 313, 315, 328, 332, 335, 346, 350, 352, 361], "slice_featur": [313, 315], "sliced_lin": [328, 332], "slicing_util": [0, 56, 57, 60, 61, 64, 65, 72, 73, 76, 348, 352, 353], "slight": [315, 352], "slightli": [313, 322, 337, 342], "slower": [327, 334], "small": [72, 73, 109, 219, 319, 323, 326, 327, 328, 334, 337, 339, 342, 343, 348, 351, 352], "smalldata": 29, "smaller": [116, 200, 205, 211, 212, 213, 221, 226, 264, 265, 337, 342, 343, 344, 353], "smallest": [136, 315], "smd": [200, 211, 212, 213, 221, 347], "smirnov": [106, 318, 324], "smola": 319, "smooth": [3, 113, 212, 277, 278, 337, 347, 348], "smoother": [238, 338], "smoother_ord": [3, 113], "sne": 319, "snippet": 330, "so": [5, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 315, 320, 322, 326, 327, 331, 333, 334], "soccer": [327, 334], "social": [347, 356], "societ": 347, "societi": 326, "soft": 341, "softmax": [264, 266, 268, 275, 277, 281, 341], "sole": [320, 327, 334], "solid": [45, 335], "solut": [291, 292, 293, 350, 351], "some": [264, 265, 313, 317, 319, 326, 332, 333, 337, 338, 339, 341, 342, 343, 347, 348, 349, 350, 351, 352], "sometim": 358, "sort": [319, 322, 351], "sound": [337, 342], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 179, 317], "space": [111, 117, 216, 219, 227, 229, 264, 265, 266, 268, 269, 275, 276, 277, 281, 319, 323, 341, 348, 349, 350, 351, 352, 353, 356], "spap": 334, "spark": [30, 146], "spark_df": 30, "sparksess": 30, "spars": [111, 337, 338, 342, 350, 353], "sparse_pca": 111, "sparsiti": [111, 337, 340, 352], "spearman": [3, 115, 321], "speci": 317, "special": [5, 136, 275, 276, 311, 317, 341, 343, 348, 350, 351], "special_valu": [5, 136, 317], "specif": [50, 51, 72, 104, 156, 203, 204, 205, 206, 207, 208, 218, 220, 221, 222, 223, 224, 228, 231, 237, 243, 246, 247, 248, 249, 313, 314, 315, 318, 319, 320, 323, 324, 326, 327, 328, 330, 332, 333, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "specifi": [45, 104, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 123, 125, 156, 172, 173, 199, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 215, 220, 221, 222, 223, 224, 226, 229, 231, 238, 245, 246, 247, 266, 267, 281, 282, 290, 291, 292, 293, 302, 313, 315, 320, 322, 324, 327, 328, 332, 333, 334, 337, 342, 343, 349, 350, 352, 356], "spectral": 349, "speed": [226, 227, 229, 230, 231, 318, 328, 329, 330, 332, 334, 338], "speedup": 216, "sphinx": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 82], "sphx_glr_auto_examples_0_data_plot_1_data_summari": 320, "sphx_glr_auto_examples_0_data_plot_4_data_qu": [318, 319], "sphx_glr_auto_examples_1_train_plot_2_register_1_h2o": 355, "sphx_glr_auto_examples_2_explain_plot_0_pfi": 333, "sphx_glr_auto_examples_2_explain_plot_1_pdp": 332, "sphx_glr_auto_examples_2_explain_plot_1_pdp_hstat": 329, "sphx_glr_auto_examples_2_explain_plot_2_ic": 330, "sphx_glr_auto_examples_2_explain_plot_3_al": 328, "sphx_glr_auto_examples_2_explain_plot_4_lim": 331, "sphx_glr_auto_examples_2_explain_plot_5_shap": 334, "sphx_glr_auto_examples_2_explain_plot_6_data_dependent_explain": [328, 329, 330, 331, 332, 333, 334], "sphx_glr_auto_examples_5_compare_plot_0_compare_classif": 313, "sphx_glr_auto_examples_5_compare_plot_0_compare_regress": 315, "sphx_glr_auto_examples_5_compare_plot_1_compare_fair": 314, "split": [0, 2, 23, 24, 25, 26, 29, 30, 36, 38, 39, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 125, 127, 128, 129, 130, 131, 132, 134, 135, 138, 163, 164, 165, 172, 201, 210, 214, 223, 241, 266, 267, 268, 269, 275, 276, 290, 291, 292, 293, 317, 319, 323, 326, 328, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 351, 352, 353], "split_custom": [23, 24, 266, 267, 268, 269], "split_fram": 29, "splitarea": 45, "splitlin": 45, "splitnumb": 45, "splitter": [15, 16, 290, 291, 292, 293], "sport": [327, 334], "sq_residu": 216, "sq_residual_perturb": 216, "sql": 30, "squar": [5, 156, 216, 313, 317, 319, 323, 338, 341, 343, 349, 351, 352], "squared_error": 16, "squarederror": [9, 55], "sridhar": 319, "stabil": [106, 110, 208, 219, 318, 324, 335, 340, 341, 348, 351, 352], "stabl": [125, 337, 338, 339, 340, 342, 343, 348, 352], "stack": [113, 321], "stackstrategi": 45, "stage": [23, 24, 124, 264, 265, 322], "stake": [347, 350], "stand": [107, 165], "standard": [111, 116, 156, 200, 211, 212, 213, 216, 219, 242, 244, 317, 320, 322, 326, 328, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352], "start": [337, 338, 342, 343, 348], "start_tim": 42, "stat": [39, 291, 293, 318, 324, 356], "state": [327, 334, 343], "static": 343, "statist": [115, 173, 202, 204, 207, 218, 227, 242, 244, 245, 277, 278, 281, 282, 317, 318, 321, 322, 324, 325, 330, 335, 343, 347, 349, 350, 352, 353], "statu": [47, 123, 124, 125, 317, 347], "std": [3, 5, 17, 18, 156, 244, 320, 348], "std_dev": 242, "steep": [218, 342], "stem": [228, 246, 247, 331, 340, 343], "step": [104, 124, 128, 144, 153, 155, 257, 275, 276, 281, 282, 317, 319, 322, 323, 326, 327, 333, 334, 338, 343, 350, 351, 352, 356, 358], "step_log": 124, "still": [319, 328, 330, 337, 342, 358], "stop": [23, 24, 264, 265, 266, 267, 277, 278, 281, 282, 322, 348, 352], "store": [45, 104, 260, 283, 302, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "str": [33, 45, 99, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 127, 128, 131, 132, 134, 135, 136, 139, 140, 141, 144, 145, 146, 152, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 172, 173, 187, 189, 190, 191, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302], "straightforward": [327, 331, 332, 352], "strategi": [104, 106, 136, 202, 218, 275, 276, 290, 291, 292, 293, 322, 323, 335, 346], "stratif": [172, 324], "stratifi": [172, 291, 292, 293, 324, 348], "streamlin": 335, "strength": [115, 123, 227, 264, 265, 266, 267, 268, 269, 277, 278, 281, 282, 321, 322, 326, 329, 337, 339, 340, 342, 343, 347], "stress": 218, "strict": [337, 342], "strike": 348, "string": [46, 136, 264, 265, 275, 276, 277, 278, 281, 282, 313, 315, 320, 356], "strobl": 322, "strobl2019": 322, "strong": [115, 321], "stronger": [217, 227, 326, 329, 337, 338, 339, 340, 341, 342, 352], "strongli": [326, 328, 337, 342], "structur": [117, 173, 204, 238, 241, 246, 268, 269, 290, 291, 292, 293, 298, 319, 323, 327, 334, 337, 338, 339, 342, 343, 344, 349, 351, 352], "struggl": [349, 351, 353], "style": [28, 34, 41, 45, 345, 355, 358, 361], "su": [327, 334], "sub": [264, 265, 350, 352], "sub_item": 200, "subgroup": [341, 347, 351], "subitem": 199, "subject": [203, 264, 265, 322, 348, 353], "sublink": 45, "submodul": 319, "subnet_size_interact": [264, 265], "subnet_size_main_effect": [264, 265], "subnetwork": [264, 265, 337], "subobject": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "suboptim": 341, "subpopul": [341, 351], "subsampl": [1, 11, 23, 24, 25, 26, 36, 38, 39, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 114, 116, 117, 127, 131, 132, 134, 172, 215, 227, 229, 311, 316, 319, 327, 328, 329, 330, 332, 334, 361], "subsample_for_bin": [23, 24, 25, 26, 36, 38, 39, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "subsample_freq": [23, 24, 25, 26, 36, 38, 39, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "subsample_random": [6, 324], "subscript": 347, "subsect": [319, 355], "subsequ": [104, 319, 338], "subset": [216, 218, 230, 291, 314, 319, 322, 326, 328, 329, 330, 332, 334, 344, 348, 349, 351, 353], "subseteq": [327, 334], "substanti": 332, "subtarget": 45, "subtext": 45, "subtract": [228, 246, 247, 328, 331, 338], "success": [327, 334], "sudjianto2020": 343, "suffer": 315, "suffici": 351, "suggest": [227, 315, 318, 319, 326, 328, 332, 334, 347, 349], "suit": [0, 255, 256, 311, 320, 321, 335], "suitabl": [319, 323, 335, 349, 352], "sum": [227, 264, 266, 268, 275, 276, 277, 281, 318, 319, 322, 323, 324, 337, 338, 339, 340, 341, 342, 343], "sum_": [318, 319, 322, 324, 326, 327, 328, 329, 332, 334, 337, 338, 339, 341, 342, 343, 348, 349, 351, 352], "sum_i": [341, 342], "sum_j": [338, 339, 351], "sum_k": [337, 338, 342], "sum_m": 338, "summar": [220, 222, 224, 250, 315, 320, 347, 349, 352, 353], "summari": [7, 21, 22, 50, 51, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 106, 200, 201, 202, 203, 211, 214, 216, 218, 219, 231, 244, 316, 335, 341, 348, 349, 350, 351, 352, 353], "sup_": 351, "sup_x": [318, 324], "supabas": 100, "superior": 314, "supervis": [326, 346], "support": [112, 113, 114, 117, 118, 168, 200, 205, 211, 213, 220, 221, 222, 223, 224, 226, 228, 277, 278, 281, 282, 302, 315, 317, 319, 321, 324, 327, 328, 334, 335, 338, 341, 347, 352, 356], "suppos": [326, 327, 332, 334, 358], "surpris": 333, "surrog": [327, 331, 334], "survei": 322, "sv1": [5, 317], "sv2": [5, 317], "svg": 302, "swarm": [35, 40, 41, 292, 341, 361], "sy": [], "symbol": 300, "symmetr": [115, 326, 329], "syntax": [], "system": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 315, 327, 328, 329, 330, 331, 332, 333, 334, 335, 347], "systemat": [347, 349, 352, 353], "t": [9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 108, 266, 267, 298, 319, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 358], "t_k": 338, "tabl": [3, 5, 8, 9, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 36, 37, 38, 39, 45, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 72, 73, 76, 79, 106, 109, 110, 111, 115, 116, 117, 123, 124, 125, 173, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 244, 246, 247, 251, 290, 291, 292, 293, 302, 317, 318, 337, 338, 339, 340, 341, 342, 344, 347, 348, 349, 350, 352, 353, 356, 358], "tabular": [231, 237, 239, 290, 291, 292, 293], "tag": [152, 196, 254, 326, 327, 328, 329, 332, 334, 337, 343], "tailor": [341, 350, 351], "taiwancredit": [2, 3, 5, 7, 13, 15, 17, 19, 21, 23, 25, 38, 42, 46, 50, 54, 56, 60, 64, 68, 72, 76, 80, 140, 313, 317, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353], "taiwancreditdata": [313, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "take": [221, 260, 283, 319, 323, 327, 334], "taken": 315, "tanh": [264, 265, 358], "target": [2, 5, 29, 30, 31, 32, 45, 118, 123, 156, 167, 186, 201, 207, 214, 215, 216, 227, 229, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 317, 318, 322, 324, 326, 328, 332, 333, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 358], "target_featur": 47, "target_nam": [31, 32, 317, 358], "task": [32, 167, 168, 174, 200, 201, 207, 211, 212, 214, 215, 223, 226, 227, 228, 229, 231, 275, 276, 281, 282, 313, 317, 319, 323, 326, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 356, 358], "task_typ": [47, 168, 214, 355], "tau": [115, 321, 341, 350], "tau_1": 350, "tau_2": 350, "taylor": 319, "teacher": [264, 265], "team": [327, 334], "technic": 328, "techniqu": [319, 323, 335, 347, 348, 350, 351, 352, 353, 356], "tell": 328, "temp": [4, 8, 9, 10, 45, 57, 61, 65, 73, 320, 337, 338, 339, 341, 342, 343, 348, 349, 350, 351, 352], "temperatur": 341, "templat": [284, 285], "tempor": 349, "temporari": 322, "temporarili": 322, "tend": [332, 343, 348], "tendenc": [337, 342], "term": [242, 245, 314, 327, 331, 334, 337, 338, 339, 341, 342, 343, 348, 350, 351, 353], "termin": [17, 18, 23, 24, 341, 342, 352], "test": [0, 1, 2, 9, 10, 11, 13, 14, 15, 16, 19, 20, 23, 24, 25, 26, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 59, 60, 61, 64, 65, 76, 79, 80, 82, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 127, 128, 131, 132, 134, 135, 136, 143, 156, 164, 165, 169, 172, 173, 175, 176, 177, 178, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 275, 276, 290, 291, 292, 293, 298, 313, 315, 317, 319, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 353, 357, 358, 361], "test1": 225, "test2": 225, "test_dataset": [9, 33, 47, 54, 55, 60, 61, 64, 65, 199, 201, 206, 207, 210, 214, 222, 223, 347, 348, 349, 350, 353], "test_i": 2, "test_idx": [9, 31, 32, 33, 169, 358], "test_indic": [30, 33], "test_list": 225, "test_model": 47, "test_ratio": [47, 164], "test_result": 254, "test_sample_s": [331, 334], "test_sample_weight": 2, "test_scor": [199, 210], "test_siz": [31, 32, 33, 64, 65, 201, 207, 214, 223, 350, 358], "test_x": 2, "testsuit": [0, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "testsuite_nam": 225, "text": [45, 339, 341, 347, 348, 349, 350, 351, 352], "textalign": 45, "textbf": [326, 328, 337, 343], "textbordertyp": 45, "textgap": 45, "textshadowcolor": 45, "textstyl": 45, "textverticalalign": 45, "th": [216, 319, 323, 326, 327, 328, 329, 332, 334, 338, 343], "than": [115, 136, 217, 226, 227, 264, 265, 313, 314, 315, 319, 320, 321, 322, 326, 327, 328, 329, 330, 331, 332, 334, 339, 343, 348, 356], "thei": [229, 317, 319, 323, 326, 327, 332, 334, 338, 343, 347], "theil": [115, 123, 322], "theilsu": 322, "them": [42, 106, 115, 210, 317, 321, 322, 339, 345, 347, 348, 351, 358], "theoret": 351, "theori": 322, "therebi": [319, 341], "therefor": [326, 327, 328, 331, 334, 343], "theta": [337, 341, 342], "theta_i": 342, "thi": [0, 5, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 86, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 136, 148, 152, 158, 165, 171, 172, 173, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 302, 311, 313, 314, 315, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358], "third": [113, 264, 265, 320, 343], "thorough": 352, "those": [293, 314, 315, 347, 352], "three": [114, 200, 205, 211, 213, 221, 264, 265, 313, 315, 318, 320, 321, 322, 323, 337, 341, 342, 352, 353], "threre": 347, "threshold": [4, 8, 9, 33, 56, 57, 60, 61, 64, 65, 72, 73, 76, 109, 110, 111, 123, 124, 125, 200, 204, 205, 206, 207, 208, 211, 213, 214, 219, 220, 221, 222, 223, 224, 264, 265, 266, 268, 275, 277, 281, 298, 319, 322, 323, 338, 339, 342, 348, 349, 350, 352, 353], "through": [113, 116, 125, 212, 238, 249, 277, 278, 281, 282, 315, 321, 336, 337, 339, 340, 341, 342, 343, 344, 346, 348, 350, 353, 356], "throuput": 335, "ti": [220, 221, 223, 224], "tild": 343, "time": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 107, 110, 115, 125, 165, 203, 208, 216, 219, 226, 230, 238, 264, 265, 318, 322, 327, 333, 334, 343, 350, 351], "time_cost_": [264, 265], "ting": [319, 323], "titl": [45, 257], "tn": 349, "to_df": [5, 9], "toarrai": 30, "togeth": [187, 337, 342, 347], "token": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "tol": [14, 37], "toler": [264, 265], "tolist": 30, "toni": [319, 323], "too": [315, 326, 327, 328, 334, 343, 348], "tool": [229, 321, 326, 327, 331, 332, 334, 335, 349, 355, 359], "toolbox": 45, "tooltip": [45, 114], "top": [45, 243, 244, 264, 265, 268, 302, 313, 315, 317, 319, 320, 322, 329, 331, 337, 341, 343, 350], "top1": [3, 320], "top2": [3, 320], "top3": [3, 320], "torch": [100, 264, 265, 281, 282], "total": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 250, 337, 338, 342, 343, 348, 352, 361], "toward": [343, 347, 351], "tp": 349, "tp_": 347, "tpe": [39, 291], "tpesampl": 291, "tpr": [347, 349], "tqdm": 100, "traceback": [], "track": [136, 319, 335, 351, 352], "trade": [231, 291, 292, 293, 350], "tradeoff": [213, 348], "tradit": [319, 337, 339, 340, 341, 342, 349], "train": [0, 2, 5, 7, 9, 10, 23, 24, 29, 30, 31, 33, 36, 37, 38, 39, 46, 47, 50, 51, 54, 55, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 127, 128, 131, 132, 134, 135, 136, 143, 149, 156, 164, 165, 170, 172, 173, 180, 181, 182, 183, 189, 191, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 313, 315, 317, 318, 319, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 356, 358], "train_al": [42, 357], "train_dataset": [9, 33, 47, 54, 55, 60, 61, 64, 65, 199, 201, 206, 207, 210, 214, 222, 223, 347, 348, 349, 350, 353], "train_epoch_loss_": [281, 282], "train_i": [2, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 36, 37, 38, 39, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "train_idx": [9, 31, 32, 33, 170, 358], "train_indic": [30, 33], "train_model": 47, "train_sample_s": [331, 334], "train_sample_weight": 2, "train_scor": [199, 210], "train_siz": 172, "train_test_split": [31, 32, 33, 358], "train_x": [2, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 36, 37, 38, 39, 42, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 292, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353], "training_fram": 29, "transfom": [337, 338, 339, 341, 342, 343, 348, 349, 350, 351, 352], "transform": [30, 104, 111, 116, 118, 156, 217, 264, 266, 268, 275, 277, 281, 317, 319, 322, 323, 327, 334, 343, 348, 349, 350, 351, 352, 355], "transitiondur": 45, "translat": 349, "transpar": [45, 338, 343], "travers": [249, 344], "treat": [136, 165, 292, 322], "treatment": [213, 335], "tree": [12, 27, 41, 110, 201, 206, 207, 214, 216, 217, 238, 240, 241, 246, 249, 261, 262, 266, 267, 268, 269, 277, 278, 291, 311, 313, 319, 323, 326, 327, 331, 332, 334, 335, 336, 337, 341, 349, 350, 351, 352, 356, 361], "tree_": [268, 269], "tree_method": 292, "treeclassifi": 334, "treeregressor": 334, "treeshap": 334, "trend": [113, 339, 348, 349], "trial": [5, 9, 10, 29, 30, 31, 32, 33, 47, 76], "trigger": [45, 332], "triggeron": 45, "trivial": [337, 343], "true": [2, 5, 9, 13, 14, 17, 18, 19, 20, 23, 24, 25, 26, 29, 33, 37, 42, 45, 47, 50, 51, 56, 57, 60, 61, 64, 65, 72, 73, 76, 111, 136, 138, 164, 172, 179, 200, 205, 211, 212, 213, 215, 221, 225, 228, 246, 247, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 302, 317, 319, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 357], "truncat": [326, 333], "trust": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 327], "trustworthi": [337, 342, 347, 350, 353], "truth": 358, "try": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 290, 291, 293], "ts_residu": [50, 51, 349], "tsamardino": 322, "tsc": [47, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 347, 348, 349, 351, 352, 353], "tset_task_typ": 317, "tulio": 327, "tune": [0, 23, 24, 40, 42, 47, 86, 260, 264, 265, 277, 278, 283, 290, 291, 292, 293, 311, 319, 335, 337, 342, 345, 361], "tupl": [46, 99, 104, 106, 115, 116, 117, 118, 136, 156, 157, 159, 199, 202, 203, 208, 210, 212, 213, 216, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 237, 238, 239, 264, 265, 277, 278, 281, 282, 290, 291, 292, 293, 302, 340, 343, 347], "tutori": 358, "tw": 5, "twcredit": 2, "twice": 322, "two": [3, 106, 111, 113, 115, 124, 222, 223, 224, 226, 227, 229, 238, 239, 314, 318, 319, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 334, 338, 339, 343, 347, 348, 349, 350, 351, 352], "tx": 342, "type": [2, 45, 103, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 156, 158, 167, 168, 172, 173, 174, 179, 184, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 317, 319, 321, 322, 323, 339, 340, 347, 349, 350, 352, 355], "type_": 45, "typic": [115, 117, 319, 321, 326, 333, 338, 349, 350, 351, 356], "u": [100, 115, 123, 319, 322, 323, 326, 328, 332, 333, 347, 349, 352], "u_": [337, 338, 342], "uci": [313, 315, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "ultim": [245, 349], "umap": [100, 117], "umer": 317, "unabl": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "unbias": [326, 328], "uncent": [326, 328, 331, 337, 338, 339, 340, 342, 343], "uncertain": [351, 353], "uncertainti": [315, 322, 335, 350, 351, 352, 353], "unchang": [326, 331, 333, 352], "uncov": [341, 349, 353], "under": [60, 61, 64, 65, 72, 73, 76, 201, 202, 203, 208, 217, 218, 219, 224, 245, 313, 315, 319, 322, 323, 335, 347, 349, 350, 351, 352, 353], "underbrac": 348, "underestim": 348, "underfit": [210, 311, 322, 346, 349], "undergo": [313, 315], "underli": [258, 259, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 279, 280, 288, 289, 319, 338, 340, 344, 349], "underperform": [349, 351, 353], "understand": [218, 229, 319, 321, 330, 341, 343, 347, 349, 350, 351, 353], "understood": 348, "uneven": 353, "unfair": [200, 211, 212, 213, 314, 347], "unfit": [277, 278], "uni_featur": [328, 330, 332], "unifi": [327, 338], "uniform": [21, 22, 39, 50, 51, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 104, 106, 204, 205, 206, 207, 208, 212, 213, 216, 217, 219, 220, 221, 222, 223, 224, 313, 315, 317, 318, 341, 347, 348, 349, 350, 351, 356], "uniformli": [264, 265, 291, 293, 341, 353], "union": [220, 221, 222, 223, 224], "uniqu": [3, 5, 317, 319, 320, 323, 338, 341, 342, 343, 351], "unit": 156, "univ": [319, 323], "univari": [112, 316, 319, 335, 347, 350, 351, 352], "unless": [290, 291, 292, 293, 313, 315], "unlik": [313, 315, 319, 327, 334, 338, 349], "unmodel": 349, "unnecessarili": 343, "unpen": 343, "unprivileg": 347, "unreli": [64, 201, 202, 207, 214, 223, 224, 326, 328, 347, 350], "unseen": [318, 348, 349], "unstabl": 343, "unsupervis": [319, 349], "unsupport": 302, "until": [319, 323, 337, 338, 341, 342], "unusu": 349, "unwrap": 343, "unwrapp": 244, "up": [100, 226, 227, 229, 318, 326, 328, 329, 330, 332, 334, 338], "updat": [2, 100, 158, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 338, 339, 341], "upon": 343, "upper": [76, 200, 205, 211, 212, 213, 221, 227, 229, 347], "upper_inclus": [76, 200, 205, 211, 212, 213, 221, 347], "us": [2, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 127, 128, 131, 132, 134, 135, 136, 139, 144, 145, 152, 156, 160, 161, 165, 166, 167, 172, 173, 179, 191, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 302, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358], "usag": [44, 318, 319, 345], "use_multi_thread": 29, "use_predict": [50, 51, 215], "use_test": [328, 329, 330, 331, 332, 333, 334], "use_weight": 109, "user": [112, 202, 291, 300, 317, 319, 320, 322, 335, 338, 340, 344, 345, 353], "usual": [326, 327, 328, 333, 334, 356], "util": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 86, 100, 206, 207, 314, 315, 317, 319, 323, 348, 352], "uuid": [], "v": [200, 211, 231, 291, 292, 293, 322, 324, 349, 350, 351, 352], "v_": 341, "v_m": [337, 338, 342], "val": [327, 334], "val_ratio": [264, 265, 266, 267, 277, 278, 281, 282], "valid": [0, 9, 17, 18, 23, 24, 45, 86, 214, 221, 238, 246, 254, 257, 264, 265, 266, 267, 275, 276, 277, 278, 281, 282, 290, 291, 292, 293, 302, 331, 334, 335, 337, 342, 348, 349, 355, 356, 359], "validation_epoch_loss_": [281, 282], "validationresult": [0, 44, 48, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 136, 156, 172, 173, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 290, 291, 292, 293, 361], "valu": [4, 5, 6, 21, 22, 25, 29, 31, 36, 37, 38, 39, 45, 50, 51, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 104, 106, 109, 110, 111, 115, 116, 117, 118, 123, 124, 125, 136, 156, 172, 173, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 302, 314, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 356], "valuabl": [229, 319, 333, 351], "valueerror": [226, 286, 287, 302], "var": 348, "vari": [227, 229, 330, 331, 341, 347, 353], "variabl": [3, 7, 72, 73, 76, 115, 116, 117, 118, 123, 128, 215, 217, 229, 258, 259, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 279, 280, 288, 289, 300, 301, 313, 314, 315, 318, 319, 321, 322, 323, 324, 326, 330, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 353], "varialb": 217, "varianc": [111, 116, 156, 217, 227, 319, 321, 323, 334, 337, 338, 339, 340, 341, 342, 348, 349], "variat": [219, 351, 352], "variou": [42, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 104, 106, 113, 136, 156, 173, 200, 201, 203, 206, 207, 208, 211, 221, 224, 313, 315, 318, 319, 323, 327, 334, 337, 347, 352], "vdot": 339, "vector": [30, 319, 327, 328, 334, 338, 341, 343], "vectorassembl": 30, "veloc": 341, "vendor": 358, "verbos": [17, 18, 23, 24, 25, 26, 31, 32, 36, 38, 39, 42, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 264, 265, 266, 267, 277, 278, 281, 282], "veri": [264, 265, 314, 326, 328, 331, 333, 337], "verifi": [337, 342], "versa": 343, "version": [2, 42, 100, 105, 128, 131, 132, 134, 135, 145, 154, 179, 185, 186, 194, 246, 318, 324], "vertic": 45, "via": [23, 24, 216, 326, 329, 337, 341, 345, 350, 351, 352], "vice": 343, "vicin": 319, "victori": [327, 334], "view": [2, 115, 241, 321, 326, 328, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344], "viewport": 114, "violat": [337, 342, 347, 350], "violin": 245, "visual": [44, 48, 60, 61, 100, 106, 109, 110, 111, 112, 113, 114, 115, 116, 123, 124, 125, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 290, 291, 292, 293, 302, 319, 321, 326, 328, 330, 332, 335, 337, 338, 343, 344, 348, 349, 350, 352, 353, 361], "visualmap": 45, "visualmap_typ": 45, "visweswaran": 322, "vulner": [218, 335, 341, 351], "w": [326, 342, 343, 350, 351, 352], "w_": 348, "w_1": 340, "w_2": 340, "w_d": 340, "w_i": [342, 348, 352], "wai": [229, 234, 315, 318, 319, 326, 327, 330, 334, 339, 343, 349, 350, 358], "wang": 322, "want": [320, 327, 330, 332, 334], "warm_start": [14, 37, 264, 265], "warn": [], "wasserstein": [106, 318, 324, 335], "wasserstein_dist": [318, 324], "wd": 335, "wd1": [106, 318, 324], "we": [9, 64, 65, 264, 265, 291, 292, 293, 313, 314, 315, 318, 319, 320, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 343, 347, 349, 351, 352, 355, 357, 358], "weak": [9, 33, 56, 57, 60, 61, 64, 65, 72, 73, 76, 205, 206, 207, 208, 220, 221, 222, 223, 224, 227, 311, 313, 315, 335, 346, 349], "weakspot": 312, "weathersit": [4, 8, 9, 10, 14, 57, 61, 65, 73, 328], "websit": [313, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353], "weekdai": [4, 8, 9, 10, 57, 65, 73, 337, 350, 352], "weight": [2, 109, 154, 160, 161, 166, 239, 242, 245, 248, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 288, 289, 317, 323, 327, 331, 334, 338, 341, 342, 343, 348, 350, 351], "well": [218, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 318, 319, 341, 347, 349, 350, 351, 352, 353], "went": [327, 334], "were": 136, "what": 311, "when": [106, 111, 112, 115, 136, 187, 191, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 231, 249, 264, 265, 266, 267, 269, 313, 314, 318, 319, 322, 326, 327, 328, 330, 331, 333, 334, 337, 338, 341, 342, 343, 344, 347, 348, 349, 352, 353, 356], "where": [109, 110, 111, 115, 136, 199, 200, 202, 204, 206, 207, 208, 214, 215, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 237, 240, 242, 246, 247, 248, 264, 266, 268, 275, 276, 277, 281, 282, 290, 291, 314, 318, 319, 321, 322, 323, 326, 327, 328, 329, 332, 334, 337, 338, 339, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353, 356], "wherea": 343, "whether": [109, 111, 164, 172, 187, 193, 205, 206, 207, 208, 215, 220, 221, 222, 223, 224, 228, 246, 257, 264, 265, 266, 267, 268, 269, 275, 276, 302, 319, 322, 326, 332, 341, 349, 351], "which": [86, 104, 109, 110, 112, 113, 114, 115, 116, 117, 118, 172, 173, 200, 201, 202, 203, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 238, 247, 276, 281, 282, 286, 287, 291, 301, 313, 315, 317, 318, 319, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353, 358], "while": [216, 226, 229, 266, 267, 319, 326, 328, 330, 333, 334, 337, 338, 340, 341, 342, 343, 344, 347, 348, 352, 353, 356], "who": [327, 334, 347], "whole": [220, 221, 222, 223, 224, 318], "whose": [237, 350, 351], "why": [327, 349], "wide": [343, 344], "widest": [214, 350], "width": [9, 33, 45, 64, 65, 104, 201, 204, 206, 207, 208, 212, 214, 216, 220, 221, 222, 223, 224, 302, 318, 324, 350, 353], "width_threshold": 214, "wiggli": 348, "wikipedia": 322, "windspe": [4, 8, 9, 10, 57, 65, 73, 341], "winner": [327, 334], "wise": [106, 224], "withcolumn": 30, "within": [202, 213, 216, 218, 231, 246, 264, 265, 313, 314, 318, 319, 323, 335, 341, 347, 350, 351], "without": [9, 33, 277, 278, 286, 287, 327, 334, 337, 342], "won": [327, 334], "word": [318, 326, 328], "work": [213, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 319, 332, 334, 337, 338, 342, 347, 350, 353], "workflow": [116, 335, 345, 355, 358], "workingdai": [4, 8, 9, 10, 14, 57, 332, 333, 337, 342, 348], "world": [338, 341, 349, 351, 352], "worst": [68, 69, 202, 203, 218, 335, 350, 351, 352], "worth": [319, 327, 334], "would": [64, 65, 264, 265, 328, 329, 330, 332], "wrap": [28, 34, 41, 284, 285, 311, 357, 361], "wrap_estim": 42, "wraparbmodel": 358, "wrapper": [0, 29, 30, 31, 32, 42, 258, 259, 260, 261, 262, 263, 270, 271, 272, 273, 274, 279, 280, 283, 284, 285, 286, 287, 288, 289, 311, 319, 323, 338, 340, 344, 345], "wrapscoredmodel": 358, "wrapskmlp": 358, "written": 338, "wu": 322, "x": [6, 8, 9, 29, 30, 31, 32, 33, 106, 109, 110, 111, 113, 114, 119, 120, 121, 122, 126, 127, 128, 147, 177, 182, 199, 200, 202, 204, 206, 207, 208, 214, 215, 216, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 237, 240, 242, 246, 247, 248, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 313, 315, 318, 319, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 358], "x0": [104, 204, 205, 206, 207, 208, 220, 221, 222, 223, 224, 329], "x1": [33, 220, 221, 222, 223, 224, 329], "x2": [220, 221, 222, 223, 224, 329], "x27": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 36, 37, 38, 39, 46, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "x3": 329, "x4": 329, "x5": 329, "x6": 329, "x7": 329, "x8": 329, "x9": 329, "x_": [318, 319, 323, 326, 328, 330, 332, 337, 338, 339, 341, 342, 348, 350, 352], "x_1": 340, "x_2": 340, "x_c": [326, 332], "x_column": 29, "x_d": 340, "x_h2o": 29, "x_i": [337, 338, 341, 342, 348, 350, 351], "x_j": [326, 329, 337, 338, 339, 342, 348], "x_k": [326, 329, 337, 338, 339, 341, 342], "x_n": 350, "x_spark": 30, "x_test": 33, "x_train": 33, "xaxi": 45, "xgb": [9, 57, 322, 335, 356, 357], "xgb1": [56, 57, 60, 61, 72, 73, 76, 104, 204, 205, 206, 207, 208, 212, 217, 220, 221, 222, 223, 224, 298, 347, 348, 352, 353], "xgb2": [42, 313, 315, 329, 330, 331, 332, 334], "xgb7": 315, "xgb_kwarg": 217, "xgb_model": [338, 347, 348, 349, 350, 351, 352, 353], "xgbclassifi": 288, "xgboost": [42, 56, 100, 104, 125, 204, 205, 206, 207, 208, 212, 217, 220, 221, 222, 223, 224, 275, 276, 288, 289, 319, 322, 323, 338, 341, 347, 348, 349, 350, 351, 352], "xgbregressor": 289, "xi": [115, 321], "xianji": 322, "xiaofei": [319, 323], "xicor": [3, 115, 321], "xindong": 322, "xiyang": 319, "xu": [319, 323], "xxx": [106, 199, 200, 201, 205, 210, 211, 212, 213, 216, 217, 220, 221, 222, 223, 224, 225, 290, 291, 292, 293], "xxxxxx": 317, "y": [5, 29, 31, 32, 33, 106, 109, 110, 111, 113, 114, 127, 128, 178, 183, 199, 200, 202, 204, 206, 207, 208, 214, 215, 218, 219, 226, 227, 228, 229, 230, 231, 237, 240, 242, 246, 247, 248, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 288, 289, 313, 314, 315, 318, 322, 327, 331, 334, 337, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352], "y_": [318, 350], "y_column": 29, "y_hat": 215, "y_i": [338, 341, 348, 349, 350, 351], "y_n": 350, "y_test": 33, "y_train": 33, "yaxi": 45, "yet": 353, "yield": [275, 276, 290, 291, 292, 293, 356], "you": [5, 9, 10, 25, 26, 29, 30, 31, 32, 33, 39, 47, 76, 86, 100, 167, 311, 319, 320, 322, 327, 328, 329, 330, 331, 332, 334, 351, 355, 356], "your": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80, 86, 320], "yr": [4, 8, 9, 10, 14, 20, 57, 320, 337, 338, 339, 341, 342, 343, 348, 349, 350, 351, 352], "yu": 322, "yu2020": 322, "yue": 319, "z": [45, 114, 322, 327, 334, 342, 343], "z_": [319, 323, 326, 328], "z_i": 322, "z_j": [327, 334, 337, 342], "zengyou": [319, 323], "zero": [115, 156, 318, 321, 322, 326, 328, 333, 337, 338, 342, 343, 349], "zhang": 322, "zhang2012": 322, "zhao": 319, "zhaolong": 322, "zheng": 319, "zhi": [319, 323], "zhou": [319, 323], "zhu": 326, "zip": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 45, 46, 47, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 79, 80], "zoo": [0, 311, 345], "\u03b1": 350, "\u03b2": [350, 351], "\u03b5": 351, "\u03c4": 350, "\u211d": 342}, "titles": ["API Reference", "Dataset", "Basic Dataset Operations", "Exploratory Data Analysis", "Feature Selection", "Data Processing and Feature Engineering", "Subsampling", "Data Drift Test", "Outlier Detection", "Data with Model Predictions", "Dealing with Extra Data Sets", "Computation times", "Built-in Interpretable Models", "Logistic Regression (Classification)", "Linear Regression (Regression)", "Decision Tree Classification", "Decision Tree Regression", "MoReLUDNN Classification", "MoReLUDNN Regression", "GAMINet Classification", "GAMINet Regression", "Mixture of Expert (MoE) Classification", "Mixture of Expert (MoE) Regression", "Linear Tree Classification", "Linear Tree Regression", "Tree Ensemble Models (Classification)", "Tree Ensemble Models (Regression)", "Computation times", "External Models", "Wrapping H2O Models", "Wrapping PySpark Models", "Wrapping sklearn-style Classifier and Regressor", "Wrapping Arbitrary Classifier or Regressor", "Wrapping Scored Classifier or Regressor", "Computation times", "Hyperparameter Tuning", "Grid Search", "Random Search", "Particle Swarm Optimization Search", "Tuning with optuna (Experimental)", "Computation times", "Model Development", "ModelZoo", "Computation times", "Utilities", "ValidationResult - Attributes", "ValidationResult - Visualization", "Pipeline", "Computation times", "Model Residual", "Residual Analysis (Classification)", "Residual Analysis (Regression)", "Computation times", "Model Performance", "Performance Metrics (Classification)", "Performance Metrics (Regression)", "Sliced Performance (Classification)", "Sliced Performance (Regression)", "Computation times", "Overfit Detection", "Overfitting Analysis (Classification)", "Overfitting Analysis (Regression)", "Computation times", "Reliability Analysis", "Reliability Analysis (Classification)", "Reliability Analysis (Regression)", "Computation times", "Resilience Analysis", "Resilience Analysis (Classification)", "Resilience Analysis (Regression)", "Computation times", "Robustness Analysis", "Robustness Analysis (Classification)", "Robustness Analysis (Regression)", "Computation times", "Fairness Analysis", "Model Fairness Analysis (Classification)", "Computation times", "Explainability", "Global Explainability", "Local Explainability", "Computation times", "Model Validation", "Computation times", "Change Log", "Frequently Asked Questions", "Gallery of Modeva Examples", "sphinx_gallery.backreferences", "sphinx_gallery.block_parser", "sphinx_gallery.directives", "sphinx_gallery.docs_resolv", "sphinx_gallery.downloads", "sphinx_gallery.gen_gallery", "sphinx_gallery.gen_rst", "sphinx_gallery.interactive_example", "sphinx_gallery.notebook", "sphinx_gallery.py_source_parser", "sphinx_gallery.scrapers", "sphinx_gallery.sorting", "sphinx_gallery.utils.optipng", "Installation", "DataSet", "modeva.DataSet.all_feature_names", "modeva.DataSet.all_feature_types", "modeva.DataSet.bin_numerical", "modeva.DataSet.data", "modeva.DataSet.data_drift_test", "modeva.DataSet.delete_extra_data", "modeva.DataSet.delete_registered_data", "modeva.DataSet.detect_outlier_cblof", "modeva.DataSet.detect_outlier_isolation_forest", "modeva.DataSet.detect_outlier_pca", "modeva.DataSet.eda_1d", "modeva.DataSet.eda_2d", "modeva.DataSet.eda_3d", "modeva.DataSet.eda_correlation", "modeva.DataSet.eda_pca", "modeva.DataSet.eda_umap", "modeva.DataSet.encode_categorical", "modeva.DataSet.feature_names", "modeva.DataSet.feature_names_categorical", "modeva.DataSet.feature_names_mixed", "modeva.DataSet.feature_names_numerical", "modeva.DataSet.feature_select_corr", "modeva.DataSet.feature_select_rcit", "modeva.DataSet.feature_select_xgbpfi", "modeva.DataSet.feature_types", "modeva.DataSet.get_X_y_data", "modeva.DataSet.get_data", "modeva.DataSet.get_data_list", "modeva.DataSet.get_extra_data_list", "modeva.DataSet.get_prediction_data", "modeva.DataSet.get_prediction_proba_data", "modeva.DataSet.get_preprocessor", "modeva.DataSet.get_protected_data", "modeva.DataSet.get_raw_data", "modeva.DataSet.impute_missing", "modeva.DataSet.inverse_transform", "modeva.DataSet.is_splitted", "modeva.DataSet.list_registered_data", "modeva.DataSet.load", "modeva.DataSet.load_csv", "modeva.DataSet.load_dataframe", "modeva.DataSet.load_dataframe_train_test", "modeva.DataSet.load_preprocessing", "modeva.DataSet.load_registered_data", "modeva.DataSet.load_spark", "modeva.DataSet.n_features", "modeva.DataSet.name", "modeva.DataSet.prediction", "modeva.DataSet.preprocess", "modeva.DataSet.raw_data", "modeva.DataSet.register", "modeva.DataSet.reset_preprocess", "modeva.DataSet.sample_weight", "modeva.DataSet.save_preprocessing", "modeva.DataSet.scale_numerical", "modeva.DataSet.set_active_features", "modeva.DataSet.set_feature_type", "modeva.DataSet.set_inactive_features", "modeva.DataSet.set_prediction", "modeva.DataSet.set_prediction_proba", "modeva.DataSet.set_protected_data", "modeva.DataSet.set_protected_extra_data", "modeva.DataSet.set_random_split", "modeva.DataSet.set_raw_extra_data", "modeva.DataSet.set_sample_weight", "modeva.DataSet.set_target", "modeva.DataSet.set_task_type", "modeva.DataSet.set_test_idx", "modeva.DataSet.set_train_idx", "modeva.DataSet.shape", "modeva.DataSet.subsample_random", "modeva.DataSet.summary", "modeva.DataSet.task_type", "modeva.DataSet.test_prediction", "modeva.DataSet.test_sample_weight", "modeva.DataSet.test_x", "modeva.DataSet.test_y", "modeva.DataSet.to_df", "modeva.DataSet.train_prediction", "modeva.DataSet.train_sample_weight", "modeva.DataSet.train_x", "modeva.DataSet.train_y", "modeva.DataSet.transform", "modeva.DataSet.x", "modeva.DataSet.y", "modeva.ModelZoo.add_model", "modeva.ModelZoo.dataset", "modeva.ModelZoo.delete_registered_model", "modeva.ModelZoo.get_model", "modeva.ModelZoo.leaderboard", "modeva.ModelZoo.list_model_names", "modeva.ModelZoo.list_registered_models", "modeva.ModelZoo.load_registered_model", "modeva.ModelZoo.models", "modeva.ModelZoo.register", "modeva.ModelZoo.train", "modeva.ModelZoo.train_all", "modeva.TestSuite.compare_accuracy_table", "modeva.TestSuite.compare_fairness", "modeva.TestSuite.compare_reliability", "modeva.TestSuite.compare_resilience", "modeva.TestSuite.compare_robustness", "modeva.TestSuite.compare_slicing_accuracy", "modeva.TestSuite.compare_slicing_fairness", "modeva.TestSuite.compare_slicing_overfit", "modeva.TestSuite.compare_slicing_reliability", "modeva.TestSuite.compare_slicing_robustness", "modeva.TestSuite.delete_registed_test", "modeva.TestSuite.diagnose_accuracy_table", "modeva.TestSuite.diagnose_fairness", "modeva.TestSuite.diagnose_mitigate_unfair_binning", "modeva.TestSuite.diagnose_mitigate_unfair_thresholding", "modeva.TestSuite.diagnose_reliability", "modeva.TestSuite.diagnose_residual_analysis", "modeva.TestSuite.diagnose_residual_cluster", "modeva.TestSuite.diagnose_residual_interpret", "modeva.TestSuite.diagnose_resilience", "modeva.TestSuite.diagnose_robustness", "modeva.TestSuite.diagnose_slicing_accuracy", "modeva.TestSuite.diagnose_slicing_fairness", "modeva.TestSuite.diagnose_slicing_overfit", "modeva.TestSuite.diagnose_slicing_reliability", "modeva.TestSuite.diagnose_slicing_robustness", "modeva.TestSuite.display_test_results", "modeva.TestSuite.explain_ale", "modeva.TestSuite.explain_hstatistic", "modeva.TestSuite.explain_lime", "modeva.TestSuite.explain_pdp", "modeva.TestSuite.explain_pfi", "modeva.TestSuite.explain_shap", "modeva.TestSuite.export_report", "modeva.TestSuite.get_dataset", "modeva.TestSuite.get_interactions", "modeva.TestSuite.get_main_effects", "modeva.TestSuite.get_model", "modeva.TestSuite.interpret_coef", "modeva.TestSuite.interpret_effects", "modeva.TestSuite.interpret_effects_moe_average", "modeva.TestSuite.interpret_fi", "modeva.TestSuite.interpret_global_tree", "modeva.TestSuite.interpret_llm_pc", "modeva.TestSuite.interpret_llm_profile", "modeva.TestSuite.interpret_llm_summary", "modeva.TestSuite.interpret_llm_violin", "modeva.TestSuite.interpret_local_fi", "modeva.TestSuite.interpret_local_linear_fi", "modeva.TestSuite.interpret_local_moe_weights", "modeva.TestSuite.interpret_local_tree", "modeva.TestSuite.interpret_moe_cluster_analysis", "modeva.TestSuite.list", "modeva.TestSuite.list_registered_tests", "modeva.TestSuite.load_registered_test", "modeva.TestSuite.register", "modeva.TestSuite.set_dataset", "modeva.TestSuite.set_model", "modeva.automation.pipeline.Pipeline", "modeva.models.MoCatBoostClassifier", "modeva.models.MoCatBoostRegressor", "modeva.models.MoClassifier", "modeva.models.MoDecisionTreeClassifier", "modeva.models.MoDecisionTreeRegressor", "modeva.models.MoElasticNet", "modeva.models.MoGAMINetClassifier", "modeva.models.MoGAMINetRegressor", "modeva.models.MoGLMTreeBoostClassifier", "modeva.models.MoGLMTreeBoostRegressor", "modeva.models.MoGLMTreeClassifier", "modeva.models.MoGLMTreeRegressor", "modeva.models.MoGradientBoostingClassifier", "modeva.models.MoGradientBoostingRegressor", "modeva.models.MoLGBMClassifier", "modeva.models.MoLGBMRegressor", "modeva.models.MoLogisticRegression", "modeva.models.MoMoEClassifier", "modeva.models.MoMoERegressor", "modeva.models.MoNeuralTreeClassifier", "modeva.models.MoNeuralTreeRegressor", "modeva.models.MoRandomForestClassifier", "modeva.models.MoRandomForestRegressor", "modeva.models.MoReLUDNNClassifier", "modeva.models.MoReLUDNNRegressor", "modeva.models.MoRegressor", "modeva.models.MoSKLearnClassifier", "modeva.models.MoSKLearnRegressor", "modeva.models.MoScoredClassifier", "modeva.models.MoScoredRegressor", "modeva.models.MoXGBClassifier", "modeva.models.MoXGBRegressor", "modeva.models.ModelTuneGridSearch", "modeva.models.ModelTuneOptuna", "modeva.models.ModelTunePSO", "modeva.models.ModelTuneRandomSearch", "modeva.models.modeva_arbitrary_classifier", "modeva.models.modeva_arbitrary_regressor", "modeva.models.modeva_sklearn_classifier", "modeva.models.modeva_sklearn_regressor", "modeva.testsuite.utils.slicing_utils.get_data_info", "modeva.utils.mlflow.clear_mlflow_home", "modeva.utils.mlflow.get_mlflow_home", "modeva.utils.mlflow.set_mlflow_home", "modeva.utils.results.ValidationResult", "Hyperparameter Tuning", "Interpretable Models", "Model Zoo", "Pipeline", "Validation Result", "Test Suite", "Utilities", "Model Wrappers", "Using Modeva", "Model Comparison", "Comparison for Classification", "Fairness Comparison", "Comparison for Regression", "Data Processing", "Basic Data Operations", "Data Quality (Drift Test)", "Data Quality (Outlier Detection)", "Data Summary", "Exploratory Data Analysis", "Feature Selection", "Outlier Detection", "Subsampling and Data Drift", "Model Explainability", "Global Explainability", "Local Explainability", "ALE (Accumulated Local Effects)", "Hstats (Friedman\u2019s H-statistic)", "ICE (Individual Conditional Expectation)", "LIME (Local Interpretable Model-Agnostic Explanation)", "PDP (Partial Dependence Plot)", "PFI (Permutation Feature Importance)", "SHAP (SHapley Additive exPlanations)", "Introduction", "Interpretable Models", "GAMI-Net", "Gradient Boosted Decision Trees", "Linear Tree and Gradient Boosted Linear Trees", "Generalized Linear Models", "Mixture of Experts (MoE)", "Neural Tree", "ReLU Neural Network", "Decision Tree", "Model Wrapping", "Diagnostic Suite", "Fairness", "Underfitting and Overfitting", "Performance and Residual Analysis", "Reliability", "Resilience", "Robustness", "Weakness Detection", "Model Training", "Register H2O Models", "Model Tuning", "Model Zoo and Leaderboard", "Model Wrappers", "MoDeVa Documentation", "Unused API Entries", "Computation times"], "titleterms": {"": [326, 329], "0": 83, "00": [11, 34, 40, 43, 48, 58, 62, 66, 70, 74, 77, 81, 83], "000": 83, "01": 52, "03": [27, 70], "04": 77, "054": 81, "06": 34, "07": [], "072": 34, "08": [], "09": 48, "1": [21, 22, 43, 77, 313, 315, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358], "10": 52, "11": [58, 81], "116": 48, "136": [], "14": [27, 74], "16": [62, 66], "18": [], "194": 11, "1d": [3, 60, 61, 79, 321], "2": [50, 51, 52, 62, 66, 70, 74, 81, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353, 356, 358], "210": 43, "2d": [3, 60, 61, 79, 321], "3": [48, 348, 353, 356, 358], "315": [], "331": [], "35": [], "368": 74, "371": 58, "3d": [3, 321], "4": [40, 58, 358], "431": 66, "45": 11, "468": 70, "47": 40, "5": [34, 358], "5000": 10, "54": 43, "59": 27, "8000": 10, "863": 77, "869": 52, "9": 11, "9000": 10, "946": 40, "962": 62, "996": 27, "One": [319, 328, 332], "The": 334, "_sourceauto_galleriesdata": 11, "_sourceauto_galleriesdev": 43, "_sourceauto_galleriesdev0_model": 27, "_sourceauto_galleriesdev1_extmodel": 34, "_sourceauto_galleriesdev3_hpo": 40, "_sourceauto_galleriesutil": 48, "_sourceauto_galleriesv": 83, "_sourceauto_galleriesval0_residu": 52, "_sourceauto_galleriesval1_perform": 58, "_sourceauto_galleriesval2_overfit": 62, "_sourceauto_galleriesval3_reli": 66, "_sourceauto_galleriesval4_resili": 70, "_sourceauto_galleriesval5_robust": 74, "_sourceauto_galleriesval6_fair": 77, "_sourceauto_galleriesval7_explain": 81, "abov": [5, 14], "absolut": [50, 51, 315], "access": 101, "accumul": [326, 328], "accuraci": [14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 54, 55, 56, 57, 313, 315], "activ": 6, "add": 42, "add_model": 187, "addit": [327, 334, 353], "address": [350, 351, 352], "adjust": 347, "advanc": [42, 56, 57, 353], "advantag": 339, "advers": 347, "against": [17, 18, 50, 51], "aggreg": 338, "agnost": [327, 331], "air": 347, "al": [79, 326, 328], "algorithm": [322, 328, 329, 330, 331, 332, 333, 334], "all": 42, "all_feature_nam": 102, "all_feature_typ": 103, "altern": 310, "analysi": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 50, 51, 54, 55, 56, 57, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 73, 75, 76, 82, 319, 321, 335, 337, 338, 339, 341, 342, 343, 348, 349, 350, 351, 352], "analyz": [50, 51], "anova": [337, 338, 341, 342], "api": [0, 360], "appli": 6, "applic": [347, 348, 349], "approach": [348, 350, 351, 352, 353], "arbitrari": [32, 358], "architectur": [341, 342, 343], "ask": 85, "assess": [348, 350], "attribut": [45, 337, 341, 342], "auc": 313, "autom": 257, "automat": 353, "avail": [10, 46], "backrefer": 87, "bandwidth": [313, 315], "bar": 46, "base": [4, 50, 51, 310, 319, 323, 342], "baselin": 80, "basic": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 54, 55, 56, 57, 64, 65, 68, 69, 72, 73, 76, 317, 337, 342], "batch": [60, 61], "benefit": 338, "best": [36, 37, 38, 39], "between": [21, 22, 347], "bike": [328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353], "bikeshar": 315, "bin": [317, 347, 353], "bin_numer": 104, "bivari": 321, "block_pars": 88, "boost": [23, 24, 338, 339], "build": [29, 30, 31, 32, 33], "built": [2, 12, 41, 317], "case": 338, "categor": [317, 320, 337, 352], "cblof": [8, 319, 323], "centric": [348, 350, 351, 352], "challeng": 349, "chang": [84, 320], "character": 348, "class": [310, 319], "classif": [13, 15, 17, 19, 21, 23, 25, 50, 54, 56, 60, 64, 68, 72, 76, 304, 313, 349], "classifi": [31, 32, 33], "clear_mlflow_hom": 299, "cluster": [21, 22, 50, 51, 319, 350, 351, 352], "coeffici": [13, 14, 322], "combin": 347, "compar": [54, 55], "compare_accuracy_t": 199, "compare_fair": 200, "compare_reli": 201, "compare_resili": 202, "compare_robust": 203, "compare_slicing_accuraci": 204, "compare_slicing_fair": 205, "compare_slicing_overfit": 206, "compare_slicing_reli": 207, "compare_slicing_robust": 208, "comparison": [56, 57, 60, 61, 64, 65, 68, 69, 72, 73, 76, 308, 312, 313, 314, 315, 319, 347, 348, 349, 350, 351, 352, 353], "complex": 348, "compon": 319, "comput": [11, 27, 34, 40, 43, 48, 52, 58, 62, 66, 70, 74, 77, 81, 83, 337, 342, 361], "conceptu": 335, "condit": [322, 330], "conduct": [60, 61], "configur": 42, "conform": 350, "connect": 348, "consider": [337, 342, 352], "constraint": [23, 24, 337, 338, 342], "continu": 351, "convert": 33, "coordin": [17, 18, 343], "correl": [3, 4, 321, 322], "coverag": 315, "creat": [29, 30, 31, 32, 33, 358], "credit": [313, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353], "cumul": 319, "curvatur": 348, "d": 6, "data": [2, 3, 5, 7, 9, 10, 21, 22, 29, 30, 31, 32, 33, 101, 105, 316, 317, 318, 319, 320, 321, 324, 348, 350, 351, 352, 358], "data_drift_test": 106, "dataset": [1, 2, 42, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 317], "deal": 10, "decis": [15, 16, 338, 344], "decomposit": [337, 338, 341, 342, 348], "defin": [5, 14], "definit": 347, "delet": 10, "delete_extra_data": 107, "delete_registed_test": 209, "delete_registered_data": 108, "delete_registered_model": 189, "depend": [79, 326, 332, 334], "depth": [50, 51, 338, 339, 342, 353], "detail": [328, 329, 330, 331, 332, 333, 334], "detect": [8, 59, 82, 101, 319, 323, 348, 353], "detect_outlier_cblof": 109, "detect_outlier_isolation_forest": 110, "detect_outlier_pca": 111, "develop": 41, "diagnos": [36, 37, 38, 39], "diagnose_accuracy_t": 210, "diagnose_fair": 211, "diagnose_mitigate_unfair_bin": 212, "diagnose_mitigate_unfair_threshold": 213, "diagnose_reli": 214, "diagnose_residual_analysi": 215, "diagnose_residual_clust": 216, "diagnose_residual_interpret": 217, "diagnose_resili": 218, "diagnose_robust": 219, "diagnose_slicing_accuraci": 220, "diagnose_slicing_fair": 221, "diagnose_slicing_overfit": 222, "diagnose_slicing_reli": 223, "diagnose_slicing_robust": 224, "diagnost": [29, 30, 31, 32, 33, 308, 346, 347, 350, 355], "diagram": 313, "differ": 319, "direct": 89, "discret": 351, "dispar": 347, "displai": 46, "display_test_result": 225, "distanc": [313, 315, 318, 351], "distribut": [318, 319, 324, 351, 352], "diverg": 351, "dnn": 343, "docs_resolv": 90, "document": 359, "download": 91, "drift": [7, 21, 22, 101, 318, 324, 351], "eda": 3, "eda_1d": 112, "eda_2d": 113, "eda_3d": 114, "eda_correl": 115, "eda_pca": 116, "eda_umap": 117, "effect": [13, 14, 19, 20, 21, 22, 25, 26, 326, 328, 337, 338, 341, 342], "empir": [319, 338, 348], "encod": 317, "encode_categor": 118, "energi": 318, "engin": [5, 348], "enhanc": 338, "ensembl": [25, 26, 338], "entri": 360, "error": [315, 348, 353], "estim": 348, "evalu": [347, 349], "exact": [327, 334], "exampl": [42, 86, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358], "execut": [5, 11, 14, 27, 34, 40, 43, 48, 52, 58, 62, 66, 70, 74, 77, 81, 83], "expect": 330, "experiment": 39, "expert": [21, 22, 341], "explain": [78, 79, 80, 82, 325, 326, 327], "explain_al": 226, "explain_hstatist": 227, "explain_lim": 228, "explain_pdp": 229, "explain_pfi": 230, "explain_shap": 231, "explan": [308, 327, 331, 334, 337], "explor": [101, 321], "exploratori": [3, 321], "export_report": 232, "extern": [28, 41, 317, 358], "extra": [10, 101], "extract": [17, 18], "f1": 313, "factor": 319, "fair": [75, 76, 82, 314, 347], "fbedk": 322, "featur": [4, 5, 13, 14, 17, 18, 19, 20, 21, 22, 25, 26, 50, 51, 60, 61, 79, 101, 320, 322, 326, 333, 334, 335, 337, 341, 342, 343, 347, 348], "feature_nam": 119, "feature_names_categor": 120, "feature_names_mix": 121, "feature_names_numer": 122, "feature_select_corr": 123, "feature_select_rcit": 124, "feature_select_xgbpfi": 125, "feature_typ": 126, "figur": 46, "file": [11, 27, 34, 40, 43, 48, 52, 58, 62, 66, 70, 74, 77, 81, 83], "first": 10, "fit": 355, "forest": [8, 50, 51, 319, 323, 350, 352], "formul": [338, 341, 351], "framework": 348, "frequent": 85, "friedman": [326, 329], "from": [2, 10, 11, 27, 34, 40, 43, 48, 52, 58, 62, 66, 70, 74, 77, 81, 83, 348], "full": 350, "function": [310, 337, 338, 341, 342], "galleri": 86, "gami": 337, "gaminet": [19, 20], "gap": 348, "gate": 341, "gbdt": 338, "gblt": [339, 342], "gen_galleri": 92, "gen_rst": 93, "gener": [46, 340, 348], "get": 10, "get_data": 128, "get_data_info": 298, "get_data_list": 129, "get_dataset": 233, "get_extra_data_list": 130, "get_interact": 234, "get_main_effect": 235, "get_mlflow_hom": 300, "get_model": [190, 236], "get_prediction_data": 131, "get_prediction_proba_data": 132, "get_preprocessor": 133, "get_protected_data": 134, "get_raw_data": 135, "get_x_y_data": 127, "glm": 340, "glmtree": [23, 24], "global": [15, 16, 19, 79, 326, 337, 338, 339, 340, 341, 342, 344], "gradient": [338, 339, 348], "grid": [36, 356], "group": [80, 347], "h": [79, 326, 329], "h2o": [29, 355], "handl": 317, "heatmap": 321, "hidden": [17, 18], "histogram": 319, "hoc": 308, "hpo": 39, "hstat": [326, 329], "hyperparamet": [35, 36, 37, 38, 39, 41, 303], "i": 353, "ic": 330, "identif": [350, 352], "identifi": 348, "impact": [347, 350, 352], "implement": [337, 342, 348], "import": [13, 14, 17, 18, 19, 20, 21, 22, 25, 26, 50, 51, 79, 322, 326, 333, 334, 337, 341, 342, 343, 353], "impute_miss": 136, "independ": 322, "index": 10, "individu": [330, 337, 338, 339, 341, 342, 343], "inher": 308, "initi": [42, 47], "input": 352, "instal": 100, "interact": [60, 61, 338], "interactive_exampl": 94, "interpret": [12, 13, 14, 15, 16, 19, 20, 21, 22, 41, 42, 50, 51, 304, 308, 327, 331, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349], "interpret_coef": 237, "interpret_effect": 238, "interpret_effects_moe_averag": 239, "interpret_fi": 240, "interpret_global_tre": 241, "interpret_llm_pc": 242, "interpret_llm_profil": 243, "interpret_llm_summari": 244, "interpret_llm_violin": 245, "interpret_local_fi": 246, "interpret_local_linear_fi": 247, "interpret_local_moe_weight": 248, "interpret_local_tre": 249, "interpret_moe_cluster_analysi": 250, "interv": [50, 51], "introduct": [335, 349, 353], "inverse_transform": 137, "is_split": 138, "isol": [8, 319, 323], "issu": [350, 352], "its": 46, "jensen": 351, "k": 319, "kei": [335, 353], "kernel": 80, "kernelshap": [327, 334], "kmeanstre": 319, "kolmogorov": 351, "last": [10, 17, 18], "layer": [17, 18], "leaderboard": [42, 191, 357], "learn": [42, 349, 350, 352], "lgbm": [23, 24, 54, 55], "lime": [80, 327, 331], "limit": [46, 338], "linear": [13, 14, 23, 24, 339, 340, 343], "linearshap": 327, "list": [46, 251], "list_model_nam": 192, "list_registered_data": 139, "list_registered_model": 193, "list_registered_test": 252, "llm": [17, 18, 343], "load": [2, 5, 10, 42, 101, 140, 317, 355], "load_csv": 141, "load_datafram": 142, "load_dataframe_train_test": 143, "load_preprocess": 144, "load_registered_data": 145, "load_registered_model": 194, "load_registered_test": 253, "load_spark": 146, "local": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 80, 319, 326, 327, 328, 331, 337, 338, 339, 340, 341, 342, 343, 344, 348], "log": 84, "logist": 13, "loss": [337, 342], "machin": [350, 352], "main": [13, 14, 25, 26, 338], "manag": [101, 305, 357], "manifest": 348, "manipul": 320, "margin": [318, 319], "mathemat": [338, 341], "mean": 315, "measur": [348, 349, 351], "method": [319, 323, 348], "methodologi": [319, 349], "metric": [54, 55, 314, 347, 349], "miss": 317, "mitig": [76, 347], "mixtur": [21, 22, 341], "ml": 42, "mlflow": [2, 42, 299, 300, 301], "mocatboostclassifi": 258, "mocatboostregressor": 259, "moclassifi": 260, "mode": [60, 61], "modecisiontreeclassifi": 261, "modecisiontreeregressor": 262, "model": [9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61, 64, 65, 73, 76, 82, 195, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 304, 305, 308, 310, 312, 325, 327, 331, 334, 336, 338, 340, 341, 342, 343, 345, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358], "modeltun": 356, "modeltunegridsearch": 290, "modeltuneoptuna": 291, "modeltunepso": 292, "modeltunerandomsearch": 293, "modelzoo": [42, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "modeva": [10, 29, 30, 31, 32, 33, 86, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 311, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 358, 359], "modeva_arbitrary_classifi": 294, "modeva_arbitrary_regressor": 295, "modeva_sklearn_classifi": 296, "modeva_sklearn_regressor": 297, "modul": 335, "moe": [21, 22, 341], "moelasticnet": 263, "mogaminetclassifi": 264, "mogaminetregressor": 265, "moglmtreeboostclassifi": 266, "moglmtreeboostregressor": 267, "moglmtreeclassifi": 268, "moglmtreeregressor": 269, "mogradientboostingclassifi": 270, "mogradientboostingregressor": 271, "molgbmclassifi": 272, "molgbmregressor": 273, "mologisticregress": 274, "momoeclassifi": 275, "momoeregressor": 276, "moneuraltreeclassifi": 277, "moneuraltreeregressor": 278, "monoton": [23, 24, 337, 338, 342], "morandomforestclassifi": 279, "morandomforestregressor": 280, "moregressor": 283, "moreludnn": [17, 18], "moreludnnclassifi": 281, "moreludnnregressor": 282, "moscoredclassifi": 286, "moscoredregressor": 287, "mosklearnclassifi": 284, "mosklearnregressor": 285, "moxgbclassifi": 288, "moxgbregressor": 289, "multivari": 348, "n_featur": 147, "name": [10, 46, 148], "nearest": 319, "need": 10, "neighbor": 319, "net": 337, "network": 343, "neural": [23, 24, 342, 343], "nois": 352, "nonconform": 350, "normal": 352, "notebook": 95, "number": 46, "numer": [317, 320], "one": [10, 46], "oot1": 10, "oot2": 10, "oot3": 10, "oper": [2, 4, 317], "optim": [38, 356], "option": 47, "optipng": 99, "optuna": 39, "outcom": 335, "outlier": [8, 101, 319, 323], "output": [17, 18], "overfit": [59, 60, 61, 82, 313, 315, 348], "pairwis": 338, "parallel": [17, 18, 343], "partial": [79, 326, 332], "particl": [38, 356], "partit": 348, "pca": [3, 8, 321, 323], "pdp": [326, 332], "perform": [53, 54, 55, 56, 57, 82, 313, 315, 347, 349], "permut": [79, 326, 333], "perturb": [50, 51, 352], "pfi": [4, 326, 333], "pipelin": [47, 257, 306], "plot": [13, 14, 17, 18, 25, 26, 46, 79, 321, 326, 332, 334, 337, 338, 341, 342, 343], "post": 308, "practic": [348, 352], "predict": [9, 33, 50, 51, 149, 337, 338, 339, 341, 342, 343, 350], "predictor": [50, 51], "prepar": [42, 317, 358], "preprocess": [5, 14, 101, 150, 317], "prerequisit": 100, "princip": 319, "proba": 50, "problemat": 348, "process": [5, 316, 338, 341], "profil": [17, 18, 343], "properti": [101, 305], "protect": 101, "psi": 351, "pso": 38, "purif": [337, 338, 342], "purpos": 349, "py_source_pars": 96, "pyspark": 30, "qualiti": [318, 319, 338], "quantil": [352, 353], "question": 85, "r": 315, "random": [6, 37, 50, 51, 350, 352, 356], "ratio": 347, "raw_data": 151, "rcit": [4, 322], "refer": [0, 319, 321, 322, 323, 326, 327, 329, 330, 333, 334], "region": [60, 61, 348], "regist": [2, 42, 152, 196, 254, 355], "registr": [42, 317], "registri": 305, "regress": [13, 14, 16, 18, 20, 22, 24, 26, 51, 55, 57, 61, 65, 69, 73, 304, 315, 349], "regressor": [31, 32, 33], "reliabl": [63, 64, 65, 82, 313, 315, 350], "relu": 343, "remedi": 348, "remov": 320, "represent": [337, 341, 342], "reset": [5, 6], "reset_preprocess": 153, "residu": [49, 50, 51, 82, 349], "resili": [67, 68, 69, 82, 313, 315, 351], "respons": [50, 51], "rest": [21, 22], "result": [8, 47, 302, 307, 338, 349], "retrain": [36, 37, 38, 39], "risk": 348, "robust": [71, 72, 73, 82, 313, 315, 348, 352], "row": 10, "run": [36, 37, 38, 39, 47, 355], "sampl": [6, 10, 21, 22, 80, 101, 313, 315], "sample_weight": 154, "save": [33, 46, 47, 355], "save_preprocess": 155, "scale": 317, "scale_numer": 156, "scatter": 321, "scikit": 42, "score": [33, 313, 315, 319, 350, 358], "scraper": 97, "script": [29, 30, 32], "search": [36, 37, 38, 356], "segment": 314, "select": [4, 101, 322], "sensit": 348, "set": [5, 6, 10, 42], "set_active_featur": 157, "set_active_sampl": 6, "set_dataset": 255, "set_feature_typ": 158, "set_inactive_featur": 159, "set_mlflow_hom": 301, "set_model": 256, "set_predict": 160, "set_prediction_proba": 161, "set_protected_data": 162, "set_protected_extra_data": 163, "set_random_split": 164, "set_raw_extra_data": 165, "set_sample_weight": 166, "set_target": 167, "set_task_typ": 168, "set_test_idx": 169, "set_train_idx": 170, "shannon": 351, "shap": [80, 327, 334], "shape": 171, "shaplei": [327, 334], "share": [328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353], "shoot": 100, "show": [10, 42], "simpl": 352, "simucredit": [328, 329, 330, 331, 332, 333, 334], "singl": 80, "sklearn": [31, 358], "slice": [56, 57, 60, 61, 64, 65, 72, 73, 76, 347, 348, 353], "slicing_util": 298, "smirnov": 351, "solut": [327, 334, 348], "sort": 98, "sound": 335, "sparsiti": 348, "special": [335, 338], "specif": 334, "sphinx_galleri": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "split": [10, 101, 350], "squar": 315, "stage": 338, "statist": [79, 320, 326, 329, 351], "step": [5, 14, 47, 341, 349], "strategi": [348, 350, 351, 352], "style": 31, "sub": 46, "subplot": 46, "subsampl": [6, 324], "subsample_random": 172, "suit": [29, 30, 31, 32, 33, 308, 346], "summari": [3, 5, 17, 18, 173, 317, 320, 334, 343], "supervis": [349, 350, 351, 352], "svm": 319, "swarm": [38, 356], "tabl": [17, 18, 343], "taiwan": [313, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353], "taiwancredit": 321, "task_typ": 174, "techniqu": 349, "test": [7, 21, 22, 29, 30, 31, 32, 33, 101, 308, 318, 322, 348, 352, 355], "test_i": 178, "test_predict": 175, "test_sample_weight": 176, "test_x": 177, "testsuit": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 298, 358], "theoret": 348, "threshold": 347, "through": [338, 351], "time": [11, 27, 34, 40, 43, 48, 52, 58, 62, 66, 70, 74, 77, 81, 83, 361], "to_df": 179, "total": [11, 27, 34, 40, 43, 48, 52, 58, 62, 66, 70, 74, 77, 81, 83], "tradeoff": 347, "tradit": 42, "train": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 42, 101, 197, 305, 348, 354, 355, 357], "train_al": 198, "train_i": 183, "train_predict": 180, "train_sample_weight": 181, "train_x": 182, "transform": [184, 342], "tree": [15, 16, 23, 24, 25, 26, 338, 339, 342, 344, 353], "treeshap": 327, "troubl": 100, "tune": [35, 36, 37, 38, 39, 41, 303, 356], "two": [328, 332], "type": 320, "umap": 3, "uncertainti": 348, "underfit": 348, "unfair": 76, "uniform": [352, 353], "univari": [321, 348], "unus": 360, "us": [8, 311, 353], "usag": [328, 329, 330, 331, 332, 333, 334, 356], "util": [44, 99, 298, 299, 300, 301, 302, 308, 309, 353], "valid": [82, 307, 358], "validationresult": [45, 46, 302], "valu": 317, "variabl": [50, 51, 317, 337, 350, 352], "verifi": 42, "view": 8, "visual": [46, 50, 51], "wai": [328, 332], "wasserstein": 351, "waterfal": 334, "weak": [348, 350, 351, 352, 353], "weakspot": [313, 315], "weight": [21, 22], "why": 353, "width": [50, 51], "worst": [313, 315], "wrap": [29, 30, 31, 32, 33, 42, 345, 358], "wrapper": [310, 358], "x": 185, "xgb": [4, 50, 51], "xgboost": [54, 55, 353], "xi": 3, "y": 186, "zoo": [305, 357]}})